(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{268:function(t,e,n){"use strict";n.r(e);var a=n(38),s=Object(a.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{align:"center"}},[n("br"),t._v(" "),n("a",{attrs:{href:"https://raiden.network/"}},[n("img",{attrs:{width:"400px",alt:"",src:"https://user-images.githubusercontent.com/35398162/54018436-ee3f6300-4188-11e9-9b4e-0666c44cda53.png"}})]),t._v(" "),n("br"),t._v("\n  Raiden Light Client SDK\n  "),n("br")]),t._v(" "),n("p",[t._v("The Raiden Light Client SDK is a "),n("a",{attrs:{href:"https://raiden.network",target:"_blank",rel:"noopener noreferrer"}},[t._v("Raiden Network"),n("OutboundLink")],1),t._v(" compatible client written in JavaScript/Typescript, capable of running in modern web3-enabled browsers, wallets and Node.js environments.")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("INFO:")]),t._v(" The Light Client SDK is "),n("strong",[t._v("work in progress")]),t._v(", doesn't work for token transfers yet and currently can only be used on the Ethereum "),n("strong",[t._v("Testnets")]),t._v(".")])]),t._v(" "),n("h2",{attrs:{id:"table-of-contents"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents","aria-hidden":"true"}},[t._v("#")]),t._v(" Table of Contents")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#about-the-project"}},[t._v("About The Project")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#getting-started"}},[t._v("Getting Started")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#connecting-to-a-raiden-test-network"}},[t._v("Connecting to a Raiden test network")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#using-the-sdk-in-a-private-chain-or-a-development-environment"}},[t._v("Using the SDK in a private chain or a development environment")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#subscribing-to-channel-observable-and-opening-your-first-channel"}},[t._v("Subscribing to channel$ observable and opening your first channel")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#funding-a-channel"}},[t._v("Funding a channel")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#paying-through-a-channel"}},[t._v("Paying through a channel")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#closing-a-channel"}},[t._v("Closing a channel")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#settling-a-channel"}},[t._v("Settling a channel")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#other-methods"}},[t._v("Other methods")])])])]),t._v(" "),n("li",[n("a",{attrs:{href:"#contributing"}},[t._v("Contributing")])]),t._v(" "),n("li",[n("a",{attrs:{href:"#license"}},[t._v("License")])])]),t._v(" "),n("h2",{attrs:{id:"about-the-project"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#about-the-project","aria-hidden":"true"}},[t._v("#")]),t._v(" About The Project")]),t._v(" "),n("p",[t._v("The "),n("a",{attrs:{href:"https://raiden.network/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Raiden Network"),n("OutboundLink")],1),t._v(" is an off-chain scaling solution, enabling near-instant, low-fee and scalable payments. Itâ€™s complementary to the Ethereum blockchain and works with any ERC20 compatible token.")]),t._v(" "),n("p",[t._v("The Raiden client code is available "),n("a",{attrs:{href:"https://github.com/raiden-network/raiden",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),n("OutboundLink")],1),t._v(" and has been "),n("a",{attrs:{href:"https://medium.com/raiden-network/red-eyes-mainnet-release-announcement-d48235bbef3c",target:"_blank",rel:"noopener noreferrer"}},[t._v("released for mainnet"),n("OutboundLink")],1),t._v(" with a limited alpha release of the Raiden Network in December 2018.")]),t._v(" "),n("p",[t._v("The main entry point of the SDK is the "),n("code",[t._v("Raiden")]),t._v(" class, which exposes an "),n("code",[t._v("async")]),t._v("/promise-based public API to fetch state, events and perform every action provided by the SDK on the blockchain and the Raiden Network.")]),t._v(" "),n("p",[t._v("Internally, the SDK architecture is a Redux-powered state machine, where every blockchain event, user request and off-chain message from other Raiden nodes and service providers follows an unified flow as actions on this state machine. These actions produce deterministic changes to the state and may cause other actions to be emitted as well. Asynchronous operations are handled by a pipeline of "),n("a",{attrs:{href:"https://redux-observable.js.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("redux-observable"),n("OutboundLink")],1),t._v(" epics, an "),n("a",{attrs:{href:"https://rxjs.dev/",target:"_blank",rel:"noopener noreferrer"}},[t._v("RxJs"),n("OutboundLink")],1),t._v(" async extension for Redux which unleashes the power, versatility and correctness of observables to Redux actions processing. These epics interact with the blockchain through "),n("a",{attrs:{href:"https://github.com/ethers-io/ethers.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("ethers.js"),n("OutboundLink")],1),t._v(" providers, signers and contracts, allowing seamless integration with different web3 providers, such as "),n("a",{attrs:{href:"https://metamask.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Metamask"),n("OutboundLink")],1),t._v(". Redux state is optionally persisted on "),n("code",[t._v("localStorage")]),t._v(" or emitted to be persisted somewhere else. Tests are implemented with "),n("a",{attrs:{href:"https://jestjs.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("Jest"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("p",[t._v("External off-chain communication with the Raiden Network is provided by a dedicated federation of community-provided "),n("a",{attrs:{href:"https://matrix.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("matrix.org"),n("OutboundLink")],1),t._v(" homeservers, accessed through "),n("a",{attrs:{href:"https://github.com/matrix-org/matrix-js-sdk",target:"_blank",rel:"noopener noreferrer"}},[t._v("matrix-js-sdk"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("h3",{attrs:{id:"architecture-diagram"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#architecture-diagram","aria-hidden":"true"}},[t._v("#")]),t._v(" Architecture diagram")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("            +---------+---------+\n            |                   |\n            |    Raiden SDK     |\n            |                   |\n            +----+----+----+----+\n            |         |         |      +------------+\n         +--+  redux  +  epics  +------+ Matrix.org |\n         |  |         |         |      +-----+------+\n         |  +---------+-----+---+            |\n         |                  |          +-----+------+\n+--------+-------+   +------+------+   |   Raiden   |\n|  localStorage  |   |  ethers.js  |   |   Network  |\n+----------------+   +------+------+   +------------+\n                            |\n                     +------+------+\n                     |  ethereum   |\n                     +-------------+\n                     ```\n\nA technical deep dive into the SDK architecture, technologies, tips and details on the design goals and decisions can be found in the [project's Wiki page](https://github.com/raiden-network/light-client/wiki/SDK-Development). Reading it is highly recommended to anyone wishing to better understand how the Raiden Light Client works under the hood or to contribute to it, though not required to use this library as a dApp developer.\n\n## Getting Started\n\n```bash\nnpm install <raiden_npm_package>\n")])])]),n("p",[t._v("Then in your JavaScript or TypeScript project:")]),t._v(" "),n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Raiden "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'raiden-ts'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n# "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" factory\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" raiden "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" Raiden"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("web3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentProvider"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" localStorage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("This async factory is required as a lot of initialization code is asynchronous, and we want to provide simpler building blocks for you to get from zero to iterating with the Raiden Network through this SDK in the simplest way possible. Despite that, if you're brave enough or have the need, you can always create the instances and fill the constructor parameters by yourself. Just be very careful to persist and rehydrate the state and constants correctly before starting.")]),t._v(" "),n("p",[t._v("After you're done, you may want to call "),n("code",[t._v("raiden.stop()")]),t._v(" to trigger all observables to complete and streams to be unsubscribed. It's not required though, as state changes are atomic (non-async) and Raiden can be rehydrated from any intermediary state. However, if you finish before an asynchronous operation was completed, you may need to re-send it. e.g. if you call "),n("code",[t._v("raiden.closeChannel")]),t._v(" and your app exits before the transaction was sent and the promise resolved, your channel will be left in the "),n("code",[t._v("closing")]),t._v(" state (as state was already notified and persisted that this channel was about to be closed and couldn't be used anymore), and you may need to call "),n("code",[t._v("closeChannel")]),t._v(" again to actually send the transaction (even over the "),n("code",[t._v("closing")]),t._v(" state) and wait until it is mined and your channel actually becomes "),n("code",[t._v("closed")]),t._v(".")]),t._v(" "),n("p",[t._v("Once you got your "),n("code",[t._v("raiden")]),t._v(" instance, the public API should be pretty straightforward: most of the methods return Promises, allowing you to async/await on them, and output comes either from the resolved value or public Observables which exposes current state and state changes to the world on common parameters (like token address instead of specific token network contract address).")]),t._v(" "),n("p",[t._v("Channels are mostly specified through the first two parameters: "),n("code",[t._v("token")]),t._v(" and "),n("code",[t._v("partner")]),t._v(" addresses, as Raiden contracts currently limit the number of channels in open at any given time to some specific partner to 1.")]),t._v(" "),n("h3",{attrs:{id:"connecting-to-a-raiden-test-network"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#connecting-to-a-raiden-test-network","aria-hidden":"true"}},[t._v("#")]),t._v(" Connecting to a Raiden test network")]),t._v(" "),n("p",[t._v("Connecting to a Raiden test network is automatically done by the Light Client SDK. The SDK will automatically connect to the proper Raiden network based on the detected network id on your web3 provider.")]),t._v(" "),n("p",[t._v("The SDK provides out of the box support for the deployed networks on Ropsten, Rinkeby, Kovan, and Mainnet.")]),t._v(" "),n("p",[t._v("If you want you can also use the Light Client SDK to connect to networks that are not officially supported.")]),t._v(" "),n("p",[t._v("To connect for example on a privately deployed Raiden network,\nyou can initialize the SDK as usual, and pass the Contract Info as the fourth parameter of the create function.")]),t._v(" "),n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Raiden "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'raiden-ts'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n# "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" factory\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" raiden "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" Raiden"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("web3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("currentProvider"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" localStorage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" contractInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("Contract info is a JSON file that is generated when you deploy "),n("a",{attrs:{href:"https://github.com/raiden-network/raiden-contracts",target:"_blank",rel:"noopener noreferrer"}},[t._v("raiden-contracts"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("h3",{attrs:{id:"using-the-sdk-in-a-private-chain-or-a-development-environment"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#using-the-sdk-in-a-private-chain-or-a-development-environment","aria-hidden":"true"}},[t._v("#")]),t._v(" Using the SDK in a private chain or a development environment")]),t._v(" "),n("p",[t._v("If you want to use the SDK in a private chain or a development environment, you can follow "),n("a",{attrs:{href:"https://github.com/raiden-network/light-client/wiki/Using-the-SDK-in-a-private-chain-or-a-development-environment",target:"_blank",rel:"noopener noreferrer"}},[t._v("this guide"),n("OutboundLink")],1),t._v(".")]),t._v(" "),n("h3",{attrs:{id:"subscribing-to-channel-observable-and-opening-your-first-channel"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#subscribing-to-channel-observable-and-opening-your-first-channel","aria-hidden":"true"}},[t._v("#")]),t._v(" Subscribing to channel$ observable and opening your first channel")]),t._v(" "),n("p",[t._v("To connect to the Raiden Network, you simply make a transaction to open a channel on-chain with a given partner on a registered token network. You can also specify a "),n("code",[t._v("settleTimeout")]),t._v(", which will be the number of blocks you and your partner will need to wait after closing a channel to be able to settle it and actually get the due tokens back. "),n("code",[t._v("settleTimeout")]),t._v(" defaults to "),n("code",[t._v("500")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("import { RaidenChannels } from 'raiden-ts';\n\n# logs channels$ changes\nraiden.channels$.subscribe((channels: RaidenChannels) => console.log('Raiden channels:', channels));\n\n# get list of registered tokens\nawait raiden.getTokenList();\n# ['0xtoken']\n\n# open a Raiden payment channel!\nconst openTxHash = await raiden.openChannel('0xtoken', '0xpartner');\n\n## output:\n# Raiden channels: {\n#   '0xtoken': {\n#     '0xpartner': {\n#       state: 'open',\n#       totalDeposit: BigNumber(0),\n#       partnerDeposit: BigNumber(0),\n#       id: 123,\n#       settleTimeout: 500,\n#       openBlock: 5123\n#     }\n#   }\n# }\n")])])]),n("h3",{attrs:{id:"funding-a-channel"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#funding-a-channel","aria-hidden":"true"}},[t._v("#")]),t._v(" Funding a channel")]),t._v(" "),n("p",[t._v("If you intend to perform payments via a channel, you need to first lock a given amount of tokens in it. Note that these tokens aren't paid yet to the partner, and the custody is fully yours. It just locks this amount on-chain so your partner can be sure a given payment can be claimed.")]),t._v(" "),n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[t._v("raiden"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("depositChannel")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0xtoken'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0xpartner'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n# Raiden channels"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#   "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0xtoken'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0xpartner'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#       state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'closed'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n#       totalDeposit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("BigNumber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n#       partnerDeposit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("BigNumber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n#       id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n#       settleTimeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n#       openBlock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5123")]),t._v("\n#     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n#   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n# "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"paying-through-a-channel"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#paying-through-a-channel","aria-hidden":"true"}},[t._v("#")]),t._v(" Paying through a channel")]),t._v(" "),n("p",[t._v("This is where the fun begins: off-chain payments! ...but we're still working on it on the Light Client ðŸ˜‰")]),t._v(" "),n("h3",{attrs:{id:"closing-a-channel"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#closing-a-channel","aria-hidden":"true"}},[t._v("#")]),t._v(" Closing a channel")]),t._v(" "),n("p",[t._v("Only close a channel if you really don't plan on using the respective channel anymore.")]),t._v(" "),n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" raiden"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("closeChannel")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0xtoken'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0xpartner'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n# resolves to close transaction hash"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" after it "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" mined\n\n## channels$ output"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n# Raiden channels"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#   "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0xtoken'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#     "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0xpartner'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#       state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'closed'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n#       totalDeposit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("BigNumber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n#       partnerDeposit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("BigNumber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n#       id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n#       settleTimeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n#       openBlock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5123")]),t._v("\n#       closeBlock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5999")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n#     "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n#   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n# "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"settling-a-channel"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#settling-a-channel","aria-hidden":"true"}},[t._v("#")]),t._v(" Settling a channel")]),t._v(" "),n("p",[t._v("As we can't perform a cooperative close yet, once your channel is closed, there is a grace period of "),n("code",[t._v("settleTimeout")]),t._v(" blocks during which the counterpart can claim a higher signed balance proof sent by you. As the Light Client doesn't receive payments yet, there's no need to worry here, only the tokens you paid can be claimed by your partner. After "),n("code",[t._v("settleTimeout")]),t._v(" blocks, your channel's state automatically becomes "),n("code",[t._v("settleable")]),t._v(", which is like "),n("code",[t._v("closed")]),t._v(" but when settle can be called:")]),t._v(" "),n("div",{staticClass:"language-typescript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-typescript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" raiden"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("settleChannel")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0xtoken'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0xpartner'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n# resolves to settle transaction hash"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" after it "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" mined\n\n## channels$ output"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n# Raiden channels"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n#   "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0xtoken'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n# "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("Once channel is settled, it's gone from state, and the cycle can restart.")]),t._v(" "),n("h3",{attrs:{id:"other-methods"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#other-methods","aria-hidden":"true"}},[t._v("#")]),t._v(" Other methods")]),t._v(" "),n("p",[t._v("There's a couple of more public methods exposed through main Raiden Light Client API. It aims to provide all necessary blockchain interaction methods and events related to Raiden, so you don't need to worry about web3 and Raiden contracts directly. Also, we're working on exposing more events and informational methods to the world, so stay tuned and keep an eye out for the main public API file: "),n("a",{attrs:{href:"./src/raiden.ts"}},[t._v("raiden.ts")]),t._v(". It's very easy to understand and docstrings are all over the place.")]),t._v(" "),n("h2",{attrs:{id:"contributing"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#contributing","aria-hidden":"true"}},[t._v("#")]),t._v(" Contributing")]),t._v(" "),n("p",[t._v("Any contributions you make are "),n("strong",[t._v("greatly appreciated")]),t._v(". Refer to the "),n("router-link",{attrs:{to:"/CONTRIBUTING.html"}},[t._v("Raiden Light Client Development Guide")]),t._v(" for details on how to comply with our codestyle, patterns and quality requirements.")],1),t._v(" "),n("h2",{attrs:{id:"license"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#license","aria-hidden":"true"}},[t._v("#")]),t._v(" License")]),t._v(" "),n("p",[t._v("Distributed under the "),n("a",{attrs:{href:"../LICENSE"}},[t._v("MIT License")]),t._v(".")])])},[],!1,null,null,null);e.default=s.exports}}]);