(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{211:function(e,t,r){"use strict";r.r(t);var n=r(0),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"class-raiden"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#class-raiden"}},[e._v("#")]),e._v(" Class: Raiden")]),e._v(" "),r("h2",{attrs:{id:"hierarchy"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#hierarchy"}},[e._v("#")]),e._v(" Hierarchy")]),e._v(" "),r("ul",[r("li",[r("strong",[e._v("Raiden")])])]),e._v(" "),r("h2",{attrs:{id:"constructors"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#constructors"}},[e._v("#")]),e._v(" Constructors")]),e._v(" "),r("h3",{attrs:{id:"constructor"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#constructor"}},[e._v("#")]),e._v(" constructor")]),e._v(" "),r("p",[e._v("+ "),r("strong",[e._v("new Raiden")]),e._v("("),r("code",[e._v("provider")]),e._v(": JsonRpcProvider, "),r("code",[e._v("network")]),e._v(": Network, "),r("code",[e._v("signer")]),e._v(": Signer, "),r("code",[e._v("contractsInfo")]),e._v(": "),r("router-link",{attrs:{to:"/interfaces/contractsinfo.html"}},[e._v("ContractsInfo")]),e._v(", "),r("code",[e._v("state")]),e._v(": "),r("router-link",{attrs:{to:"/interfaces/raidenstate.html"}},[e._v("RaidenState")]),e._v("): "),r("em",[r("router-link",{attrs:{to:"/classes/raiden.html"}},[e._v("Raiden")])],1)],1),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L177",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:177"),r("OutboundLink")],1)])]),e._v(" "),r("p",[r("strong",[e._v("Parameters:")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("provider")])]),e._v(" "),r("td",[e._v("JsonRpcProvider")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("network")])]),e._v(" "),r("td",[e._v("Network")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("signer")])]),e._v(" "),r("td",[e._v("Signer")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("contractsInfo")])]),e._v(" "),r("td",[r("router-link",{attrs:{to:"/interfaces/contractsinfo.html"}},[e._v("ContractsInfo")])],1)]),e._v(" "),r("tr",[r("td",[r("code",[e._v("state")])]),e._v(" "),r("td",[r("router-link",{attrs:{to:"/interfaces/raidenstate.html"}},[e._v("RaidenState")])],1)])])]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[r("router-link",{attrs:{to:"/classes/raiden.html"}},[e._v("Raiden")])],1)]),e._v(" "),r("h2",{attrs:{id:"properties"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#properties"}},[e._v("#")]),e._v(" Properties")]),e._v(" "),r("h3",{attrs:{id:"action"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#action"}},[e._v("#")]),e._v(" action$")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("action$")]),e._v(": "),r("em",[e._v("Observable‹"),r("router-link",{attrs:{to:"/globals.html#raidenaction"}},[e._v("RaidenAction")]),e._v("›")],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L112",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:112"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("action$ exposes the internal events pipeline. It's intended for debugging, and its interface\nmust not be relied on, as its actions interfaces and structures can change without warning.")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"channels"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#channels"}},[e._v("#")]),e._v(" channels$")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("channels$")]),e._v(": "),r("em",[e._v("Observable‹"),r("router-link",{attrs:{to:"/interfaces/raidenchannels.html"}},[e._v("RaidenChannels")]),e._v("›")],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L123",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:123"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("channels$ is public interface, exposing a view of the currently known channels\nIts format is expected to be kept backwards-compatible, and may be relied on")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"private-deps"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#private-deps"}},[e._v("#")]),e._v(" "),r("code",[e._v("Private")]),e._v(" deps")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("deps")]),e._v(": "),r("em",[r("router-link",{attrs:{to:"/interfaces/raidenepicdeps.html"}},[e._v("RaidenEpicDeps")])],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L106",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:106"),r("OutboundLink")],1)])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"private-optional-epicmiddleware"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#private-optional-epicmiddleware"}},[e._v("#")]),e._v(" "),r("code",[e._v("Private")]),e._v(" "),r("code",[e._v("Optional")]),e._v(" epicMiddleware")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("epicMiddleware")]),e._v("? : "),r("em",[e._v("EpicMiddleware‹"),r("router-link",{attrs:{to:"/globals.html#raidenaction"}},[e._v("RaidenAction")]),e._v(", "),r("router-link",{attrs:{to:"/globals.html#raidenaction"}},[e._v("RaidenAction")]),e._v(", "),r("router-link",{attrs:{to:"/interfaces/raidenstate.html"}},[e._v("RaidenState")]),e._v(", "),r("router-link",{attrs:{to:"/interfaces/raidenepicdeps.html"}},[e._v("RaidenEpicDeps")]),e._v("› | null")],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L172",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:172"),r("OutboundLink")],1)])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"events"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[e._v("#")]),e._v(" events$")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("events$")]),e._v(": "),r("em",[e._v("Observable‹"),r("router-link",{attrs:{to:"/globals.html#raidenevent"}},[e._v("RaidenEvent")]),e._v("›")],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L129",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:129"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("A subset ot RaidenActions exposed as public events.\nThe interface of the objects emitted by this Observable are expected not to change internally,\nbut more/new events may be added over time.")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"gettokeninfo"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gettokeninfo"}},[e._v("#")]),e._v(" getTokenInfo")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("getTokenInfo")]),e._v(": "),r("em",[e._v("function")])]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L162",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:162"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Get constant token details from token contract, caches it.\nRejects only if 'token' contract doesn't define totalSupply and decimals methods.\nname and symbol may be undefined, as they aren't actually part of ERC20 standard, although\nvery common and defined on most token contracts.")]),e._v(" "),r("p",[r("strong",[r("code",[e._v("param")])]),e._v(" address to fetch info from")]),e._v(" "),r("p",[r("strong",[r("code",[e._v("returns")])]),e._v(" token info")]),e._v(" "),r("h4",{attrs:{id:"type-declaration"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-declaration"}},[e._v("#")]),e._v(" Type declaration:")]),e._v(" "),r("p",[e._v("▸ ("),r("code",[e._v("this")]),e._v(": "),r("router-link",{attrs:{to:"/classes/raiden.html"}},[e._v("Raiden")]),e._v(", "),r("code",[e._v("token")]),e._v(": string): "),r("em",[e._v("Promise‹object›")])],1),e._v(" "),r("p",[r("strong",[e._v("Parameters:")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("this")])]),e._v(" "),r("td",[r("router-link",{attrs:{to:"/classes/raiden.html"}},[e._v("Raiden")])],1)]),e._v(" "),r("tr",[r("td",[r("code",[e._v("token")])]),e._v(" "),r("td",[e._v("string")])])])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"private-pfslist"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#private-pfslist"}},[e._v("#")]),e._v(" "),r("code",[e._v("Private")]),e._v(" pfsList$")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("pfsList$")]),e._v(": "),r("em",[e._v("ReplaySubject‹keyof Address[]›")])]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L151",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:151"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Store latest seen pfsListUpdated action payload for findPFS")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"resolvename"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#resolvename"}},[e._v("#")]),e._v(" resolveName")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("resolveName")]),e._v(": "),r("em",[e._v("function")])]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L141",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:141"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Expose ether's Provider.resolveName for ENS support")]),e._v(" "),r("h4",{attrs:{id:"type-declaration-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-declaration-2"}},[e._v("#")]),e._v(" Type declaration:")]),e._v(" "),r("p",[e._v("▸ ("),r("code",[e._v("name")]),e._v(": string): "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/interfaces/addressb.html#address"}},[e._v("Address")]),e._v("›")],1)]),e._v(" "),r("p",[r("strong",[e._v("Parameters:")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("name")])]),e._v(" "),r("td",[e._v("string")])])])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"state"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#state"}},[e._v("#")]),e._v(" state$")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("state$")]),e._v(": "),r("em",[e._v("Observable‹"),r("router-link",{attrs:{to:"/interfaces/raidenstate.html"}},[e._v("RaidenState")]),e._v("›")],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L118",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:118"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("state$ is exposed only so user can listen to state changes and persist them somewhere else,\nin case they didn't use the Storage overload for the storageOrState argument of "),r("code",[e._v("create")]),e._v(".\nFormat/content of the emitted objects are subject to changes and not part of the public API")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"private-store"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#private-store"}},[e._v("#")]),e._v(" "),r("code",[e._v("Private")]),e._v(" store")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("store")]),e._v(": "),r("em",[e._v("Store‹"),r("router-link",{attrs:{to:"/interfaces/raidenstate.html"}},[e._v("RaidenState")]),e._v(", "),r("router-link",{attrs:{to:"/globals.html#raidenaction"}},[e._v("RaidenAction")]),e._v("›")],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L105",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:105"),r("OutboundLink")],1)])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"transfers"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#transfers"}},[e._v("#")]),e._v(" transfers$")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("transfers$")]),e._v(": "),r("em",[e._v("Observable‹"),r("router-link",{attrs:{to:"/interfaces/raidensenttransfer.html"}},[e._v("RaidenSentTransfer")]),e._v("›")],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L136",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:136"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Observable of completed and pending transfers\nEvery time a transfer state is updated, it's emitted here. 'secrethash' property is unique and\nmay be used as identifier to know which transfer got updated.")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"userdeposittokenaddress"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#userdeposittokenaddress"}},[e._v("#")]),e._v(" userDepositTokenAddress")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("userDepositTokenAddress")]),e._v(": "),r("em",[e._v("function")])]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L146",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:146"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("The address of the token that is used to pay the services.")]),e._v(" "),r("h4",{attrs:{id:"type-declaration-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#type-declaration-3"}},[e._v("#")]),e._v(" Type declaration:")]),e._v(" "),r("p",[e._v("▸ (): "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/interfaces/addressb.html#address"}},[e._v("Address")]),e._v("›")],1)]),e._v(" "),r("h2",{attrs:{id:"accessors"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#accessors"}},[e._v("#")]),e._v(" Accessors")]),e._v(" "),r("h3",{attrs:{id:"address"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#address"}},[e._v("#")]),e._v(" address")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("get address")]),e._v("(): "),r("em",[r("router-link",{attrs:{to:"/interfaces/addressb.html#address"}},[e._v("Address")])],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L532",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:532"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Get current account address")]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[r("router-link",{attrs:{to:"/interfaces/addressb.html#address"}},[e._v("Address")])],1)]),e._v(" "),r("p",[e._v("Instance address")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"config"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#config"}},[e._v("#")]),e._v(" config")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("get config")]),e._v("(): "),r("em",[r("router-link",{attrs:{to:"/interfaces/raidenconfig.html"}},[e._v("RaidenConfig")])],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L559",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:559"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Getter for current Raiden Config")]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[r("router-link",{attrs:{to:"/interfaces/raidenconfig.html"}},[e._v("RaidenConfig")])],1)]),e._v(" "),r("p",[e._v("Current Raiden config")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"network"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#network"}},[e._v("#")]),e._v(" network")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("get network")]),e._v("(): "),r("em",[e._v("Network")])]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L541",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:541"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Get current network from provider")]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("Network")])]),e._v(" "),r("p",[e._v("Network object containing blockchain's name & chainId")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"started"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#started"}},[e._v("#")]),e._v(" started")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("get started")]),e._v("(): "),r("em",[e._v("boolean | undefined")])]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L508",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:508"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Gets the running state of the instance")]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("boolean | undefined")])]),e._v(" "),r("p",[e._v("undefined if not yet started, true if running, false if already stopped")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"private-state"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#private-state"}},[e._v("#")]),e._v(" "),r("code",[e._v("Private")]),e._v(" state")]),e._v(" "),r("p",[e._v("• "),r("strong",[e._v("get state")]),e._v("(): "),r("em",[r("router-link",{attrs:{to:"/interfaces/raidenstate.html"}},[e._v("RaidenState")])],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L523",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:523"),r("OutboundLink")],1)])]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[r("router-link",{attrs:{to:"/interfaces/raidenstate.html"}},[e._v("RaidenState")])],1)]),e._v(" "),r("h2",{attrs:{id:"methods"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),r("h3",{attrs:{id:"closechannel"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#closechannel"}},[e._v("#")]),e._v(" closeChannel")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("closeChannel")]),e._v("("),r("code",[e._v("token")]),e._v(": string, "),r("code",[e._v("partner")]),e._v(": string): "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/globals.html#const-hash"}},[e._v("Hash")]),e._v("›")],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L703",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:703"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Close channel between us and partner on tokenNetwork for token\nThis method will fail if called on a channel not in 'opened' or 'closing' state.\nWhen calling this method on an 'opened' channel, its state becomes 'closing', and from there\non, no payments can be performed on the channel. If for any reason the closeChannel\ntransaction fails, channel's state stays as 'closing', and this method can be called again\nto retry sending 'closeChannel' transaction. After it's successful, channel becomes 'closed',\nand can be settled after 'settleTimeout' blocks (when it then becomes 'settleable').")]),e._v(" "),r("p",[r("strong",[e._v("Parameters:")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("token")])]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td",[e._v("Token address on currently configured token network registry")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("partner")])]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td",[e._v("Partner address")])])])]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/globals.html#const-hash"}},[e._v("Hash")]),e._v("›")],1)]),e._v(" "),r("p",[e._v("txHash of closeChannel call, iff it succeeded")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"depositchannel"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#depositchannel"}},[e._v("#")]),e._v(" depositChannel")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("depositChannel")]),e._v("("),r("code",[e._v("token")]),e._v(": string, "),r("code",[e._v("partner")]),e._v(": string, "),r("code",[e._v("amount")]),e._v(": BigNumberish): "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/globals.html#const-hash"}},[e._v("Hash")]),e._v("›")],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L661",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:661"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Deposit tokens on channel between us and partner on tokenNetwork for token")]),e._v(" "),r("p",[r("strong",[e._v("Parameters:")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("token")])]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td",[e._v("Token address on currently configured token network registry")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("partner")])]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td",[e._v("Partner address")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("amount")])]),e._v(" "),r("td",[e._v("BigNumberish")]),e._v(" "),r("td",[e._v("Number of tokens to deposit on channel")])])])]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/globals.html#const-hash"}},[e._v("Hash")]),e._v("›")],1)]),e._v(" "),r("p",[e._v("txHash of setTotalDeposit call, iff it succeeded")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"deposittoudc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#deposittoudc"}},[e._v("#")]),e._v(" depositToUDC")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("depositToUDC")]),e._v("("),r("code",[e._v("amount")]),e._v(": BigNumberish): "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/globals.html#const-hash"}},[e._v("Hash")]),e._v("›")],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L1039",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:1039"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Deposits the amount to the UserDeposit contract with the target/signer as a beneficiary.\nThe deposited amount can be used as a collateral in order to sign valid IOUs that will\nbe accepted by the Services.")]),e._v(" "),r("p",[e._v("Throws an error, in the following cases:\n"),r("ol",[r("li",[e._v("The amount specified equals to zero")]),e._v(" "),r("li",[e._v("The target has an insufficient token balance")]),e._v(" "),r("li",[e._v('The "approve" transaction fails with an error')]),e._v(" "),r("li",[e._v('The "deposit" transaction fails with an error')])])]),e._v(" "),r("p",[r("strong",[e._v("Parameters:")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("amount")])]),e._v(" "),r("td",[e._v("BigNumberish")]),e._v(" "),r("td",[e._v("The amount to deposit on behalf of the target/beneficiary.")])])])]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/globals.html#const-hash"}},[e._v("Hash")]),e._v("›")],1)]),e._v(" "),r("p",[e._v("transaction hash")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"findpfs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#findpfs"}},[e._v("#")]),e._v(" findPFS")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("findPFS")]),e._v("(): "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/interfaces/pfs.html"}},[e._v("PFS")]),e._v("[]›")],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L962",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:962"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Returns a sorted array of info of available PFS")]),e._v(" "),r("p",[e._v("It uses data polled from ServiceRegistry, which is available only when config.pfs is\nundefined, instead of set or disabled (null), and will reject if not.\nIt can reject if the validated list is empty, meaning we can be out-of-sync (we're outdated or\nthey are) with PFSs deployment, or no PFS is available on this TokenNetwork/blockchain.")]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/interfaces/pfs.html"}},[e._v("PFS")]),e._v("[]›")],1)]),e._v(" "),r("p",[e._v("Promise to array of PFS, which is the interface which describes a PFS")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"findroutes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#findroutes"}},[e._v("#")]),e._v(" findRoutes")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("findRoutes")]),e._v("("),r("code",[e._v("token")]),e._v(": string, "),r("code",[e._v("target")]),e._v(": string, "),r("code",[e._v("value")]),e._v(": BigNumberish, "),r("code",[e._v("options")]),e._v(": object): "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/globals.html#raidenpaths"}},[e._v("RaidenPaths")]),e._v("›")],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L920",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:920"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Request a path from PFS")]),e._v(" "),r("p",[e._v("If a direct route is possible, it'll be returned. Else if PFS is set up, a request will be\nperformed and the cleaned/validated path results will be resolved.\nElse, if no route can be found, promise is rejected with respective error.")]),e._v(" "),r("p",[r("strong",[e._v("Parameters:")])]),e._v(" "),r("p",[e._v("▪ "),r("strong",[e._v("token")]),e._v(": "),r("em",[e._v("string")])]),e._v(" "),r("p",[e._v("Token address on currently configured token network registry")]),e._v(" "),r("p",[e._v("▪ "),r("strong",[e._v("target")]),e._v(": "),r("em",[e._v("string")])]),e._v(" "),r("p",[e._v("Target address (must be getAvailability before)")]),e._v(" "),r("p",[e._v("▪ "),r("strong",[e._v("value")]),e._v(": "),r("em",[e._v("BigNumberish")])]),e._v(" "),r("p",[e._v("Minimum capacity required on routes")]),e._v(" "),r("p",[e._v("▪"),r("code",[e._v("Default value")]),e._v(" "),r("strong",[e._v("options")]),e._v(": "),r("em",[e._v("object")]),e._v("=  {}")]),e._v(" "),r("p",[e._v("Optional parameters")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("pfs?")])]),e._v(" "),r("td",[r("router-link",{attrs:{to:"/interfaces/raidenpfs.html"}},[e._v("RaidenPFS")])],1),e._v(" "),r("td",[e._v("Use this PFS instead of configured or automatically choosen ones")])])])]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/globals.html#raidenpaths"}},[e._v("RaidenPaths")]),e._v("›")],1)]),e._v(" "),r("p",[e._v("A promise to returned routes/paths result")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"getavailability"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#getavailability"}},[e._v("#")]),e._v(" getAvailability")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("getAvailability")]),e._v("("),r("code",[e._v("address")]),e._v(": string): "),r("em",[e._v("Promise‹object›")])]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L768",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:768"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Returns object describing address's users availability on transport\nAfter calling this method, any further presence update to valid transport peers of this\naddress will trigger a corresponding MatrixPresenceUpdateAction on events$")]),e._v(" "),r("p",[r("strong",[e._v("Parameters:")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("address")])]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td",[e._v("checksummed address to be monitored")])])])]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("Promise‹object›")])]),e._v(" "),r("p",[e._v("Promise to object describing availability and last event timestamp")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"getbalance"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#getbalance"}},[e._v("#")]),e._v(" getBalance")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("getBalance")]),e._v("("),r("code",[e._v("address?")]),e._v(": undefined | string): "),r("em",[e._v("Promise‹BigNumber›")])]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L578",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:578"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Get ETH balance for given address or self")]),e._v(" "),r("p",[r("strong",[e._v("Parameters:")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("address?")])]),e._v(" "),r("td",[e._v("undefined | string")]),e._v(" "),r("td",[e._v("Optional target address. If omitted, gets own balance")])])])]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("Promise‹BigNumber›")])]),e._v(" "),r("p",[e._v("BigNumber of ETH balance")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"getblocknumber"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#getblocknumber"}},[e._v("#")]),e._v(" getBlockNumber")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("getBlockNumber")]),e._v("(): "),r("em",[e._v("Promise‹number›")])]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L550",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:550"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Returns a promise to current block number, as seen in provider and state")]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("Promise‹number›")])]),e._v(" "),r("p",[e._v("Promise to current block number")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"gettokenbalance"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gettokenbalance"}},[e._v("#")]),e._v(" getTokenBalance")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("getTokenBalance")]),e._v("("),r("code",[e._v("token")]),e._v(": string, "),r("code",[e._v("address?")]),e._v(": undefined | string): "),r("em",[e._v("Promise‹BigNumber›")])]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L591",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:591"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Get token balance and token decimals for given address or self")]),e._v(" "),r("p",[r("strong",[e._v("Parameters:")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("token")])]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td",[e._v("Token address to fetch balance. Must be one of the monitored tokens.")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("address?")])]),e._v(" "),r("td",[e._v("undefined | string")]),e._v(" "),r("td",[e._v("Optional target address. If omitted, gets own balance")])])])]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("Promise‹BigNumber›")])]),e._v(" "),r("p",[e._v("BigNumber containing address's token balance")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"gettokenlist"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#gettokenlist"}},[e._v("#")]),e._v(" getTokenList")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("getTokenList")]),e._v("(): "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/interfaces/addressb.html#address"}},[e._v("Address")]),e._v("[]›")],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L604",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:604"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Returns a list of all token addresses registered as token networks in registry")]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/interfaces/addressb.html#address"}},[e._v("Address")]),e._v("[]›")],1)]),e._v(" "),r("p",[e._v("Promise to list of token addresses")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"getudccapacity"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#getudccapacity"}},[e._v("#")]),e._v(" getUDCCapacity")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("getUDCCapacity")]),e._v("(): "),r("em",[e._v("Promise‹BigNumber›")])]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L1008",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:1008"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Fetches balance of UserDeposit Contract for SDK's account minus cached spent IOUs")]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("Promise‹BigNumber›")])]),e._v(" "),r("p",[e._v("Promise to UDC remaining capacity")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"mint"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mint"}},[e._v("#")]),e._v(" mint")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("mint")]),e._v("("),r("code",[e._v("token")]),e._v(": string, "),r("code",[e._v("amount")]),e._v(": BigNumberish): "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/globals.html#const-hash"}},[e._v("Hash")]),e._v("›")],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L985",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:985"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Mints the amount of tokens of the provided token address.\nThrows an error, if\n"),r("ol",[r("li",[e._v("Executed on main net")]),e._v(" "),r("li",[r("code",[e._v("token")]),e._v(" is not a valid address")]),e._v(" "),r("li",[e._v("Token could not be minted")])])]),e._v(" "),r("p",[r("strong",[e._v("Parameters:")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("token")])]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td",[e._v("Address of the token to be minted")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("amount")])]),e._v(" "),r("td",[e._v("BigNumberish")]),e._v(" "),r("td",[e._v("Amount to be minted")])])])]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/globals.html#const-hash"}},[e._v("Hash")]),e._v("›")],1)]),e._v(" "),r("p",[e._v("transaction")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"openchannel"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#openchannel"}},[e._v("#")]),e._v(" openChannel")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("openChannel")]),e._v("("),r("code",[e._v("token")]),e._v(": string, "),r("code",[e._v("partner")]),e._v(": string, "),r("code",[e._v("options")]),e._v(": object): "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/globals.html#const-hash"}},[e._v("Hash")]),e._v("›")],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L625",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:625"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Open a channel on the tokenNetwork for given token address with partner")]),e._v(" "),r("p",[r("strong",[e._v("Parameters:")])]),e._v(" "),r("p",[e._v("▪ "),r("strong",[e._v("token")]),e._v(": "),r("em",[e._v("string")])]),e._v(" "),r("p",[e._v("Token address on currently configured token network registry")]),e._v(" "),r("p",[e._v("▪ "),r("strong",[e._v("partner")]),e._v(": "),r("em",[e._v("string")])]),e._v(" "),r("p",[e._v("Partner address")]),e._v(" "),r("p",[e._v("▪"),r("code",[e._v("Default value")]),e._v(" "),r("strong",[e._v("options")]),e._v(": "),r("em",[e._v("object")]),e._v("=  {}")]),e._v(" "),r("p",[e._v("(optional) option parameter")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("settleTimeout?")])]),e._v(" "),r("td",[e._v("undefined | number")]),e._v(" "),r("td",[e._v("Custom, one-time settle timeout")])])])]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/globals.html#const-hash"}},[e._v("Hash")]),e._v("›")],1)]),e._v(" "),r("p",[e._v("txHash of channelOpen call, iff it succeeded")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"settlechannel"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#settlechannel"}},[e._v("#")]),e._v(" settleChannel")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("settleChannel")]),e._v("("),r("code",[e._v("token")]),e._v(": string, "),r("code",[e._v("partner")]),e._v(": string): "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/globals.html#const-hash"}},[e._v("Hash")]),e._v("›")],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L737",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:737"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Settle channel between us and partner on tokenNetwork for token\nThis method will fail if called on a channel not in 'settleable' or 'settling' state.\nChannel becomes 'settleable' settleTimeout blocks after closed (detected automatically\nwhile Raiden Light Client is running or later on restart). When calling it, channel state\nbecomes 'settling'. If for any reason transaction fails, it'll stay on this state, and this\nmethod can be called again to re-send a settleChannel transaction.")]),e._v(" "),r("p",[r("strong",[e._v("Parameters:")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("token")])]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td",[e._v("Token address on currently configured token network registry")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("partner")])]),e._v(" "),r("td",[e._v("string")]),e._v(" "),r("td",[e._v("Partner address")])])])]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/globals.html#const-hash"}},[e._v("Hash")]),e._v("›")],1)]),e._v(" "),r("p",[e._v("txHash of settleChannel call, iff it succeeded")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"start"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#start"}},[e._v("#")]),e._v(" start")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("start")]),e._v("(): "),r("em",[e._v("void")])]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L494",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:494"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Starts redux/observables by subscribing to all epics and emitting initial state and action")]),e._v(" "),r("p",[e._v("No event should be emitted before start is called")]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("void")])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"stop"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#stop"}},[e._v("#")]),e._v(" stop")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("stop")]),e._v("(): "),r("em",[e._v("void")])]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L517",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:517"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Triggers all epics to be unsubscribed")]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("void")])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"transfer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#transfer"}},[e._v("#")]),e._v(" transfer")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("transfer")]),e._v("("),r("code",[e._v("token")]),e._v(": string, "),r("code",[e._v("target")]),e._v(": string, "),r("code",[e._v("value")]),e._v(": BigNumberish, "),r("code",[e._v("options")]),e._v(": object): "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/globals.html#const-hash"}},[e._v("Hash")]),e._v("›")],1)]),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L811",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:811"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Send a Locked Transfer!\nThis will reject if LockedTransfer signature prompt is canceled/signature fails, or be\nresolved to the transfer unique identifier (secrethash) otherwise, and transfer status can be\nqueried with this id on this.transfers$ observable, which will just have emitted the 'pending'\ntransfer. Any following transfer state change will be notified through this observable.")]),e._v(" "),r("p",[r("strong",[e._v("Parameters:")])]),e._v(" "),r("p",[e._v("▪ "),r("strong",[e._v("token")]),e._v(": "),r("em",[e._v("string")])]),e._v(" "),r("p",[e._v("Token address on currently configured token network registry")]),e._v(" "),r("p",[e._v("▪ "),r("strong",[e._v("target")]),e._v(": "),r("em",[e._v("string")])]),e._v(" "),r("p",[e._v("Target address (must be getAvailability before)")]),e._v(" "),r("p",[e._v("▪ "),r("strong",[e._v("value")]),e._v(": "),r("em",[e._v("BigNumberish")])]),e._v(" "),r("p",[e._v("Amount to try to transfer")]),e._v(" "),r("p",[e._v("▪"),r("code",[e._v("Default value")]),e._v(" "),r("strong",[e._v("options")]),e._v(": "),r("em",[e._v("object")]),e._v("=  {}")]),e._v(" "),r("p",[e._v("Optional parameters for transfer:\n"),r("ul",[r("li",[e._v("paymentId - payment identifier, a random one will be generated if missing")]),e._v(" "),r("li",[e._v("secret - Secret to register, a random one will be generated if missing")]),e._v(" "),r("li",[e._v("secrethash - Must match secret, if both provided, or else, secret must be\ninformed to target by other means, and reveal can't be performed")]),e._v(" "),r("li",[e._v("paths - Used to specify possible routes & fees instead of querying PFS.")]),e._v(" "),r("li",[e._v("pfs - Use this PFS instead of configured or automatically choosen ones.\nIs ignored if paths were already provided. If neither are set and config.pfs is not\ndisabled (null), use it if set or if undefined (auto mode), fetches the best\nPFS from ServiceRegistry and automatically fetch routes from it.")])])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("paths?")])]),e._v(" "),r("td",[r("router-link",{attrs:{to:"/globals.html#raidenpaths"}},[e._v("RaidenPaths")])],1)]),e._v(" "),r("tr",[r("td",[r("code",[e._v("paymentId?")])]),e._v(" "),r("td",[e._v("BigNumberish")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("pfs?")])]),e._v(" "),r("td",[r("router-link",{attrs:{to:"/interfaces/raidenpfs.html"}},[e._v("RaidenPFS")])],1)]),e._v(" "),r("tr",[r("td",[r("code",[e._v("secret?")])]),e._v(" "),r("td",[e._v("undefined | string")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("secrethash?")])]),e._v(" "),r("td",[e._v("undefined | string")])])])]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/globals.html#const-hash"}},[e._v("Hash")]),e._v("›")],1)]),e._v(" "),r("p",[e._v("A promise to transfer's secrethash (unique id) when it's accepted")]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"updateconfig"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#updateconfig"}},[e._v("#")]),e._v(" updateConfig")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("updateConfig")]),e._v("("),r("code",[e._v("config")]),e._v(": Partial‹"),r("router-link",{attrs:{to:"/interfaces/raidenconfig.html"}},[e._v("RaidenConfig")]),e._v("›): "),r("em",[e._v("void")])],1),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L568",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:568"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Update Raiden Config with a partial (shallow) object")]),e._v(" "),r("p",[r("strong",[e._v("Parameters:")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("config")])]),e._v(" "),r("td",[e._v("Partial‹"),r("router-link",{attrs:{to:"/interfaces/raidenconfig.html"}},[e._v("RaidenConfig")]),e._v("›")],1),e._v(" "),r("td",[e._v("Partial object containing keys and values to update in config")])])])]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("void")])]),e._v(" "),r("hr"),e._v(" "),r("h3",{attrs:{id:"static-create"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#static-create"}},[e._v("#")]),e._v(" "),r("code",[e._v("Static")]),e._v(" create")]),e._v(" "),r("p",[e._v("▸ "),r("strong",[e._v("create")]),e._v("("),r("code",[e._v("connection")]),e._v(": JsonRpcProvider | AsyncSendable | string, "),r("code",[e._v("account")]),e._v(": Signer | string | number, "),r("code",[e._v("storageOrState?")]),e._v(": "),r("router-link",{attrs:{to:"/interfaces/storage.html"}},[e._v("Storage")]),e._v(" | "),r("router-link",{attrs:{to:"/interfaces/raidenstate.html"}},[e._v("RaidenState")]),e._v(" | unknown, "),r("code",[e._v("contracts?")]),e._v(": "),r("router-link",{attrs:{to:"/interfaces/contractsinfo.html"}},[e._v("ContractsInfo")]),e._v(", "),r("code",[e._v("config?")]),e._v(": Partial‹"),r("router-link",{attrs:{to:"/interfaces/raidenconfig.html"}},[e._v("RaidenConfig")]),e._v("›): "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/classes/raiden.html"}},[e._v("Raiden")]),e._v("›")],1)],1),e._v(" "),r("p",[r("em",[e._v("Defined in "),r("a",{attrs:{href:"https://github.com/raiden-network/light-client/blob/55dd9ed5/raiden-ts/src/raiden.ts#L365",target:"_blank",rel:"noopener noreferrer"}},[e._v("raiden.ts:365"),r("OutboundLink")],1)])]),e._v(" "),r("p",[e._v("Async helper factory to make a Raiden instance from more common parameters.")]),e._v(" "),r("p",[e._v("An async factory is needed so we can do the needed async requests to construct the required\nparameters ahead of construction time, and avoid partial initialization then")]),e._v(" "),r("p",[r("strong",[e._v("Parameters:")])]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Type")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("connection")])]),e._v(" "),r("td",[e._v("JsonRpcProvider | AsyncSendable | string")]),e._v(" "),r("td",[e._v("A URL or provider to connect to, one of:     "),r("ul",[r("li",[e._v("JsonRpcProvider instance,")]),e._v(" "),r("li",[e._v("a Metamask's web3.currentProvider object or,")]),e._v(" "),r("li",[e._v("a hostname or remote json-rpc connection string")])])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("account")])]),e._v(" "),r("td",[e._v("Signer | string | number")]),e._v(" "),r("td",[e._v("An account to use as main account, one of:     "),r("ul",[r("li",[e._v("Signer instance (e.g. Wallet) loadded with account/private key or")]),e._v(" "),r("li",[e._v("hex-encoded string address of a remote account in provider or")]),e._v(" "),r("li",[e._v("hex-encoded string local private key or")]),e._v(" "),r("li",[e._v("number index of a remote account loaded in provider            (e.g. 0 for Metamask's loaded account)")])])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("storageOrState?")])]),e._v(" "),r("td",[r("router-link",{attrs:{to:"/interfaces/storage.html"}},[e._v("Storage")]),e._v(" | "),r("router-link",{attrs:{to:"/interfaces/raidenstate.html"}},[e._v("RaidenState")]),e._v(" | unknown")],1),e._v(" "),r("td",[e._v("Storage/localStorage-like synchronous object where to load and store     current state or initial RaidenState-like object instead. In this case, user must listen     state$ changes and update them on whichever persistency option is used")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("contracts?")])]),e._v(" "),r("td",[r("router-link",{attrs:{to:"/interfaces/contractsinfo.html"}},[e._v("ContractsInfo")])],1),e._v(" "),r("td",[e._v("Contracts deployment info")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("config?")])]),e._v(" "),r("td",[e._v("Partial‹"),r("router-link",{attrs:{to:"/interfaces/raidenconfig.html"}},[e._v("RaidenConfig")]),e._v("›")],1),e._v(" "),r("td",[e._v("Raiden configuration")])])])]),e._v(" "),r("p",[r("strong",[e._v("Returns:")]),e._v(" "),r("em",[e._v("Promise‹"),r("router-link",{attrs:{to:"/classes/raiden.html"}},[e._v("Raiden")]),e._v("›")],1)]),e._v(" "),r("p",[e._v("Promise to Raiden SDK client instance")])])}),[],!1,null,null,null);t.default=a.exports}}]);