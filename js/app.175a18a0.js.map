{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?f6d0","webpack:///./src/filters.ts","webpack:///./src/mixins/navigation-mixin.ts","webpack:///./src/components/SplashScreen.vue?ccd9","webpack:///./src/assets/done.svg","webpack:///./src/components/AppHeader.vue?b455","webpack:///./src/locales sync [A-Za-z0-9-_,\\s]+\\.json$/","webpack:///./src/route-names.ts","webpack:///./src/assets/back_arrow.svg","webpack:///./src/components/ListHeader.vue?a77b","webpack:///./src/components/ActionButton.vue?eca9","webpack:///./src/components/ActionButton.vue","webpack:///./src/components/ActionButton.vue?574f","webpack:///./src/components/ActionButton.vue?547b","webpack:///./src/mixins/blockie-mixin.ts","webpack:///./src/components/ConfirmationDialog.vue?bc35","webpack:///./src/model/types.ts","webpack:///./src/components/NoAccessMessage.vue?2eb1","webpack:///./src/components/Stepper.vue?a0cb","webpack:///./src/assets/copy_icon.svg","webpack:///./src/assets/logo.svg","webpack:///./src/components/Stepper.vue?af7e","webpack:///./src/components/Stepper.vue","webpack:///./src/components/Stepper.vue?04e6","webpack:///./src/components/Stepper.vue?e0bd","webpack:///./src/utils/balance-utils.ts","webpack:///./src/components/ActionButton.vue?5f12","webpack:///./src/App.vue?d702","webpack:///./src/components/SplashScreen.vue?6cfd","webpack:///./src/components/NoAccessMessage.vue?c0ca","webpack:///./src/components/NoAccessMessage.vue","webpack:///./src/components/NoAccessMessage.vue?cd93","webpack:///./src/components/NoAccessMessage.vue?71ea","webpack:///./src/components/SplashScreen.vue","webpack:///./src/components/SplashScreen.vue?10ae","webpack:///./src/components/SplashScreen.vue?1ffb","webpack:///./src/components/AppHeader.vue?7f35","webpack:///./src/components/AppHeader.vue","webpack:///./src/components/AppHeader.vue?1bd0","webpack:///./src/components/AppHeader.vue?4bd4","webpack:///./src/App.vue","webpack:///./src/App.vue?2594","webpack:///./src/App.vue?4f7e","webpack:///./src/plugins/class-component.hooks.ts","webpack:///./src/views/Home.vue?f235","webpack:///./src/components/AppCore.vue?f6a4","webpack:///./src/components/Tokens.vue?0f91","webpack:///./src/components/ConfirmationDialog.vue?c24b","webpack:///./src/components/ConfirmationDialog.vue","webpack:///./src/components/ConfirmationDialog.vue?800c","webpack:///./src/components/ConfirmationDialog.vue?1a16","webpack:///./src/components/Tokens.vue","webpack:///./src/components/Tokens.vue?b132","webpack:///./src/components/Tokens.vue?8375","webpack:///./src/components/AppCore.vue","webpack:///./src/components/AppCore.vue?851c","webpack:///./src/components/AppCore.vue?48f8","webpack:///./src/views/Home.vue","webpack:///./src/views/Home.vue?54ed","webpack:///./src/views/Home.vue?2908","webpack:///./src/router.ts","webpack:///./src/store.ts","webpack:///./src/registerServiceWorker.ts","webpack:///./src/class-component-hooks.ts","webpack:///./src/plugins/raiden.ts","webpack:///./src/services/identicon-cache.ts","webpack:///./src/plugins/identicon-plugin.ts","webpack:///./src/i18n.ts","webpack:///./src/plugins/vuetify.ts","webpack:///./src/main.ts","webpack:///./src/components/ListHeader.vue?4c77","webpack:///./src/components/ListHeader.vue","webpack:///./src/components/ListHeader.vue?ec8b","webpack:///./src/components/ListHeader.vue?0972","webpack:///./src/services/config-provider.ts","webpack:///./src/services/raiden-service.ts","webpack:///./src/components/Tokens.vue?750a","webpack:///./src/services/web3-provider.ts","webpack:///../raiden-ts/dist/utils/types.js","webpack:///../raiden-ts/dist/utils/data.js","webpack:///../raiden-ts/dist/channels/types.js","webpack:///../raiden-ts/dist/channels/state.js","webpack:///../raiden-ts/dist/transport/state.js","webpack:///../raiden-ts/dist/messages/types.js","webpack:///../raiden-ts/dist/transfers/state.js","webpack:///../raiden-ts/dist/state.js","webpack:///../raiden-ts/dist/constants.js","webpack:///../raiden-ts/dist/channels/utils.js","webpack:///../raiden-ts/dist/utils/redux.js","webpack:///../raiden-ts/dist/channels/actions.js","webpack:///../raiden-ts/dist/channels/reducer.js","webpack:///../raiden-ts/dist/transport/actions.js","webpack:///../raiden-ts/dist/transport/reducer.js","webpack:///../raiden-ts/dist/transfers/utils.js","webpack:///../raiden-ts/dist/messages/utils.js","webpack:///../raiden-ts/dist/transfers/actions.js","webpack:///../raiden-ts/dist/transfers/reducer.js","webpack:///../raiden-ts/dist/reducer.js","webpack:///../raiden-ts/dist/messages/actions.js","webpack:///../raiden-ts/dist/path/actions.js","webpack:///../raiden-ts/dist/actions.js","webpack:///../raiden-ts/dist/utils/ethers.js","webpack:///../raiden-ts/dist/channels/epics.js","webpack:///../raiden-ts/dist/utils/matrix.js","webpack:///../raiden-ts/dist/utils/lru.js","webpack:///../raiden-ts/dist/transport/utils.js","webpack:///../raiden-ts/dist/transport/epics.js","webpack:///../raiden-ts/dist/transfers/epics.js","webpack:///../raiden-ts/dist/path/utils.js","webpack:///../raiden-ts/dist/path/types.js","webpack:///../raiden-ts/dist/path/epics.js","webpack:///../raiden-ts/dist/epics.js","webpack:///../raiden-ts/dist/config.js","webpack:///../raiden-ts/dist/raiden.js","webpack:///../raiden-ts/dist/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","jsonpScriptSrc","p","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","error","clearTimeout","chunk","errorType","realSrc","message","name","undefined","setTimeout","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","Filters","width","separator","substWidth","Math","floor","substr","parseFloat","toFixed","toLocaleUpperCase","amount","decimals","units","toUnits","deposit","splitted","indexOf","filter","truncate","upper","displayFormat","capitalizeFirst","NavigationMixin","token","this","$router","SELECT_HUB","params","HOME","partner","OPEN_CHANNEL","PAYMENT","SELECT_TOKEN","$route","CHANNELS","navigateToHome","navigateToTokenSelect","navigateToSelectHub","map","webpackContext","req","id","webpackContextResolve","keys","RouteNames","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","enabled","loading","on","$event","click","_v","_s","text","staticRenderFns","ActionButton","required","Boolean","default","component","VBtn","VFlex","VLayout","BlockieMixin","address","$identicon","getIdenticon","DeniedReason","emptyDescription","label","title","description","emptyTokenModel","symbol","opening","open","closing","closed","settling","settled","PlaceHolderNetwork","chainId","_l","step","index","class","current","done","doneStep","steps","_e","Stepper","VImg","VProgressCircular","BalanceUtils","wei","depositTokens","decimalPart","split","connecting","connect","$t","accessDenied","reason","UNSUPPORTED_NETWORK","INITIALIZATION_FAILED","VAlert","injectedWeb3Available","components","NoAccessMessage","computed","VContainer","defaultAccount","onBackClicked","meta","network","$blockie","scopedSlots","_u","fn","ref","_g","_f","model","callback","$$v","copied","expression","copy","accountBalance","directives","rawName","domProps","composing","copyArea","$refs","focus","select","execCommand","VSpacer","VTooltip","$store","commit","$raiden","disconnect","UNDEFINED","AppHeader","SplashScreen","VApp","VContent","registerHooks","proxy","leaveNetwork","leaveModalVisible","leaveConfirmed","leaveCancelled","selectedToken","display","_t","cancel","confirm","ConfirmationDialog","$emit","VCard","VCardActions","VCardText","VCardTitle","VDialog","dismissModal","ListHeader","VList","VListGroup","VListItem","VListItemAvatar","VListItemContent","VListItemSubtitle","VListItemTitle","AppCore","Tokens","Home","use","router","base","routes","path","redirect","_defaultState","providerDetected","channels","tokens","defaultState","store","state","mutations","noProvider","account","loadComplete","balance","updateChannels","updateTokens","entries","reset","assign","actions","getters","reducer","acc","channel","tokenChannels","tokenInfo","allTokens","values","tokenAddress","channelWithBiggestCapacity","_","openChannels","Store","VUE_APP_RAIDEN_PACKAGE","ready","log","registered","cached","updatefound","updated","offline","RaidenPlugin","Vue","options","cache","generated","IdenticonPlugin","loadLocaleMessages","locales","messages","forEach","matched","match","locale","fallbackLocale","icons","iconfont","theme","dark","themes","primary","secondary","config","productionTip","vuetify","created","sessionStorage","i18n","h","$mount","header","url","fetch","json","_raiden","provider","localStorage","RaidenInitializationFailed","raiden","resolveName","EnsResolveFailed","raidenPackageConfigUrl","RaidenService","createRaiden","PRIVATE_KEY","getAccount","getBalance","events$","pipe","exhaustMap","fetchTokenData","subscribe","payload","getTokenList","initialTokens","reduce","channels$","deniedReason","NO_ACCOUNT","stop","toEth","getTokenBalance","getTokenInfo","progress","progressUpdater","total","openChannel","ChannelOpenFailed","gt","failed","closeChannel","ChannelCloseFailed","depositChannel","ChannelDepositFailed","settleChannel","ChannelSettleFailed","fetchToken","a","getToken","getAvailability","transfer","secretHash","transfers$","first","secrethash","completed","toPromise","TransferFailed","Web3Provider","ethereum","INFURA_ENDPOINT","enable","web3","currentProvider","isMetaMask","autoRefreshOnNetworkChange","isStringifiable","u","isBigNumber","BigNumberC","toString","HexString","size","UInt","max","pow","is","gte","lt","Signature","Hash","Secret","PrivateKey","Address","Timed","codec","timed","v","Date","now","encode","hex","str","isLosslessNumber","losslessParse","valueOf","Lock","expiration","SignedBalanceProof","tokenNetworkAddress","channelId","nonce","transferredAmount","lockedAmount","locksroot","messageHash","signature","sender","ChannelState","ChannelEnd","locks","balanceProof","withdraw","Channel","own","settleTimeout","openBlock","isFirstParticipant","settleable","closeBlock","Channels","RaidenMatrixSetup","userId","accessToken","deviceId","displayName","MessageType","RetrieableMessage","message_identifier","Delivered","DELIVERED","delivered_message_identifier","Processed","PROCESSED","SecretRequest","SECRET_REQUEST","payment_identifier","SecretReveal","SECRET_REVEAL","secret","EnvelopeMessage","chain_id","token_network_address","channel_identifier","transferred_amount","locked_amount","RouteMetadata","route","Metadata","LockedTransferBase","recipient","lock","initiator","fee","metadata","LockedTransfer","LOCKED_TRANSFER","RefundTransfer","REFUND_TRANSFER","Unlock","UNLOCK","LockExpired","LOCK_EXPIRED","ToDevice","TO_DEVICE","WithdrawBase","participant","total_withdraw","WithdrawRequest","WITHDRAW_REQUEST","WithdrawConfirmation","WITHDRAW_CONFIRMATION","WithdrawExpired","WITHDRAW_EXPIRED","PFSCapacityUpdate","PFS_CAPACITY_UPDATE","canonical_identifier","chain_identifier","updating_participant","other_participant","updating_nonce","other_nonce","updating_capacity","other_capacity","reveal_timeout","Message","Signed","SentTransfer","transferProcessed","refund","channelClosed","secretReveal","unlock","lockExpired","unlockProcessed","lockExpiredProcessed","SentTransfers","RaidenSentTransferStatus","RaidenState","registry","blockNumber","transport","matrix","server","setup","rooms","secrets","registerBlock","sent","encodeRaidenState","decodeRaidenState","decode","ThrowReporter","report","right","initialState","SignatureZero","ShutdownReason","channelAmounts","Zero32","ownDeposit","ownWithdraw","ownTransferred","ownLocked","ownBalance","ownCapacity","partnerDeposit","partnerWithdraw","partnerTransferred","partnerLocked","partnerBalance","partnerCapacity","sub","add","partialCombineReducers","reducers","action","subState","newSubState","newBlock","tokenMonitored","channelOpen","channelOpened","channelOpenFailed","channelMonitored","channelDeposit","channelDeposited","channelDepositFailed","channelWithdrawn","channelClose","channelCloseFailed","channelSettleable","channelSettle","channelSettled","channelSettleFailed","tokenNetwork","totalDeposit","totalWithdraw","includes","channelsReducer","matrixSetup","matrixRequestMonitorPresence","matrixPresenceUpdate","available","ts","matrixRequestMonitorPresenceFailed","matrixRoom","matrixRoomLeave","roomId","room","transportReducer","getLocksroot","encoded","getSecrethash","makeSecret","makePaymentId","makeMessageId","raidenSentTransfer","status","changedAt","expired","unlocked","expiring","unlocking","revealed","refunded","received","pending","success","paymentId","toNumber","expirationBlock","startedAt","__awaiter","thisArg","_arguments","P","generator","next","rejected","CMDIDs","MessageTypeId","createMetadataHash","routeHashes","createBalanceHash","isZero","createMessageHash","packed","packMessage","balanceHash","BALANCE_PROOF","WITHDRAW","isSigned","getMessageSigner","getBalanceProofFromEnvelopeMessage","encodeJsonMessage","decodeJsonMessage","parsed","decoded","signMessage","signer","transferSigned","transferSecret","transferSecretRequest","transferSecretReveal","transferUnlock","transferUnlocked","transferUnlockProcessed","transferExpire","transferExpired","transferExpireFailed","transferExpireProcessed","transferRefunded","transferred","transferFailed","transferClear","withdrawReceiveRequest","withdrawSendConfirmation","transfersReducer","channelPath","eq","sentTransfer","txHash","raidenReducers","raidenReducer","messageSend","messageSent","messageGlobalSend","messageReceived","pathFind","pathFound","pathFindFailed","raidenShutdown","RaidenActions","RaidenEvents","fromEthersEvent","resultSelector","fromEventPattern","handler","removeListener","getEventsStream","contract","filters","fromBlock$","lastSeenBlock$","pastEvents$","combineLatest","defer","of","switchMap","fromBlock","toBlock","getLogs","mergeMap","logs","from","interface","parseLog","args","Array","getBlock","blockHash","getTransaction","transactionHash","getTransactionReceipt","newEvents$","merge","getNetwork","parseInt","send","patchSignSend","origSend","method","catch","initNewBlockEpic","getBlockNumber","initMonitorRegistryEpic","action$","state$","registryContract","contractsInfo","publishReplay","withLatestFrom","TokenNetworkCreated","TokenNetworkRegistry","block_number","initMonitorChannelsEpic","obj","initMonitorProviderEpic","listAccounts","accounts","isProviderAccount","interval","pollingInterval","ACCOUNT_CHANGED","curNetwork","NETWORK_CHANGED","tokenMonitoredEpic","getTokenNetworkContract","pluck","blockNumber$","groupBy","grouped$","tokenNetworkContract","ChannelOpened","p1","p2","channelMonitoredEpic","depositFilter","ChannelNewDeposit","withdrawFilter","ChannelWithdraw","closedFilter","ChannelClosed","settledFilter","ChannelSettled","settleBlock","takeWhile","channelOpenEpic","config$","channelState","functions","tx","receipt","wait","hash","mergeMapTo","catchError","channelOpenedEpic","channelDepositEpic","getTokenContract","tn","tokenContract","approve","tap","setTotalDeposit","gasLimit","channelCloseEpic","additionalHash","nonClosingSignature","closingMessage","closingSignature","channelSettleEpic","zeroBalanceProof","part1","part2","channelSettleableEpic","settleableBlock","yamlListToArray","yml","reg","results","exec","matrixRTT","httpTimeout","start","response","ok","NaN","Number","MAX_SAFE_INTEGER","end","rtt","getServerName","getUserPresence","$userId","_http","authedRequest","LruCache","Map","entry","delete","set","keyToDelete","getPresences$","scan","presences","update","share","startWith","globalRoomNames","discoveryRoom","pfsRoom","g","roomMatch","roomIdOrAlias","getCanonicalAlias","getAliases","getRoom$","getRoom","getRooms","find","fromEvent","take","AVAILABLE","userRe","initMatrixEpic","matrix$","matrixServer","matrixServerLookup","throwError","toArray","rtts","isNaN","JSON","stringify","baseUrl","serverName","userName","toLowerCase","password","loginWithPassword","register","device_id","opts","access_token","credentials","user_id","signedUserId","setDisplayName","globalRoom","joinRoom","mapTo","complete","matrixStartEpic","startClient","initialSyncLimit","ignoreElements","matrixShutdownEpic","finalize","stopClient","matrixMonitorPresenceEpic","validUsers","user","getUsers","presence","recovered","searchUserDirectory","term","display_name","matrixPresenceUpdateEpic","getType","getUser","getSender","peerAddress","toMonitor","Set","has","displayName$","getProfileInfo","profile","displayname","lastPresenceTs","matrixCreateRoomEpic","presencesStateReplay$","concatMap","createRoom","visibility","invite","room_id","matrixInviteEpic","member","getMember","matrixHandleInvitesEpic","getUserId","membership","cachedPresence","senderPresence$","takeUntil","timer","senderPresence","syncRoom","matrixLeaveExcessRoomsEpic","matrixExcessRooms","leave","matrixLeaveUnknownRoomsEpic","delay","globalRooms","some","matrixCleanLeftRoomsEpic","matrixMessageSendEpic","distinctUntilChanged","body","sendEvent","msgtype","matrixMessageGlobalSendEpic","roomName","warn","roomAlias","matrixMessageReceivedEpic","content","getHomeserverUrl","line","origin_server_ts","matrixMessageReceivedUpdateRoomEpic","matrixMonitorChannelPresenceEpic","deliveredEpic","msgId","delivered","signed","put","nextNonce","makeAndSignTransfer","revealTimeout","makeAndSignUnlock","signed$","lte","makeAndSignLockExpired","makeAndSignWithdrawConfirmation","confirmation","transferGenerateAndSignEnvelopeMessageEpic","deps","withdrawCache","transferSignedRetryMessageEpic","sendOnceAndWaitSent$","repeatWhen","completed$","transferUnlockedRetryMessageEpic","transferExpiredRetryMessageEpic","transferAutoExpireEpic","requests$","requestAndWait$","initQueuePendingEnvelopeMessagesEpic","transferProcessedReceivedEpic","transferSecretRequestedEpic","mul","div","transferSecretRevealEpic","reveal$","transferSecretRevealedEpic","transferUnlockProcessedReceivedEpic","transferExpireProcessedEpic","transferChannelClosedEpic","transferRefundedEpic","transferReceivedReplyProcessedEpic","processed","withdrawRequestReceivedEpic","withdrawSendConfirmationEpic","channelCanRoute","capacity","PathResults","estimated_fee","feedback_token","pathFindServiceEpic","statePresencesConfig$","pfs","headers","to","max_paths","sort","b","invalidatedRecipients","canTransferOrReason","debug","pfsCapacityUpdateEpic","RaidenEpics","raidenRootEpic","shutdownNotification","limitedAction$","limitedState$","stateOutput$","actionOutput$","epic","defaultConfig","logger","info","goerli","ropsten","kovan","rinkeby","resetEventsBlock","BehaviorSubject","Subject","partner2channel","partner2raidenChannel","changed","totalSupply","middlewares","level","AsyncSubject","TokenNetwork","HumanStandardToken","epicMiddleware","createEpicMiddleware","dependencies","run","connection","storageOrState","contracts","isSigner","getSigner","getAddress","loadedState","isStorage","getItem","onState","onStateComplete","loaded","parse","debouncedState","setItem","maxWait","flush","raidenConfig","dispatch","STOP","getState","newConfig","currentConfig","balanceOf"],"mappings":"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","file":"js/app.175a18a0.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-59f28252\":\"7f2c8959\",\"chunk-164a98e7\":\"02c4be00\",\"chunk-2740dca8\":\"2b85ee99\",\"chunk-604ac8b8\":\"2fc92298\",\"chunk-2d57d4f8\":\"53d863cc\",\"chunk-45cdac6d\":\"595f50c0\",\"chunk-e5fbe286\":\"84497a85\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-59f28252\":1,\"chunk-164a98e7\":1,\"chunk-2740dca8\":1,\"chunk-604ac8b8\":1,\"chunk-2d57d4f8\":1,\"chunk-45cdac6d\":1,\"chunk-e5fbe286\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-59f28252\":\"88125c95\",\"chunk-164a98e7\":\"1f449623\",\"chunk-2740dca8\":\"b2d5f8e3\",\"chunk-604ac8b8\":\"06e6cde3\",\"chunk-2d57d4f8\":\"c2128803\",\"chunk-45cdac6d\":\"50dbba00\",\"chunk-e5fbe286\":\"f17503a9\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=4799bff0&lang=scss&scoped=true&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=4799bff0&lang=scss&scoped=true&\"","import Vue from 'vue';\nimport { BigNumber } from 'ethers/utils';\nimport { BalanceUtils } from '@/utils/balance-utils';\nimport split from 'lodash/split';\nimport capitalize from 'lodash/capitalize';\n\nexport default class Filters {\n  static truncate(value: string, width: number = 12) {\n    const separator = '...';\n    if (value.length <= width) {\n      return value;\n    } else {\n      const substWidth = Math.floor(width / 2);\n      return (\n        value.substr(0, substWidth) +\n        separator +\n        value.substr(value.length - substWidth)\n      );\n    }\n  }\n\n  static decimals(value: string, decimals: number = 3) {\n    return parseFloat(value).toFixed(decimals);\n  }\n\n  static upper(value: string) {\n    if (!value) {\n      return '';\n    }\n    return value.toLocaleUpperCase();\n  }\n\n  static displayFormat(amount: BigNumber, decimals: number): string {\n    const units = BalanceUtils.toUnits(amount, decimals);\n    const deposit = parseFloat(units);\n    if (deposit === 0) {\n      return '0.0';\n    } else if (deposit < 0.00001) {\n      return '<0.00001';\n    } else {\n      const splitted = split(units, '.');\n      if (splitted[1] && splitted[1].length > 5) {\n        return units.substr(0, units.indexOf('.') + 6);\n      } else {\n        return units;\n      }\n    }\n  }\n\n  static capitalizeFirst(value: string): string {\n    return capitalize(value);\n  }\n}\n\nVue.filter('truncate', Filters.truncate);\nVue.filter('decimals', Filters.decimals);\nVue.filter('upper', Filters.upper);\nVue.filter('displayFormat', Filters.displayFormat);\nVue.filter('capitalizeFirst', Filters.capitalizeFirst);\n","import { Component, Vue } from 'vue-property-decorator';\nimport { RouteNames } from '@/route-names';\n\n@Component\nexport default class NavigationMixin extends Vue {\n  navigateToSelectHub(token: string) {\n    this.$router.push({\n      name: RouteNames.SELECT_HUB,\n      params: {\n        token: token\n      }\n    });\n  }\n\n  navigateToHome() {\n    this.$router.push({\n      name: RouteNames.HOME\n    });\n  }\n\n  navigateToOpenChannel(token: string, partner: string) {\n    this.$router.push({\n      name: RouteNames.OPEN_CHANNEL,\n      params: {\n        token: token,\n        partner: partner\n      }\n    });\n  }\n\n  navigateToSelectPaymentTarget(token: string) {\n    this.$router.push({\n      name: RouteNames.PAYMENT,\n      params: { token: token }\n    });\n  }\n\n  navigateToTokenSelect() {\n    this.$router.push({\n      name: RouteNames.SELECT_TOKEN\n    });\n  }\n\n  onBackClicked() {\n    switch (this.$route.name) {\n      case RouteNames.PAYMENT:\n      case RouteNames.CHANNELS:\n      case RouteNames.SELECT_TOKEN:\n        this.navigateToHome();\n        break;\n      case RouteNames.SELECT_HUB:\n        this.navigateToTokenSelect();\n        break;\n      case RouteNames.OPEN_CHANNEL:\n        this.navigateToSelectHub(this.$route.params.token);\n        break;\n    }\n  }\n}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SplashScreen.vue?vue&type=style&index=0&id=088d4968&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SplashScreen.vue?vue&type=style&index=0&id=088d4968&lang=scss&scoped=true&\"","module.exports = __webpack_public_path__ + \"img/done.24f4e34a.svg\";","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppHeader.vue?vue&type=style&index=0&id=1fb34092&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppHeader.vue?vue&type=style&index=0&id=1fb34092&scoped=true&lang=scss&\"","var map = {\n\t\"./en.json\": \"edd4\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"49f8\";","export enum RouteNames {\n  PAYMENT = 'send-transaction',\n  SELECT_TOKEN = 'select-token',\n  SELECT_HUB = 'select-hub',\n  HOME = 'home',\n  CHANNELS = 'channels',\n  OPEN_CHANNEL = 'open-channel'\n}\n","module.exports = __webpack_public_path__ + \"img/back_arrow.268247fb.svg\";","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListHeader.vue?vue&type=style&index=0&id=59800fee&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListHeader.vue?vue&type=style&index=0&id=59800fee&scoped=true&lang=scss&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{staticClass:\"action-button\",attrs:{\"align-center\":\"\",\"justify-center\":\"\"}},[_c('v-flex',{staticClass:\"text-center\",attrs:{\"xs10\":\"\"}},[_c('v-btn',{staticClass:\"text-capitalize action-button__button\",attrs:{\"disabled\":!_vm.enabled,\"loading\":_vm.loading,\"depressed\":\"\",\"large\":\"\"},on:{\"click\":function($event){return _vm.click()}}},[_vm._v(\"\\n      \"+_vm._s(_vm.text)+\"\\n    \")])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Emit, Prop, Vue } from 'vue-property-decorator';\n\n@Component({})\nexport default class ActionButton extends Vue {\n  @Prop({ required: true, type: Boolean })\n  enabled!: boolean;\n\n  @Prop({ required: true })\n  text!: string;\n\n  @Prop({ type: Boolean, default: false })\n  loading!: boolean;\n\n  @Emit()\n  click() {}\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ActionButton.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ActionButton.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ActionButton.vue?vue&type=template&id=166287f7&scoped=true&\"\nimport script from \"./ActionButton.vue?vue&type=script&lang=ts&\"\nexport * from \"./ActionButton.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ActionButton.vue?vue&type=style&index=0&id=166287f7&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"166287f7\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VFlex,VLayout})\n","import { Component, Vue } from 'vue-property-decorator';\n\n@Component\nexport default class BlockieMixin extends Vue {\n  $blockie(address: string) {\n    return this.$identicon.getIdenticon(address);\n  }\n}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfirmationDialog.vue?vue&type=style&index=0&id=013b36dc&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfirmationDialog.vue?vue&type=style&index=0&id=013b36dc&scoped=true&lang=scss&\"","import { BigNumberish, Network } from 'ethers/utils';\n\nexport interface Token {\n  readonly address: string;\n  readonly decimals?: number;\n  readonly balance?: BigNumberish;\n  readonly symbol?: string;\n  readonly name?: string;\n}\n\nexport interface AccTokenModel {\n  name: string;\n  symbol: string;\n  address: string;\n  opening: number;\n  open: number;\n  closing: number;\n  closed: number;\n  settling: number;\n  settled: number;\n\n  [index: string]: number | string;\n}\n\nexport interface TokenModel extends AccTokenModel {\n  readonly name: string;\n  readonly symbol: string;\n  readonly address: string;\n  readonly opening: number;\n  readonly open: number;\n  readonly closing: number;\n  readonly closed: number;\n  readonly settling: number;\n  readonly settled: number;\n}\n\nexport interface LeaveNetworkResult {\n  readonly closed: number;\n  readonly failed: number;\n}\n\nexport interface Progress {\n  readonly current: number;\n  readonly total: number;\n}\n\nexport interface StepDescription {\n  readonly label: string;\n  readonly title: string;\n  readonly description: string;\n}\n\nexport const emptyDescription = (): StepDescription => ({\n  label: '',\n  title: '',\n  description: ''\n});\n\nexport const emptyTokenModel = (): AccTokenModel => ({\n  name: '',\n  symbol: '',\n  address: '',\n  opening: 0,\n  open: 0,\n  closing: 0,\n  closed: 0,\n  settling: 0,\n  settled: 0\n});\n\nexport const PlaceHolderNetwork: Network = {\n  name: '',\n  chainId: -1\n};\n\nexport enum DeniedReason {\n  UNDEFINED,\n  NO_ACCOUNT,\n  UNSUPPORTED_NETWORK,\n  INITIALIZATION_FAILED\n}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoAccessMessage.vue?vue&type=style&index=0&id=6b8163f4&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoAccessMessage.vue?vue&type=style&index=0&id=6b8163f4&scoped=true&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stepper.vue?vue&type=style&index=0&id=30108802&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stepper.vue?vue&type=style&index=0&id=30108802&lang=scss&scoped=true&\"","module.exports = __webpack_public_path__ + \"img/copy_icon.80d12304.svg\";","module.exports = __webpack_public_path__ + \"img/logo.5c4b022d.svg\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.display)?_c('div',{staticClass:\"stepper\"},[_c('div',{staticClass:\"stepper__card\"},[_c('div',{staticClass:\"stepper__card__steps\"},[_vm._l((_vm.steps),function(step,index){return _c('div',{key:index,staticClass:\"stepper__card__steps__step\",class:{\n          'stepper__card__steps__step--active': _vm.current === index && !_vm.done\n        }},[_c('span',{staticClass:\"stepper__card__steps__step__label\"},[_vm._v(\"\\n          \"+_vm._s(step.label)+\"\\n        \")])])}),_c('div',{staticClass:\"stepper__card__steps__step\",class:{ 'stepper__card__steps__step--active': _vm.done }},[_vm._v(\"\\n        \"+_vm._s(_vm.doneStep.label)+\"\\n      \")])],2),_c('div',{staticClass:\"stepper__card__content\"},[_c('div',{staticClass:\"stepper__card__content__title\"},[(_vm.done)?_c('span',[_vm._v(\"\\n          \"+_vm._s(_vm.doneStep.title)+\"\\n        \")]):_c('span',[_vm._v(_vm._s(_vm.steps[_vm.current].title))])]),(_vm.done)?_c('div',[_c('v-img',{staticClass:\"stepper__card__content--done\",attrs:{\"src\":require('../assets/done.svg')}})],1):_c('v-progress-circular',{staticClass:\"stepper__card__content--progress\",attrs:{\"size\":110,\"width\":7,\"indeterminate\":\"\"}}),_c('p',{staticClass:\"stepper__card__content__description\"},[(_vm.done)?_c('span',[_vm._v(\"\\n          \"+_vm._s(_vm.doneStep.description)+\"\\n        \")]):_c('span',[_vm._v(\"\\n          \"+_vm._s(_vm.steps[_vm.current].description)+\"\\n        \")])])],1)])]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { StepDescription } from '@/model/types';\n\n@Component({})\nexport default class Stepper extends Vue {\n  @Prop({ required: true })\n  display!: boolean;\n\n  @Prop({ required: false, default: 0 })\n  current!: number;\n\n  @Prop({ required: true })\n  steps!: StepDescription[];\n\n  @Prop({ required: true })\n  doneStep!: StepDescription;\n\n  @Prop({})\n  done?: boolean;\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stepper.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stepper.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Stepper.vue?vue&type=template&id=30108802&scoped=true&\"\nimport script from \"./Stepper.vue?vue&type=script&lang=ts&\"\nexport * from \"./Stepper.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Stepper.vue?vue&type=style&index=0&id=30108802&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"30108802\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VImg } from 'vuetify/lib/components/VImg';\nimport { VProgressCircular } from 'vuetify/lib/components/VProgressCircular';\ninstallComponents(component, {VImg,VProgressCircular})\n","import { BigNumber, parseUnits, formatUnits, formatEther } from 'ethers/utils';\n\nexport class BalanceUtils {\n  static toEth(wei: BigNumber): string {\n    return formatEther(wei);\n  }\n\n  static toUnits(wei: BigNumber, decimals: number): string {\n    return formatUnits(wei, decimals);\n  }\n\n  static decimalsOverflow(depositTokens: string, decimals: number): boolean {\n    let decimalPart: string;\n    if (depositTokens.indexOf('.') > 0) {\n      decimalPart = depositTokens.split('.')[1];\n    } else {\n      decimalPart = '';\n    }\n    return decimalPart.length > decimals;\n  }\n\n  static parse(deposit: string, decimals: number) {\n    return parseUnits(deposit, decimals);\n  }\n}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ActionButton.vue?vue&type=style&index=0&id=166287f7&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ActionButton.vue?vue&type=style&index=0&id=166287f7&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',{attrs:{\"dark\":\"\"}},[(_vm.inaccessible)?_c('splash-screen',{attrs:{\"connecting\":_vm.connecting},on:{\"connect\":function($event){return _vm.connect()}}}):_c('div',{attrs:{\"id\":\"application-wrapper\"}},[_c('div',{attrs:{\"id\":\"application-content\"}},[_c('app-header'),_c('v-content',[_c('v-container',{staticClass:\"application__container\",attrs:{\"fluid\":\"\",\"fill-height\":\"\"}},[_c('router-view')],1)],1)],1)]),_c('div',{staticClass:\"policy\"},[_c('a',{attrs:{\"href\":\"https://raiden.network/privacy.html\",\"target\":\"_blank\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.$t('application.privacy-policy'))+\"\\n    \")])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{staticClass:\"splash-screen\",attrs:{\"fluid\":\"\",\"fill-height\":\"\"}},[_c('v-layout',{attrs:{\"align-center\":\"\",\"justify-center\":\"\"}},[_c('v-flex',{attrs:{\"xs8\":\"\",\"md6\":\"\",\"lg4\":\"\"}},[_c('div',{staticClass:\"splash-screen__wrapper display-3\"},[_c('div',{staticClass:\"splash-screen__logo-container\"},[_c('v-img',{staticClass:\"splash-screen__logo\",attrs:{\"src\":require('../assets/logo.svg'),\"min-width\":\"50px\",\"aspect-ratio\":\"1\",\"contain\":\"\"}})],1),_c('div',{staticClass:\"splash-screen__app-name\"},[_c('div',[_vm._v(\"\\n            \"+_vm._s(_vm.name)+\"\\n          \")])])]),_c('div',{staticClass:\"font-weight-light text-center splash-screen__disclaimer\"},[_vm._v(\"\\n        \"+_vm._s(_vm.$t('splash-screen.disclaimer'))+\"\\n      \")]),_c('div',{staticClass:\"font-weight-light text-center splash-screen__matrix_sign\"},[_vm._v(\"\\n        \"+_vm._s(_vm.$t('splash-screen.matrix-sign'))+\"\\n      \")]),_c('div',{staticClass:\"splash-screen__button\"},[(_vm.injectedProvider)?_c('action-button',{attrs:{\"text\":_vm.$t('splash-screen.connect-button'),\"enabled\":!_vm.connecting,\"loading\":_vm.connecting},on:{\"click\":function($event){return _vm.connect()}}}):_c('span',{staticClass:\"splash-screen__no-provider\"},[_vm._v(\"\\n          \"+_vm._s(_vm.$t('splash-screen.no-provider'))+\"\\n        \")])],1),_c('div',{staticClass:\"splash-screen__message\"},[(_vm.accessDenied)?_c('no-access-message',{attrs:{\"reason\":_vm.accessDenied}}):_vm._e()],1)])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-alert',{staticClass:\"no-access-message\",attrs:{\"value\":true,\"color\":\"error\",\"icon\":\"warning\"}},[_c('div',{staticClass:\"font-weight-light no-access-message__message\"},[(_vm.networkUnsupported)?_c('span',[_vm._v(\"\\n      \"+_vm._s(_vm.$t('no-access.unsupported-network'))+\"\\n    \")]):(_vm.initializationFailed)?_c('span',[_vm._v(\"\\n      \"+_vm._s(_vm.$t('no-access.sdk-initialization-failure'))+\"\\n    \")]):_c('span',[_vm._v(\"\\n      \"+_vm._s(_vm.$t('no-access.generic-error'))+\"\\n    \")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { DeniedReason } from '@/model/types';\n\n@Component({})\nexport default class NoAccessMessage extends Vue {\n  @Prop({ required: true })\n  reason!: DeniedReason;\n\n  get networkUnsupported(): boolean {\n    return this.reason === DeniedReason.UNSUPPORTED_NETWORK;\n  }\n\n  get initializationFailed(): boolean {\n    return this.reason === DeniedReason.INITIALIZATION_FAILED;\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoAccessMessage.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoAccessMessage.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./NoAccessMessage.vue?vue&type=template&id=6b8163f4&scoped=true&\"\nimport script from \"./NoAccessMessage.vue?vue&type=script&lang=ts&\"\nexport * from \"./NoAccessMessage.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./NoAccessMessage.vue?vue&type=style&index=0&id=6b8163f4&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6b8163f4\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAlert } from 'vuetify/lib/components/VAlert';\ninstallComponents(component, {VAlert})\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Emit, Prop, Vue } from 'vue-property-decorator';\nimport { Web3Provider } from '@/services/web3-provider';\nimport { DeniedReason } from '@/model/types';\nimport { mapState } from 'vuex';\nimport NoAccessMessage from '@/components/NoAccessMessage.vue';\nimport ActionButton from '@/components/ActionButton.vue';\n\n@Component({\n  components: {\n    ActionButton,\n    NoAccessMessage\n  },\n  computed: mapState(['accessDenied'])\n})\nexport default class Loading extends Vue {\n  accessDenied!: DeniedReason;\n  name: string = 'Raiden dApp';\n\n  @Prop({ default: false, required: true, type: Boolean })\n  connecting!: boolean;\n\n  // noinspection JSMethodCanBeStatic\n  get injectedProvider(): boolean {\n    return Web3Provider.injectedWeb3Available();\n  }\n\n  @Emit()\n  connect() {}\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SplashScreen.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SplashScreen.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./SplashScreen.vue?vue&type=template&id=088d4968&scoped=true&\"\nimport script from \"./SplashScreen.vue?vue&type=script&lang=ts&\"\nexport * from \"./SplashScreen.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./SplashScreen.vue?vue&type=style&index=0&id=088d4968&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"088d4968\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VImg } from 'vuetify/lib/components/VImg';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VContainer,VFlex,VImg,VLayout})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (!_vm.loading && _vm.defaultAccount)?_c('v-layout',{staticClass:\"app-header\",attrs:{\"column\":\"\"}},[_c('v-layout',{staticClass:\"app-header__top\",attrs:{\"justify-center\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('div',{staticClass:\"app-header__top__content\"},[_c('div',{staticClass:\"app-header__top__content__back\"},[(_vm.canGoBack)?_c('v-btn',{attrs:{\"height\":\"40px\",\"width\":\"40px\",\"text\":\"\",\"icon\":\"\"},on:{\"click\":function($event){return _vm.onBackClicked()}}},[_c('v-img',{attrs:{\"src\":require('../assets/back_arrow.svg'),\"max-width\":\"34px\"}})],1):_vm._e()],1),_c('v-spacer'),_c('v-layout',{attrs:{\"column\":\"\",\"align-center\":\"\",\"justify-center\":\"\"}},[_c('div',{staticClass:\"app-header__top__content__title\"},[_vm._v(\"\\n            \"+_vm._s(_vm.$route.meta.title)+\"\\n          \")]),_c('div',{staticClass:\"app-header__top__content__network\"},[_vm._v(\"\\n            \"+_vm._s(_vm.network)+\"\\n          \")])]),_c('v-spacer'),_c('div',[_c('v-img',{staticClass:\"app-header__top__content__blockie\",attrs:{\"src\":_vm.$blockie(_vm.defaultAccount),\"height\":\"36\",\"width\":\"36\",\"contain\":\"\",\"aspect-ratio\":\"1\"}})],1)],1)])],1),_c('v-layout',{staticClass:\"app-header__bottom\",attrs:{\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"xs6\":\"\"}},[_c('div',{staticClass:\"app-header__bottom__address text-left\"},[_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('span',_vm._g({},on),[_vm._v(\"\\n              \"+_vm._s(_vm._f(\"truncate\")(_vm.defaultAccount,8))+\"\\n            \")])]}}],null,false,3329657142)},[_c('span',[_vm._v(_vm._s(_vm.defaultAccount))])]),_c('v-tooltip',{attrs:{\"bottom\":\"\",\"dark\":\"\",\"activator\":\"#copyBtn\"},model:{value:(_vm.copied),callback:function ($$v) {_vm.copied=$$v},expression:\"copied\"}},[_c('span',[_vm._v(_vm._s(_vm.$t('app-header.copy-success')))])]),_c('v-btn',{attrs:{\"id\":\"copyBtn\",\"text\":\"\",\"icon\":\"\"},on:{\"click\":function($event){return _vm.copy()}}},[_c('v-img',{staticClass:\"app-header__bottom__address__copy\",attrs:{\"src\":require('../assets/copy_icon.svg'),\"contain\":\"\"}})],1)],1)]),_c('v-flex',{attrs:{\"xs6\":\"\"}},[_c('div',{staticClass:\"app-header__bottom__balance text-right\"},[_vm._v(\"\\n        \"+_vm._s(_vm._f(\"decimals\")(_vm.accountBalance))+\"\\n        \"),_c('span',{staticClass:\"app-header__bottom__balance__currency\"},[_vm._v(\"\\n          \"+_vm._s(_vm.$t('app-header.currency'))+\"\\n        \")])])])],1),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.defaultAccount),expression:\"defaultAccount\"}],ref:\"copy\",staticClass:\"app-header__copy-area\",domProps:{\"value\":(_vm.defaultAccount)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.defaultAccount=$event.target.value}}})],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Mixins } from 'vue-property-decorator';\nimport { mapGetters, mapState } from 'vuex';\nimport BlockieMixin from '@/mixins/blockie-mixin';\nimport { RouteNames } from '@/route-names';\nimport NavigationMixin from '@/mixins/navigation-mixin';\n\n@Component({\n  computed: {\n    ...mapState(['loading', 'defaultAccount', 'accountBalance']),\n    ...mapGetters(['network'])\n  }\n})\nexport default class AppHeader extends Mixins(BlockieMixin, NavigationMixin) {\n  defaultAccount!: string;\n  loading!: boolean;\n  accountBalance!: string;\n  network!: string;\n\n  copied: boolean = false;\n  private timeout: number = 0;\n\n  get canGoBack(): boolean {\n    return this.$route.name !== RouteNames.HOME;\n  }\n\n  copy() {\n    const copyArea = this.$refs.copy as HTMLTextAreaElement;\n    copyArea.focus();\n    copyArea.select();\n    this.copied = document.execCommand('copy');\n\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n\n    this.timeout = (setTimeout(() => {\n      this.copied = false;\n    }, 2000) as unknown) as number;\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppHeader.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppHeader.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./AppHeader.vue?vue&type=template&id=1fb34092&scoped=true&\"\nimport script from \"./AppHeader.vue?vue&type=script&lang=ts&\"\nexport * from \"./AppHeader.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./AppHeader.vue?vue&type=style&index=0&id=1fb34092&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1fb34092\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VImg } from 'vuetify/lib/components/VImg';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VTooltip } from 'vuetify/lib/components/VTooltip';\ninstallComponents(component, {VBtn,VFlex,VImg,VLayout,VSpacer,VTooltip})\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport SplashScreen from '@/components/SplashScreen.vue';\nimport AppHeader from '@/components/AppHeader.vue';\nimport { mapState } from 'vuex';\nimport { DeniedReason } from '@/model/types';\n\n@Component({\n  computed: mapState(['loading', 'accessDenied']),\n  components: { AppHeader, SplashScreen }\n})\nexport default class App extends Vue {\n  name: string;\n  connecting: boolean = false;\n  accessDenied!: DeniedReason;\n  loading!: boolean;\n\n  constructor() {\n    super();\n    this.name = 'Raiden dApp';\n  }\n\n  get inaccessible() {\n    return (\n      this.connecting ||\n      this.loading ||\n      this.accessDenied !== DeniedReason.UNDEFINED\n    );\n  }\n\n  async connect() {\n    this.connecting = true;\n    this.$store.commit('reset');\n    await this.$raiden.connect();\n    this.connecting = false;\n  }\n\n  destroyed() {\n    this.$raiden.disconnect();\n  }\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=4799bff0&scoped=true&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=4799bff0&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4799bff0\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VApp } from 'vuetify/lib/components/VApp';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VContent } from 'vuetify/lib/components/VContent';\ninstallComponents(component, {VApp,VContainer,VContent})\n","/* istanbul ignore file */\nimport Component from 'vue-class-component';\n\n// Register the router hooks with their names\nComponent.registerHooks([\n  'beforeRouteEnter',\n  'beforeRouteLeave',\n  'beforeRouteUpdate' // for vue-router 2.2+\n]);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('app-core')}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tokens')}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"column\":\"\",\"justify-space-between\":\"\",\"fill-height\":\"\"}},[_c('list-header',{staticClass:\"connected-tokens__header\",attrs:{\"header\":_vm.$t('tokens.connected.header')}}),_c('v-layout',{attrs:{\"justify-center\":\"\",\"fill-height\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('v-list',{staticClass:\"connected-tokens__tokens\",attrs:{\"expand\":\"\"}},_vm._l((_vm.tokens),function(token,index){return _c('v-list-group',{key:token.token,staticClass:\"connected-tokens__tokens__token\",attrs:{\"no-action\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(){return [_c('v-list-item',{attrs:{\"id\":(\"token-\" + index)}},[_c('v-list-item-avatar',{staticClass:\"list-blockie\"},[_c('img',{attrs:{\"src\":_vm.$blockie(token.address),\"alt\":_vm.$t('tokens.connected.token.blockie-alt')}})]),_c('v-list-item-content',[_c('v-list-item-title',{staticClass:\"connected-tokens__tokens__token__info\"},[_vm._v(\"\\n                  \"+_vm._s(_vm.$t('tokens.connected.token.token-info', {\n                      symbol: token.symbol,\n                      name: token.name\n                    }))+\"\\n                \")]),_c('v-list-item-subtitle',{staticClass:\"connected-tokens__tokens__token__address\"},[_vm._v(\"\\n                  \"+_vm._s(token.address)+\"\\n                \")])],1)],1)]},proxy:true}],null,true)},[_c('div',{staticClass:\"connected-tokens__tokens__token__expanded\",attrs:{\"id\":(\"expanded-area-\" + index)}},[_c('v-layout',{attrs:{\"justify-center\":\"\"}},[_c('v-btn',{staticClass:\"text-capitalize connected-tokens__tokens__token__button\",attrs:{\"disabled\":token.open === 0,\"id\":(\"pay-\" + index),\"to\":(\"/payment/\" + (token.address))}},[_vm._v(\"\\n                \"+_vm._s(_vm.$t('tokens.connected.token.buttons.pay'))+\"\\n              \")]),_c('v-btn',{staticClass:\"text-capitalize connected-tokens__tokens__token__button leave\",attrs:{\"id\":(\"leave-\" + index)},on:{\"click\":function($event){return _vm.leaveNetwork(token)}}},[_vm._v(\"\\n                \"+_vm._s(_vm.$t('tokens.connected.token.buttons.disconnect'))+\"\\n              \")]),_c('v-btn',{staticClass:\"text-capitalize connected-tokens__tokens__token__button\",attrs:{\"to\":(\"/channels/\" + (token.address))}},[_vm._v(\"\\n                \"+_vm._s(_vm.$t('tokens.connected.token.buttons.view-channels'))+\"\\n              \")])],1)],1)])}),1)],1)],1),_c('action-button',{staticClass:\"connected-tokens__button\",attrs:{\"text\":_vm.$t('tokens.connect-new'),\"enabled\":\"\"},on:{\"click\":function($event){return _vm.navigateToTokenSelect()}}}),_c('confirmation-dialog',{attrs:{\"display\":_vm.leaveModalVisible},on:{\"confirm\":function($event){return _vm.leaveConfirmed()},\"cancel\":function($event){return _vm.leaveCancelled()}},scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_vm._v(\"\\n      \"+_vm._s(_vm.$t('tokens.disconnect-dialog.header'))+\"\\n    \")]},proxy:true}])},[(_vm.selectedToken)?_c('i18n',{attrs:{\"path\":\"tokens.disconnect-dialog.confirmation-message\",\"tag\":\"div\"}},[_c('b',{attrs:{\"place\":\"symbol\"}},[_vm._v(_vm._s(_vm.selectedToken.symbol))]),_c('span',{staticClass:\"connected-tokens__tokens__token__leave__address\",attrs:{\"place\":\"address\"}},[_vm._v(\"\\n        \"+_vm._s(_vm.selectedToken.address)+\"\\n      \")])]):_vm._e()],1),_c('stepper',{attrs:{\"display\":_vm.loading,\"steps\":_vm.steps,\"doneStep\":_vm.doneStep}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"justify-center\":\"\"}},[_c('v-dialog',{attrs:{\"persistent\":\"\",\"max-width\":\"625\"},model:{value:(_vm.display),callback:function ($$v) {_vm.display=$$v},expression:\"display\"}},[_c('v-card',[_c('v-card-title',[_c('v-flex',[_c('h1',{staticClass:\"confirmation-dialog__header\"},[_vm._t(\"header\")],2)])],1),_c('v-card-text',[_c('p',{staticClass:\"confirmation-dialog__message\"},[_vm._t(\"default\")],2)]),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{staticClass:\"confirmation-dialog__button\",attrs:{\"text\":\"\"},on:{\"click\":function($event){return _vm.cancel()}}},[_vm._v(\"\\n          \"+_vm._s(_vm.$t('confirmation-dialog.buttons.cancel'))+\"\\n        \")]),_c('v-btn',{staticClass:\"confirmation-dialog__button confirmation-dialog__button__primary\",attrs:{\"text\":\"\"},on:{\"click\":function($event){return _vm.confirm()}}},[_vm._v(\"\\n          \"+_vm._s(_vm.$t('confirmation-dialog.buttons.confirm'))+\"\\n        \")]),_c('v-spacer')],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\n\n@Component({})\nexport default class ConfirmationDialog extends Vue {\n  @Prop({ required: true })\n  display!: boolean;\n\n  confirm() {\n    this.$emit('confirm');\n  }\n\n  cancel() {\n    this.$emit('cancel');\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfirmationDialog.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfirmationDialog.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ConfirmationDialog.vue?vue&type=template&id=013b36dc&scoped=true&\"\nimport script from \"./ConfirmationDialog.vue?vue&type=script&lang=ts&\"\nexport * from \"./ConfirmationDialog.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ConfirmationDialog.vue?vue&type=style&index=0&id=013b36dc&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"013b36dc\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VBtn,VCard,VCardActions,VCardText,VCardTitle,VDialog,VFlex,VLayout,VSpacer})\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Mixins } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\nimport ConfirmationDialog from '@/components/ConfirmationDialog.vue';\nimport { emptyDescription, StepDescription, TokenModel } from '@/model/types';\nimport Stepper from '@/components/Stepper.vue';\nimport BlockieMixin from '@/mixins/blockie-mixin';\nimport ListHeader from '@/components/ListHeader.vue';\nimport ActionButton from '@/components/ActionButton.vue';\nimport NavigationMixin from '@/mixins/navigation-mixin';\n\n@Component({\n  components: { ListHeader, Stepper, ConfirmationDialog, ActionButton },\n  computed: mapGetters(['tokens'])\n})\nexport default class Tokens extends Mixins(BlockieMixin, NavigationMixin) {\n  tokens!: TokenModel[];\n  selectedToken: TokenModel | null = null;\n  leaveModalVisible: boolean = false;\n\n  loading: boolean = false;\n  steps: StepDescription[] = [];\n  doneStep: StepDescription = emptyDescription();\n\n  created() {\n    this.steps = [(this.$t('tokens.leave-progress') as any) as StepDescription];\n    this.doneStep = (this.$t('tokens.leave-done') as any) as StepDescription;\n  }\n\n  private dismissModal() {\n    this.leaveModalVisible = false;\n    this.selectedToken = null;\n  }\n\n  leaveNetwork(token: TokenModel) {\n    this.selectedToken = token;\n    this.leaveModalVisible = true;\n  }\n\n  async leaveConfirmed() {\n    const address = this.selectedToken!.address;\n    this.dismissModal();\n    this.loading = true;\n    await this.$raiden.leaveNetwork(address);\n    this.loading = false;\n  }\n\n  leaveCancelled() {\n    this.dismissModal();\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tokens.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tokens.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Tokens.vue?vue&type=template&id=a76c6f98&scoped=true&\"\nimport script from \"./Tokens.vue?vue&type=script&lang=ts&\"\nexport * from \"./Tokens.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Tokens.vue?vue&type=style&index=0&id=a76c6f98&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"a76c6f98\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\nimport { VList } from 'vuetify/lib/components/VList';\nimport { VListGroup } from 'vuetify/lib/components/VList';\nimport { VListItem } from 'vuetify/lib/components/VList';\nimport { VListItemAvatar } from 'vuetify/lib/components/VList';\nimport { VListItemContent } from 'vuetify/lib/components/VList';\nimport { VListItemSubtitle } from 'vuetify/lib/components/VList';\nimport { VListItemTitle } from 'vuetify/lib/components/VList';\ninstallComponents(component, {VBtn,VFlex,VLayout,VList,VListGroup,VListItem,VListItemAvatar,VListItemContent,VListItemSubtitle,VListItemTitle})\n","\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport Tokens from '@/components/Tokens.vue';\n\n@Component({\n  components: { Tokens }\n})\nexport default class AppCore extends Vue {}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppCore.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppCore.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./AppCore.vue?vue&type=template&id=78c5b79c&\"\nimport script from \"./AppCore.vue?vue&type=script&lang=ts&\"\nexport * from \"./AppCore.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport AppCore from '@/components/AppCore.vue';\n\n@Component({\n  components: {\n    AppCore\n  }\n})\nexport default class Home extends Vue {}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=5122a23d&\"\nimport script from \"./Home.vue?vue&type=script&lang=ts&\"\nexport * from \"./Home.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* istanbul ignore file */\nimport Vue from 'vue';\nimport Router, { Route } from 'vue-router';\nimport { Dictionary } from 'vue-router/types/router';\n\nimport Home from './views/Home.vue';\nimport { RouteNames } from '@/route-names';\nimport store from './store';\nimport { Tokens } from './types';\n\nVue.use(Router);\n\nconst router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/',\n      name: RouteNames.HOME,\n      meta: {\n        title: 'Raiden dApp'\n      },\n      component: Home\n    },\n    {\n      path: '*',\n      redirect: '/'\n    },\n    {\n      path: '/payment/:token',\n      name: RouteNames.PAYMENT,\n      meta: {\n        title: 'Send'\n      },\n      component: () => import('./views/Payment.vue')\n    },\n    {\n      path: '/connect',\n      name: RouteNames.SELECT_TOKEN,\n      meta: {\n        title: 'Select token'\n      },\n      component: () => import('./views/SelectToken.vue')\n    },\n    {\n      path: '/connect/:token',\n      name: RouteNames.SELECT_HUB,\n      meta: {\n        title: 'Select hub'\n      },\n      component: () => import('./views/SelectHub.vue')\n    },\n    {\n      path: '/connect/:token/:partner',\n      name: RouteNames.OPEN_CHANNEL,\n      meta: {\n        title: 'Open channel'\n      },\n      component: () => import('./views/OpenChannel.vue')\n    },\n    {\n      path: '/channels/:token',\n      name: RouteNames.CHANNELS,\n      meta: {\n        title: 'Channels'\n      },\n      component: () => import('./views/Channels.vue')\n    }\n  ]\n});\n\nexport default router;\n","import Vue from 'vue';\nimport Vuex, { StoreOptions } from 'vuex';\nimport { RootState, Tokens } from '@/types';\nimport { ChannelState, RaidenChannel, RaidenChannels } from 'raiden-ts';\nimport {\n  AccTokenModel,\n  DeniedReason,\n  emptyTokenModel,\n  PlaceHolderNetwork,\n  Token,\n  TokenModel\n} from '@/model/types';\nimport map from 'lodash/map';\nimport flatMap from 'lodash/flatMap';\nimport filter from 'lodash/filter';\nimport clone from 'lodash/clone';\nimport reduce from 'lodash/reduce';\nimport orderBy from 'lodash/orderBy';\nimport isEqual from 'lodash/isEqual';\nimport isEmpty from 'lodash/isEmpty';\nimport { Network } from 'ethers/utils';\n\nVue.use(Vuex);\n\nconst _defaultState: RootState = {\n  loading: true,\n  defaultAccount: '',\n  accountBalance: '0.0',\n  providerDetected: true,\n  accessDenied: DeniedReason.UNDEFINED,\n  channels: {},\n  tokens: {},\n  network: PlaceHolderNetwork\n};\n\nexport function defaultState(): RootState {\n  return clone(_defaultState);\n}\n\nconst store: StoreOptions<RootState> = {\n  state: defaultState(),\n  mutations: {\n    noProvider(state: RootState) {\n      state.providerDetected = false;\n    },\n    accessDenied(state: RootState, reason: DeniedReason) {\n      state.accessDenied = reason;\n    },\n    account(state: RootState, account: string) {\n      state.defaultAccount = account;\n    },\n    loadComplete(state: RootState) {\n      state.loading = false;\n    },\n    balance(state: RootState, balance: string) {\n      state.accountBalance = balance;\n    },\n    updateChannels(state: RootState, channels: RaidenChannels) {\n      state.channels = channels;\n    },\n    updateTokens(state: RootState, tokens: Tokens) {\n      for (const [address, token] of Object.entries(tokens))\n        if (address in state.tokens && isEqual(token, state.tokens[address]))\n          continue;\n        else if (address in state.tokens)\n          state.tokens[address] = { ...state.tokens[address], ...token };\n        else state.tokens = { ...state.tokens, [address]: token };\n    },\n    network(state: RootState, network: Network) {\n      state.network = network;\n    },\n    reset(state: RootState) {\n      Object.assign(state, defaultState());\n    }\n  },\n  actions: {},\n  getters: {\n    tokens: function(state: RootState): TokenModel[] {\n      const reducer = (\n        acc: AccTokenModel,\n        channel: RaidenChannel\n      ): AccTokenModel => {\n        acc.address = channel.token;\n        (acc[channel.state] as number) += 1;\n        return acc;\n      };\n\n      return map(\n        filter(flatMap(state.channels), channels => !isEmpty(channels)),\n        tokenChannels => {\n          const model = reduce(tokenChannels, reducer, emptyTokenModel());\n          const tokenInfo = state.tokens[model.address];\n          if (tokenInfo) {\n            model.name = tokenInfo.name || '';\n            model.symbol = tokenInfo.symbol || '';\n          }\n\n          return model;\n        }\n      );\n    },\n    allTokens: (state: RootState): Token[] => {\n      return Object.values(state.tokens);\n    },\n    channels: (state: RootState) => (tokenAddress: string) => {\n      let channels: RaidenChannel[] = [];\n      const tokenChannels = state.channels[tokenAddress];\n      if (tokenChannels && !isEmpty(tokenChannels)) {\n        channels = flatMap(tokenChannels);\n      }\n      return channels;\n    },\n    token: (state: RootState) => (tokenAddress: string) => {\n      if (tokenAddress in state.tokens) {\n        return state.tokens[tokenAddress];\n      } else {\n        return null;\n      }\n    },\n    network: (state: RootState) => {\n      return state.network.name || `Chain ${state.network.chainId}`;\n    },\n    channelWithBiggestCapacity: (_, getters) => (tokenAddress: string) => {\n      const channels: RaidenChannel[] = getters.channels(tokenAddress);\n      const openChannels = channels.filter(\n        value => value.state === ChannelState.open\n      );\n      return orderBy(openChannels, ['capacity'], ['desc'])[0];\n    }\n  }\n};\n\nexport default new Vuex.Store(store);\n","/* eslint-disable no-console */\n/* istanbul ignore file */\n\nimport { register } from 'register-service-worker';\n\nif (\n  process.env.NODE_ENV === 'production' &&\n  !process.env.VUE_APP_RAIDEN_PACKAGE\n) {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n          'For more details, visit https://goo.gl/AFskqB'\n      );\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\n","/* istanbul ignore file */\nimport Component from 'vue-class-component';\n\n// Register the router hooks with their names\nComponent.registerHooks([\n  'beforeRouteEnter',\n  'beforeRouteLeave',\n  'beforeRouteUpdate'\n]);\n","import _Vue from 'vue';\nimport RaidenService from '@/services/raiden-service';\nimport store from '@/store';\n\nexport function RaidenPlugin(Vue: typeof _Vue, options?: any): void {\n  Vue.prototype.$raiden = new RaidenService(store);\n}\n\ndeclare module 'vue/types/vue' {\n  // 3. Declare augmentation for Vue\n  interface Vue {\n    $raiden: RaidenService;\n  }\n}\n","import makeBlockie from 'ethereum-blockies-base64';\n\nexport class IdenticonCache {\n  private cache: { [id: string]: string } = {};\n\n  constructor() {}\n\n  public getIdenticon(address: string): string {\n    const cached = this.cache[address];\n\n    if (!cached) {\n      const generated = makeBlockie(address);\n      this.cache[address] = generated;\n      return generated;\n    } else {\n      return cached;\n    }\n  }\n}\n","import _Vue from 'vue';\nimport { IdenticonCache } from '@/services/identicon-cache';\n\nexport function IdenticonPlugin(Vue: typeof _Vue, options?: any): void {\n  Vue.prototype.$identicon = new IdenticonCache();\n}\n\ndeclare module 'vue/types/vue' {\n  // 3. Declare augmentation for Vue\n  interface Vue {\n    $identicon: IdenticonCache;\n  }\n}\n","/* istanbul ignore file */\nimport Vue from 'vue';\nimport VueI18n, { LocaleMessages } from 'vue-i18n';\n\nVue.use(VueI18n);\n\nfunction loadLocaleMessages(): LocaleMessages {\n  const locales = require.context(\n    './locales',\n    true,\n    /[A-Za-z0-9-_,\\s]+\\.json$/i\n  );\n  const messages: LocaleMessages = {};\n  locales.keys().forEach(key => {\n    const matched = key.match(/([A-Za-z0-9-_]+)\\./i);\n    if (matched && matched.length > 1) {\n      const locale = matched[1];\n      messages[locale] = locales(key);\n    }\n  });\n  return messages;\n}\n\nexport default new VueI18n({\n  locale: process.env.VUE_APP_I18N_LOCALE || 'en',\n  fallbackLocale: process.env.VUE_APP_I18N_FALLBACK_LOCALE || 'en',\n  messages: loadLocaleMessages()\n});\n","/* istanbul ignore file */\n\nimport Vue from 'vue';\nimport Vuetify from 'vuetify/lib';\n\nVue.use(Vuetify);\n\nexport default new Vuetify({\n  icons: {\n    iconfont: 'mdi'\n  },\n  theme: {\n    dark: true,\n    themes: {\n      dark: {\n        primary: '#28A5C8',\n        secondary: '#0A6E87'\n      }\n    }\n  }\n});\n","/* istanbul ignore file */\nimport Vue from 'vue';\nimport App from './App.vue';\nimport '@/plugins/class-component.hooks';\nimport '@/filters';\nimport router from './router';\nimport store from './store';\nimport './registerServiceWorker';\nimport './class-component-hooks';\nimport { RaidenPlugin } from '@/plugins/raiden';\nimport { IdenticonPlugin } from '@/plugins/identicon-plugin';\nimport i18n from './i18n';\nimport vuetify from '@/plugins/vuetify';\nimport VueVirtualScroller from 'vue-virtual-scroller';\nimport 'vue-virtual-scroller/dist/vue-virtual-scroller.css';\nimport '@babel/polyfill';\n\nVue.config.productionTip = false;\n\nVue.use(RaidenPlugin);\nVue.use(IdenticonPlugin);\nVue.use(VueVirtualScroller);\n\nnew Vue({\n  vuetify,\n  router,\n  store,\n\n  created() {\n    if (sessionStorage.redirect) {\n      const redirect = sessionStorage.redirect;\n      delete sessionStorage.redirect;\n      this.$router.push(redirect);\n    }\n  },\n\n  i18n,\n  render: h => h(App)\n}).$mount('#app');\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{staticClass:\"list-header\"},[_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('div',{staticClass:\"list-header__header\"},[_vm._v(_vm._s(_vm.header))]),_c('div',{staticClass:\"list-header__divider\"})])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\n\n@Component({})\nexport default class ListHeader extends Vue {\n  @Prop({ required: true })\n  header!: string;\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListHeader.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListHeader.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ListHeader.vue?vue&type=template&id=59800fee&scoped=true&\"\nimport script from \"./ListHeader.vue?vue&type=script&lang=ts&\"\nexport * from \"./ListHeader.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ListHeader.vue?vue&type=style&index=0&id=59800fee&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"59800fee\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VFlex } from 'vuetify/lib/components/VGrid';\nimport { VLayout } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VFlex,VLayout})\n","export class ConfigProvider {\n  static async fetch(\n    url?: string\n  ): Promise<{ INFURA_ENDPOINT: string; PRIVATE_KEY: string } | undefined> {\n    if (url) return await (await fetch(url)).json();\n\n    return undefined;\n  }\n}\n","import { Raiden, RaidenChannel, RaidenSentTransfer } from 'raiden-ts';\nimport { Store } from 'vuex';\nimport { RootState, Tokens } from '@/types';\nimport { Web3Provider } from '@/services/web3-provider';\nimport { BalanceUtils } from '@/utils/balance-utils';\nimport {\n  DeniedReason,\n  LeaveNetworkResult,\n  Progress,\n  Token,\n  TokenModel\n} from '@/model/types';\nimport { BigNumber } from 'ethers/utils';\nimport { Zero } from 'ethers/constants';\nimport { exhaustMap, filter, first } from 'rxjs/operators';\nimport asyncPool from 'tiny-async-pool';\nimport { ConfigProvider } from './config-provider';\n\nexport default class RaidenService {\n  private _raiden?: Raiden;\n  private store: Store<RootState>;\n\n  private static async createRaiden(\n    provider: any,\n    account: string | number = 0\n  ): Promise<Raiden> {\n    try {\n      return await Raiden.create(provider, account, window.localStorage);\n    } catch (e) {\n      throw new RaidenInitializationFailed(e);\n    }\n  }\n\n  private get raiden(): Raiden {\n    if (this._raiden === undefined) {\n      throw new Error('Raiden instance was not initialized');\n    } else {\n      return this._raiden;\n    }\n  }\n\n  constructor(store: Store<RootState>) {\n    this._raiden = undefined;\n    this.store = store;\n  }\n\n  async ensResolve(name: string): Promise<string> {\n    try {\n      return await this.raiden.resolveName(name);\n    } catch (e) {\n      throw new EnsResolveFailed(e);\n    }\n  }\n\n  async connect() {\n    try {\n      const raidenPackageConfigUrl = process.env.VUE_APP_RAIDEN_PACKAGE;\n      let config;\n      let provider;\n      let raiden;\n\n      if (raidenPackageConfigUrl) {\n        config = await ConfigProvider.fetch(raidenPackageConfigUrl);\n        provider = await Web3Provider.provider(config);\n      } else {\n        provider = await Web3Provider.provider();\n      }\n\n      if (!provider) {\n        this.store.commit('noProvider');\n      } else {\n        if (config) {\n          raiden = await RaidenService.createRaiden(\n            provider,\n            config.PRIVATE_KEY\n          );\n        } else {\n          raiden = await RaidenService.createRaiden(provider);\n        }\n\n        this._raiden = raiden;\n\n        this.store.commit('account', await this.getAccount());\n        this.store.commit('balance', await this.getBalance());\n\n        // update connected tokens data on each newBlock\n        raiden.events$\n          .pipe(\n            filter(value => value.type === 'newBlock'),\n            exhaustMap(() =>\n              this.fetchTokenData(\n                this.store.getters.tokens.map((m: TokenModel) => m.address)\n              )\n            )\n          )\n          .subscribe();\n\n        raiden.events$\n          .pipe(filter(value => value.type === 'raidenShutdown'))\n          .subscribe(() => this.store.commit('reset'));\n\n        raiden.events$.subscribe(value => {\n          if (value.type === 'tokenMonitored') {\n            this.store.commit('updateTokens', {\n              [value.payload.token]: { address: value.payload.token }\n            });\n          }\n        });\n\n        const initialTokens = await raiden.getTokenList();\n        if (initialTokens.length) {\n          this.store.commit(\n            'updateTokens',\n            initialTokens.reduce(\n              (acc, token) => ({ ...acc, [token]: { address: token } }),\n              {} as Tokens\n            )\n          );\n        }\n\n        raiden.channels$.subscribe(value => {\n          this.store.commit('updateChannels', value);\n        });\n\n        this.store.commit('network', raiden.network);\n      }\n    } catch (e) {\n      console.error(e);\n      let deniedReason: DeniedReason;\n      if (e.message && e.message.indexOf('No deploy info provided') > -1) {\n        deniedReason = DeniedReason.UNSUPPORTED_NETWORK;\n      } else if (e instanceof RaidenInitializationFailed) {\n        deniedReason = DeniedReason.INITIALIZATION_FAILED;\n      } else {\n        deniedReason = DeniedReason.NO_ACCOUNT;\n      }\n      this.store.commit('accessDenied', deniedReason);\n    }\n\n    this.store.commit('loadComplete');\n  }\n  disconnect() {\n    this.raiden.stop();\n  }\n\n  async getAccount(): Promise<string> {\n    return this.raiden.address;\n  }\n\n  async getBalance(): Promise<string> {\n    const balance = await this.raiden.getBalance();\n    return BalanceUtils.toEth(balance);\n  }\n\n  private async getToken(tokenAddress: string): Promise<Token | null> {\n    const raiden = this.raiden;\n    try {\n      const [balance, { decimals, symbol, name }] = await Promise.all([\n        raiden.getTokenBalance(tokenAddress),\n        raiden.getTokenInfo(tokenAddress)\n      ]);\n      return {\n        name: name,\n        symbol: symbol,\n        balance: balance,\n        decimals: decimals,\n        address: tokenAddress\n      };\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  }\n\n  async openChannel(\n    token: string,\n    partner: string,\n    amount: BigNumber,\n    progress?: (progress: Progress) => void\n  ): Promise<void> {\n    const progressUpdater = (current: number, total: number) => {\n      if (progress) {\n        progress({\n          current,\n          total\n        });\n      }\n    };\n\n    const raiden = this.raiden;\n    progressUpdater(1, 3);\n\n    try {\n      await raiden.openChannel(token, partner);\n    } catch (e) {\n      throw new ChannelOpenFailed(e);\n    }\n\n    progressUpdater(2, 3);\n\n    if (amount.gt(Zero)) {\n      await this.deposit(token, partner, amount);\n    }\n  }\n\n  async leaveNetwork(\n    address: string,\n    progress?: (progress: Progress) => void\n  ): Promise<LeaveNetworkResult> {\n    const channels: RaidenChannel[] = this.store.getters.channels(address);\n    const result = {\n      closed: 0,\n      failed: 0\n    };\n\n    const total = channels.length;\n    for (let i = 0; i < total; i++) {\n      if (progress) {\n        progress({\n          current: i + 1,\n          total: total\n        });\n      }\n\n      const channel = channels[i];\n      try {\n        await this.closeChannel(channel.token, channel.partner);\n        result.closed += 1;\n      } catch (e) {\n        result.failed += 1;\n      }\n    }\n\n    return result;\n  }\n\n  async closeChannel(token: string, partner: string) {\n    try {\n      await this.raiden.closeChannel(token, partner);\n    } catch (e) {\n      throw new ChannelCloseFailed(e);\n    }\n  }\n\n  async deposit(token: string, partner: string, amount: BigNumber) {\n    try {\n      await this.raiden.depositChannel(token, partner, amount);\n    } catch (e) {\n      throw new ChannelDepositFailed(e);\n    }\n  }\n\n  async settleChannel(token: string, partner: string) {\n    try {\n      await this.raiden.settleChannel(token, partner);\n    } catch (e) {\n      throw new ChannelSettleFailed(e);\n    }\n  }\n\n  async fetchTokenData(tokens: string[]): Promise<void> {\n    if (!tokens.length) return;\n    const fetchToken = async (address: string): Promise<void> =>\n      this.getToken(address).then(token => {\n        if (!token) return;\n        this.store.commit('updateTokens', { [token.address]: token });\n      });\n\n    await asyncPool(6, tokens, fetchToken);\n  }\n\n  async transfer(token: string, target: string, amount: BigNumber) {\n    try {\n      await this.raiden.getAvailability(target);\n      const secretHash = await this.raiden.transfer(token, target, amount);\n\n      // Wait for transaction to be completed\n      await this.raiden.transfers$\n        .pipe(\n          first(\n            (transfer: RaidenSentTransfer) =>\n              transfer.secrethash === secretHash && transfer.completed\n          )\n        )\n        .toPromise();\n    } catch (e) {\n      throw new TransferFailed(e);\n    }\n  }\n}\n\nexport class ChannelSettleFailed extends Error {}\n\nexport class ChannelCloseFailed extends Error {}\n\nexport class ChannelOpenFailed extends Error {}\n\nexport class ChannelDepositFailed extends Error {}\n\nexport class EnsResolveFailed extends Error {}\n\nexport class TransferFailed extends Error {}\n\nexport class RaidenInitializationFailed extends Error {}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tokens.vue?vue&type=style&index=0&id=a76c6f98&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tokens.vue?vue&type=style&index=0&id=a76c6f98&lang=scss&scoped=true&\"","export class Web3Provider {\n  static async provider(config?: { INFURA_ENDPOINT: string }) {\n    const ethereum = window.ethereum;\n    let provider = null;\n\n    if (config) {\n      provider = `https://${config.INFURA_ENDPOINT}`;\n    } else if (typeof ethereum !== 'undefined') {\n      await ethereum.enable();\n      provider = ethereum;\n    } else if (window.web3) {\n      provider = window.web3.currentProvider;\n    }\n\n    if (provider && provider.isMetaMask) {\n      provider.autoRefreshOnNetworkChange = false;\n    }\n\n    return provider;\n  }\n\n  static injectedWeb3Available = (): boolean => window.ethereum || window.web3;\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as t from 'io-ts';\nimport { bigNumberify, getAddress, isHexString, hexDataLength } from 'ethers/utils';\nimport { Two } from 'ethers/constants';\nimport { LosslessNumber } from 'lossless-json';\nimport { memoize } from 'lodash';\nconst isStringifiable = (u) => \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nu !== null && u !== undefined && typeof u['toString'] === 'function';\nconst isBigNumber = (u) => u && u['_ethersType'] === 'BigNumber';\n/**\n * Codec of ethers.utils.BigNumber objects\n * Input can be anything bigNumberify-able: number, string, LosslessNumber or BigNumber\n * Output is LosslessNumber, so we can JSON-serialize with 'number' types bigger than JS VM limits\n * of ±2^53, as Raiden full-client/python stdlib json encode/decode longs as json number.\n */\nexport const BigNumberC = new t.Type('BigNumber', isBigNumber, (u, c) => {\n    if (isBigNumber(u))\n        return t.success(u);\n    try {\n        if (isStringifiable(u))\n            return t.success(bigNumberify(u.toString()));\n    }\n    catch (err) {\n        return t.failure(u, c, err.message);\n    }\n    return t.failure(u, c);\n}, a => new LosslessNumber(a.toString()));\n/**\n * Helper function to create codecs to validate an arbitrary or variable-sized hex bytestring\n * A branded codec to indicate validated hex-strings\n *\n * @param size - Required number of bytes. Pass undefined or zero to have a variable-sized type\n * @returns branded codec for hex-encoded bytestrings\n */\nexport const HexString = memoize(function (size) {\n    return t.brand(t.string, (n) => typeof n === 'string' && (size ? hexDataLength(n) === size : isHexString(n)), 'HexString');\n});\n/**\n * Helper function to create codecs to validate an arbitrary or variable-sized BigNumbers\n * A branded codec/type to indicate size-validated BigNumbers\n *\n * @param size - Required number of bytes. Pass undefined or zero to have a variable-sized type\n * @returns branded codec for hex-encoded bytestrings\n */\nexport const UInt = memoize(function (size) {\n    const max = size ? Two.pow(size * 8) : undefined;\n    return t.brand(BigNumberC, (n) => BigNumberC.is(n) && n.gte(0) && (max === undefined || n.lt(max)), 'UInt');\n});\n// specific types\n// strig brand: ECDSA signature as an hex-string\nexport const Signature = HexString(65);\n// string brand: 256-bit hash, usually keccak256 or sha256\nexport const Hash = HexString(32);\n// string brand: a secret bytearray, non-sized\nexport const Secret = HexString();\n// string brand: ECDSA private key, 32 bytes\nexport const PrivateKey = HexString(32);\n// string brand: checksummed address, 20 bytes\nexport const Address = t.brand(HexString(20), (u) => {\n    try {\n        return typeof u === 'string' && getAddress(u) === u;\n    }\n    catch (e) { }\n    return false;\n}, // type guard for branded values\n'Address');\n/**\n * Helper function to create codecs to validate [timestamp, value] tuples\n *\n * @param codec - Codec to compose with a timestamp in a tuple\n * @returns Codec of a tuple of timestamp and codec type\n */\nexport const Timed = memoize((codec) => t.tuple([t.number, codec]));\n/**\n * Given a value of type T, returns a Timed<T> tuple with current time as first value\n *\n * @param v - Value to return with time\n * @returns Tuple of call timestamp as first elemtn and value passed as parameter as second\n */\nexport function timed(v) {\n    return [Date.now(), v];\n}\n//# sourceMappingURL=types.js.map","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Two } from 'ethers/constants';\nimport { bigNumberify } from 'ethers/utils';\nimport { hexlify, isArrayish, hexZeroPad, hexDataLength } from 'ethers/utils/bytes';\nimport { parse } from 'lossless-json';\nimport { BigNumberC } from './types';\n/**\n * Encode data to hex string of exactly length size (in bytes)\n * Throw if data can't be made to fit in length.\n *\n * @param data - May be of multiple types:\n *      - number|BigNumber: Encoded in the big-endian byte-order and left-zero-padded to length\n *      - string: Must be hex-encoded string of length bytes\n *      - number[] Must be of exactly of length size (left/right-pad it before if needed)\n * @param length - The expected length of the hex string, in bytes\n * @returns HexString byte-array of length\n */\nexport function encode(data, length) {\n    let hex;\n    if (typeof data === 'number')\n        data = bigNumberify(data);\n    if (BigNumberC.is(data)) {\n        if (data.lt(0))\n            throw new Error('Number is negative');\n        if (data.gte(Two.pow(length * 8)))\n            throw new Error('Number too large');\n        hex = hexZeroPad(hexlify(data), length);\n    }\n    else if (typeof data === 'string' || isArrayish(data)) {\n        const str = hexlify(data);\n        if (hexDataLength(str) !== length)\n            throw new Error('Uint8Array or hex string must be of exact length');\n        hex = str;\n    }\n    else {\n        throw new Error('data is not a HexString or Uint8Array');\n    }\n    return hex;\n}\nconst isLosslessNumber = (u) => \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nu && u['isLosslessNumber'] === true;\n/**\n * Opportunistic JSON.parse regarding numbers\n * If possible to decode a JSON number as JS number (i.e. value < 2^53) and return 'number',\n * otherwise returns LosslessNumber object, which can be decoded as BigNumber by BigNumberC\n * Throws if handled invalid JSON\n *\n * @param text - JSON string to parse\n * @returns Decoded object\n */\nexport function losslessParse(text) {\n    return parse(text, ({}, value) => {\n        if (isLosslessNumber(value)) {\n            try {\n                return value.valueOf(); // return number, if possible, or throw if > 2^53\n            }\n            catch (e) { } // else, pass to return LosslessNumber, which can be decoded by BigNumberC\n        }\n        return value;\n    });\n}\nexport { stringify as losslessStringify } from 'lossless-json';\n//# sourceMappingURL=data.js.map","import * as t from 'io-ts';\nimport { Address, Hash, Signature, UInt } from '../utils/types';\n// Represents a HashTime-Locked amount in a channel\nexport const Lock = t.type({\n    amount: UInt(32),\n    expiration: UInt(32),\n    secrethash: Hash,\n}, 'Lock');\n/**\n * Balance Proof constructed from an EnvelopeMessage\n * Either produced by us or received from the partner, the BPs are generated from the messages\n * because BP signature requires the hash of the message, for authentication of data not included\n * nor relevant for the smartcontract/BP itself, but so for the peers (e.g. payment_id)\n */\nexport const SignedBalanceProof = t.type({\n    // channel data\n    chainId: UInt(32),\n    tokenNetworkAddress: Address,\n    channelId: UInt(32),\n    // balance proof data\n    nonce: UInt(8),\n    transferredAmount: UInt(32),\n    lockedAmount: UInt(32),\n    locksroot: Hash,\n    messageHash: Hash,\n    signature: Signature,\n    sender: Address,\n});\n//# sourceMappingURL=types.js.map","import * as t from 'io-ts';\nimport { UInt } from '../utils/types';\nimport { Lock, SignedBalanceProof } from './types';\nexport var ChannelState;\n(function (ChannelState) {\n    ChannelState[\"opening\"] = \"opening\";\n    ChannelState[\"open\"] = \"open\";\n    ChannelState[\"closing\"] = \"closing\";\n    ChannelState[\"closed\"] = \"closed\";\n    ChannelState[\"settleable\"] = \"settleable\";\n    ChannelState[\"settling\"] = \"settling\";\n    ChannelState[\"settled\"] = \"settled\";\n})(ChannelState || (ChannelState = {}));\n/**\n * Contains info of each side of a channel\n */\nexport const ChannelEnd = t.readonly(t.intersection([\n    t.type({\n        deposit: UInt(32),\n    }),\n    t.partial({\n        locks: t.array(Lock),\n        balanceProof: SignedBalanceProof,\n        withdraw: UInt(32),\n    }),\n]));\nexport const Channel = t.intersection([\n    t.readonly(t.type({\n        own: ChannelEnd,\n        partner: ChannelEnd,\n    })),\n    t.union([\n        /* union of types with literals intersection allows narrowing other props presence. e.g.:\n         * if (channel.state === ChannelState.open) {\n         *   id = channel.id; // <- id can't be undefined\n         *   closeBlock = channel.closeBlock; // error: closeBlock only exist on states closed|settling\n         * }\n         */\n        t.readonly(t.type({ state: t.literal(ChannelState.opening) })),\n        t.readonly(t.type({\n            state: t.union([t.literal(ChannelState.open), t.literal(ChannelState.closing)]),\n            id: t.number,\n            settleTimeout: t.number,\n            openBlock: t.number,\n            isFirstParticipant: t.boolean,\n        })),\n        t.readonly(t.type({\n            state: t.union([\n                t.literal(ChannelState.closed),\n                t.literal(ChannelState.settleable),\n                t.literal(ChannelState.settling),\n            ]),\n            id: t.number,\n            settleTimeout: t.number,\n            openBlock: t.number,\n            isFirstParticipant: t.boolean,\n            closeBlock: t.number,\n        })),\n    ]),\n]);\n/**\n * Channels is a mapping from tokenNetwork -> partner -> Channel\n * As in: { [tokenNetwork: Address]: { [partner: Address]: Channel } }\n * It's used as codec and type for 'channels' key in RaidenState\n * We use t.string instead of the Address branded codecs because specialized types can't be used\n * as index mapping keys.\n */\nexport const Channels = t.readonly(t.record(t.string /* tokenNetwork: Address */, t.readonly(t.record(t.string /* partner: Address */, Channel))));\n//# sourceMappingURL=state.js.map","import * as t from 'io-ts';\nexport const RaidenMatrixSetup = t.readonly(t.type({\n    userId: t.string,\n    accessToken: t.string,\n    deviceId: t.string,\n    displayName: t.string,\n}));\n//# sourceMappingURL=state.js.map","/* istanbul ignore file */\n/* eslint-disable @typescript-eslint/camelcase */\n/**\n * These io-ts codecs validate and decode JSON Raiden messages\n * They include BigNumber strings validation, enum validation (if needed), Address checksum\n * validation, etc, and converting everything to its respective object, where needed.\n */\nimport * as t from 'io-ts';\nimport { memoize } from 'lodash';\n// import { ThrowReporter } from 'io-ts/lib/ThrowReporter';\nimport { Address, Hash, Secret, Signature, UInt } from '../utils/types';\nimport { Lock } from '../channels/types';\n// types\nexport var MessageType;\n(function (MessageType) {\n    MessageType[\"DELIVERED\"] = \"Delivered\";\n    MessageType[\"PROCESSED\"] = \"Processed\";\n    MessageType[\"SECRET_REQUEST\"] = \"SecretRequest\";\n    MessageType[\"SECRET_REVEAL\"] = \"RevealSecret\";\n    MessageType[\"LOCKED_TRANSFER\"] = \"LockedTransfer\";\n    MessageType[\"REFUND_TRANSFER\"] = \"RefundTransfer\";\n    MessageType[\"UNLOCK\"] = \"Unlock\";\n    MessageType[\"LOCK_EXPIRED\"] = \"LockExpired\";\n    MessageType[\"TO_DEVICE\"] = \"ToDevice\";\n    MessageType[\"WITHDRAW_REQUEST\"] = \"WithdrawRequest\";\n    MessageType[\"WITHDRAW_CONFIRMATION\"] = \"WithdrawConfirmation\";\n    MessageType[\"WITHDRAW_EXPIRED\"] = \"WithdrawExpired\";\n    MessageType[\"PFS_CAPACITY_UPDATE\"] = \"PFSCapacityUpdate\";\n})(MessageType || (MessageType = {}));\n// Mixin of a message that contains an identifier and should be ack'ed with a respective Delivered\nconst RetrieableMessage = t.readonly(t.type({ message_identifier: UInt(8) }));\n// Acknowledges to the sender that a RetrieableMessage was received\nexport const Delivered = t.readonly(t.type({\n    type: t.literal(MessageType.DELIVERED),\n    delivered_message_identifier: UInt(8),\n}));\n// Confirms some message that required state validation was successfuly processed\nexport const Processed = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.PROCESSED),\n    }),\n    RetrieableMessage,\n]));\n// Requests the initiator to reveal the secret for a LockedTransfer targeted to us\nexport const SecretRequest = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.SECRET_REQUEST),\n        payment_identifier: UInt(8),\n        secrethash: Hash,\n        amount: UInt(32),\n        expiration: UInt(32),\n    }),\n    RetrieableMessage,\n]));\n// Reveal to the target or the previous hop a secret we just learned off-chain\nexport const SecretReveal = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.SECRET_REVEAL),\n        secret: Secret,\n    }),\n    RetrieableMessage,\n]));\n// Mixin for messages containing a balance proof\nexport const EnvelopeMessage = t.readonly(t.intersection([\n    t.type({\n        chain_id: UInt(32),\n        token_network_address: Address,\n        channel_identifier: UInt(32),\n        nonce: UInt(8),\n        transferred_amount: UInt(32),\n        locked_amount: UInt(32),\n        locksroot: Hash,\n    }),\n    RetrieableMessage,\n]));\nexport const RouteMetadata = t.readonly(t.type({\n    route: t.readonlyArray(Address),\n}));\nexport const Metadata = t.readonly(t.type({\n    routes: t.readonlyArray(RouteMetadata),\n}));\n// base for locked and refund transfer, they differentiate only on the type tag\nconst LockedTransferBase = t.readonly(t.intersection([\n    t.type({\n        payment_identifier: UInt(8),\n        token: Address,\n        recipient: Address,\n        lock: Lock,\n        target: Address,\n        initiator: Address,\n        fee: UInt(32),\n        metadata: Metadata,\n    }),\n    EnvelopeMessage,\n]));\n// a mediated transfer containing a locked amount\nexport const LockedTransfer = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.LOCKED_TRANSFER),\n    }),\n    LockedTransferBase,\n]));\n// if a mediated transfer didn't succeed, mediator can refund the amount with the same secrethash\n// so the previous hop can retry it with another neighbor\nexport const RefundTransfer = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.REFUND_TRANSFER),\n    }),\n    LockedTransferBase,\n]));\n// when the secret is revealed, unlock sends a new balance proof without the lock and increasing\n// the total transfered to finish the offchain transfer\nexport const Unlock = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.UNLOCK),\n        payment_identifier: UInt(8),\n        secret: Secret,\n    }),\n    EnvelopeMessage,\n]));\n// after mediated transfer fails and the lock expire, clean it from the locks tree\nexport const LockExpired = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.LOCK_EXPIRED),\n        recipient: Address,\n        secrethash: Hash,\n    }),\n    EnvelopeMessage,\n]));\nexport const ToDevice = t.readonly(t.type({\n    type: t.literal(MessageType.TO_DEVICE),\n    message_identifier: UInt(8),\n}));\nexport const WithdrawBase = t.readonly(t.type({\n    chain_id: UInt(32),\n    token_network_address: Address,\n    channel_identifier: UInt(32),\n    participant: Address,\n    total_withdraw: UInt(32),\n    nonce: UInt(8),\n    expiration: UInt(32),\n}));\nexport const WithdrawRequest = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.WITHDRAW_REQUEST),\n    }),\n    WithdrawBase,\n    RetrieableMessage,\n]));\nexport const WithdrawConfirmation = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.WITHDRAW_CONFIRMATION),\n    }),\n    WithdrawBase,\n    RetrieableMessage,\n]));\nexport const WithdrawExpired = t.readonly(t.intersection([\n    t.type({\n        type: t.literal(MessageType.WITHDRAW_EXPIRED),\n    }),\n    WithdrawBase,\n    RetrieableMessage,\n]));\nexport const PFSCapacityUpdate = t.readonly(t.type({\n    type: t.literal(MessageType.PFS_CAPACITY_UPDATE),\n    canonical_identifier: t.readonly(t.type({\n        chain_identifier: UInt(32),\n        token_network_address: Address,\n        channel_identifier: UInt(32),\n    })),\n    updating_participant: Address,\n    other_participant: Address,\n    updating_nonce: UInt(8),\n    other_nonce: UInt(8),\n    updating_capacity: UInt(32),\n    other_capacity: UInt(32),\n    reveal_timeout: t.number,\n}));\nexport const Message = t.union([\n    Delivered,\n    Processed,\n    SecretRequest,\n    SecretReveal,\n    LockedTransfer,\n    RefundTransfer,\n    Unlock,\n    LockExpired,\n    ToDevice,\n    WithdrawRequest,\n    WithdrawConfirmation,\n    WithdrawExpired,\n    PFSCapacityUpdate,\n]);\n// generic type codec for messages that must be signed\n// use it like: Codec = Signed(Message)\n// The t.TypeOf<typeof codec> will be Signed<Message>, defined later\nexport const Signed = memoize((codec) => t.intersection([codec, t.readonly(t.type({ signature: Signature }))]));\n//# sourceMappingURL=types.js.map","import * as t from 'io-ts';\nimport { Signed, LockedTransfer, Processed, SecretReveal, Unlock, LockExpired, RefundTransfer, } from '../messages/types';\nimport { Timed, Hash } from '../utils/types';\n/**\n * This struct holds the relevant messages exchanged in a transfer\n * The transfer state is defined by the exchanged messages\n */\nexport const SentTransfer = t.readonly(t.intersection([\n    t.type({\n        /** -> outgoing locked transfer */\n        transfer: Timed(Signed(LockedTransfer)),\n    }),\n    t.partial({\n        /** <- incoming processed for locked transfer */\n        transferProcessed: Timed(Signed(Processed)),\n        /**\n         * <- incoming refund transfer (if so)\n         * If this is set, transfer failed and partner tried refunding the transfer to us. We don't\n         * handle receiving transfers, but just store it here to mark this transfer as failed with a\n         * refund, until the lock expires normally\n         */\n        refund: Timed(Signed(RefundTransfer)),\n        /**\n         * !! channel was closed !!\n         * In the case a channel is closed (possibly middle transfer), this will be the txHash of the\n         * CloseChannel transaction. No further actions are possible after it's set.\n         */\n        channelClosed: Timed(Hash),\n        /**\n         * -> outgoing secret reveal to target\n         * If this is set, it means the secret was revealed (so transfer succeeded, even if it didn't\n         * complete yet)\n         */\n        secretReveal: Timed(Signed(SecretReveal)),\n        /**\n         * -> outgoing unlock to recipient\n         * If this is set, it means the Unlock was sent (even if partner didn't acknowledge it yet)\n         */\n        unlock: Timed(Signed(Unlock)),\n        /**\n         * -> outgoing lock expired (if so)\n         * If this is set, transfer failed, and we expired the lock (retrieving the locked amount).\n         * Transfer failed may not have completed yet, e.g. waiting for LockExpired's Processed reply\n         */\n        lockExpired: Timed(Signed(LockExpired)),\n        /**\n         * <- incoming processed for Unlock message\n         * If this is set, the protocol completed by the transfer succeeding and partner\n         * acknowledging validity of our off-chain unlock\n         */\n        unlockProcessed: Timed(Signed(Processed)),\n        /**\n         * <- incoming processed for LockExpired message\n         * If this is set, the protocol completed by the transfer failing and partner acknowledging\n         * this transfer can't be claimed anymore\n         */\n        lockExpiredProcessed: Timed(Signed(Processed)),\n    }),\n]));\n/**\n * Mapping of outgoing transfers, indexed by the secrethash\n */\nexport const SentTransfers = t.readonly(t.record(t.string /* secrethash: Hash */, SentTransfer));\nexport var RaidenSentTransferStatus;\n(function (RaidenSentTransferStatus) {\n    RaidenSentTransferStatus[\"pending\"] = \"PENDING\";\n    RaidenSentTransferStatus[\"received\"] = \"RECEIVED\";\n    RaidenSentTransferStatus[\"refunded\"] = \"REFUNDED\";\n    RaidenSentTransferStatus[\"closed\"] = \"CLOSED\";\n    RaidenSentTransferStatus[\"revealed\"] = \"REVEALED\";\n    RaidenSentTransferStatus[\"unlocking\"] = \"UNLOCKING\";\n    RaidenSentTransferStatus[\"expiring\"] = \"EXPIRING\";\n    RaidenSentTransferStatus[\"unlocked\"] = \"UNLOCKED\";\n    RaidenSentTransferStatus[\"expired\"] = \"EXPIRED\";\n})(RaidenSentTransferStatus || (RaidenSentTransferStatus = {}));\n//# sourceMappingURL=state.js.map","import * as t from 'io-ts';\nimport { isLeft } from 'fp-ts/lib/Either';\nimport { ThrowReporter } from 'io-ts/lib/ThrowReporter';\nimport { AddressZero } from 'ethers/constants';\nimport { losslessParse, losslessStringify } from './utils/data';\nimport { Address, Secret } from './utils/types';\nimport { Channels } from './channels/state';\nimport { RaidenMatrixSetup } from './transport/state';\nimport { SentTransfers } from './transfers/state';\n// types\nexport const RaidenState = t.readonly(t.type({\n    address: Address,\n    chainId: t.number,\n    registry: Address,\n    blockNumber: t.number,\n    channels: Channels,\n    tokens: t.readonly(t.record(t.string /* token: Address */, Address)),\n    transport: t.readonly(t.partial({\n        matrix: t.readonly(t.intersection([\n            t.type({\n                server: t.string,\n            }),\n            t.partial({\n                setup: RaidenMatrixSetup,\n                rooms: t.readonly(t.record(t.string /* partner: Address */, t.array(t.string))),\n            }),\n        ])),\n    })),\n    secrets: t.readonly(t.record(t.string /* secrethash: Hash */, t.readonly(t.intersection([t.type({ secret: Secret }), t.partial({ registerBlock: t.number })])))),\n    sent: SentTransfers,\n}));\n// helpers, utils & constants\n/**\n * Encode RaidenState to a JSON string\n * For Raiden client compliance, this JSON encodes BigNumbers as 'number' (using lossless-json lib)\n * which is valid json though not very common as common JS implementations lose precision when\n * decoding through JSON.parse. This is solved in SDK by both encoding and decoding BigNumbers\n * using lossless-json, without going through the intermediary JS-number form.\n *\n * @param state - RaidenState object\n * @returns JSON encoded string\n */\nexport function encodeRaidenState(state) {\n    return losslessStringify(RaidenState.encode(state), undefined, 2);\n}\n/**\n * Try to decode any data as a RaidenState.\n * If handled a string, will parse it with lossless-json, to preserve BigNumbers encoded as JSON\n * 'number'.\n *\n * @param data - string | any which may be decoded as RaidenState\n * @returns RaidenState parsed and validated\n */\nexport function decodeRaidenState(data) {\n    if (typeof data === 'string')\n        data = losslessParse(data);\n    const result = RaidenState.decode(data);\n    if (isLeft(result))\n        throw ThrowReporter.report(result); // throws if decode failed\n    return result.right;\n}\nexport const initialState = {\n    address: AddressZero,\n    chainId: 0,\n    registry: AddressZero,\n    blockNumber: 0,\n    channels: {},\n    tokens: {},\n    transport: {},\n    secrets: {},\n    sent: {},\n};\n//# sourceMappingURL=state.js.map","import { padZeros } from 'ethers/utils';\nexport const SignatureZero = padZeros([], 65);\nexport var ShutdownReason;\n(function (ShutdownReason) {\n    ShutdownReason[\"STOP\"] = \"raidenStopped\";\n    ShutdownReason[\"ACCOUNT_CHANGED\"] = \"providerAccountChanged\";\n    ShutdownReason[\"NETWORK_CHANGED\"] = \"providerNetworkChanged\";\n})(ShutdownReason || (ShutdownReason = {}));\n//# sourceMappingURL=constants.js.map","import { Zero } from 'ethers/constants';\nimport { ChannelState } from './state';\n/**\n * Calculates and returns partial and total amounts of given channel state\n *\n * @param channel - A Channel state to calculate amounts from\n * @returns An object holding own&partner's deposit, withdraw, transferred, locked, balance and\n *          capacity.\n */\nexport function channelAmounts(channel) {\n    const Zero32 = Zero;\n    if (channel.state !== ChannelState.open)\n        return {\n            ownDeposit: Zero32,\n            ownWithdraw: Zero32,\n            ownTransferred: Zero32,\n            ownLocked: Zero32,\n            ownBalance: Zero32,\n            ownCapacity: Zero32,\n            partnerDeposit: Zero32,\n            partnerWithdraw: Zero32,\n            partnerTransferred: Zero32,\n            partnerLocked: Zero32,\n            partnerBalance: Zero32,\n            partnerCapacity: Zero32,\n        };\n    const ownWithdraw = channel.own.withdraw || Zero32, partnerWithdraw = channel.partner.withdraw || Zero32, ownTransferred = channel.own.balanceProof\n        ? channel.own.balanceProof.transferredAmount\n        : Zero32, partnerTransferred = channel.partner.balanceProof\n        ? channel.partner.balanceProof.transferredAmount\n        : Zero32, ownLocked = channel.own.balanceProof ? channel.own.balanceProof.lockedAmount : Zero32, partnerLocked = channel.partner.balanceProof\n        ? channel.partner.balanceProof.lockedAmount\n        : Zero32, ownBalance = partnerTransferred.sub(ownTransferred), partnerBalance = ownTransferred.sub(partnerTransferred), // == -ownBalance\n    ownCapacity = channel.own.deposit\n        .sub(ownWithdraw)\n        .sub(ownLocked)\n        .add(ownBalance), partnerCapacity = channel.partner.deposit\n        .sub(partnerWithdraw)\n        .sub(partnerLocked)\n        .add(partnerBalance);\n    return {\n        ownDeposit: channel.own.deposit,\n        ownWithdraw,\n        ownTransferred,\n        ownLocked,\n        ownBalance,\n        ownCapacity,\n        partnerDeposit: channel.partner.deposit,\n        partnerWithdraw,\n        partnerTransferred,\n        partnerLocked,\n        partnerBalance,\n        partnerCapacity,\n    };\n}\n//# sourceMappingURL=utils.js.map","/**\n * Like redux's combineReducers, but allows passing only a partial reducer mapping\n * redux's combineReducers output state must be exactly the mapping passed as parameter,\n * which doesn't allow to only provide a partial set of reducers and passthrough the other state's\n * keys. This function allows that, also preserving state/object reference when reducers doesn't\n * change state value.\n *\n * @param reducers - A mapping of a subset of state's key to nested reducers functions\n * @param initialState - global initial state, required when initializing first object with partial\n *                      reducers\n * @returns Full reducer for state S and actions A\n */\nexport function partialCombineReducers(reducers, initialState) {\n    return function (state = initialState, action) {\n        for (const key in reducers) {\n            const reducer = reducers[key];\n            if (!reducer)\n                continue; // shouldn't happen, only here for type safety below\n            const subState = state[key] || initialState[key];\n            const newSubState = reducer(subState, action);\n            if (newSubState !== subState) {\n                state = Object.assign({}, state, { [key]: newSubState });\n            }\n        }\n        return state;\n    };\n}\n//# sourceMappingURL=redux.js.map","import { createStandardAction } from 'typesafe-actions';\n/* A new head in the blockchain is detected by provider */\nexport const newBlock = createStandardAction('newBlock')();\n/**\n * A new token network is detected in the TokenNetworkRegistry instance\n * fromBlock is only set on the first time, to fetch and handle past events\n */\nexport const tokenMonitored = createStandardAction('tokenMonitored')();\n/**\n * Channel actions receive ChannelId as 'meta' action property\n * This way, 'meta' can be used equally for request, success and error actions\n */\n/* Request a channel to be opened with meta={ tokenNetwork, partner } and payload.settleTimeout */\nexport const channelOpen = createStandardAction('channelOpen')();\n/* A channel is detected on-chain. Also works as 'success' for channelOpen action */\nexport const channelOpened = createStandardAction('channelOpened')();\n/* A channelOpen request action (with meta: ChannelId) failed with payload=Error */\nexport const channelOpenFailed = createStandardAction('channelOpenFailed').map((payload, meta) => ({ payload, error: true, meta }));\n/* Channel with meta:ChannelId + payload.id should be monitored */\nexport const channelMonitored = createStandardAction('channelMonitored')();\n/* Request a payload.deposit to be made to channel meta:ChannelId */\nexport const channelDeposit = createStandardAction('channelDeposit')();\n/* A deposit is detected on-chain. Also works as 'success' for channelDeposit action */\nexport const channelDeposited = createStandardAction('channelDeposited')();\n/* A channelDeposit request action (with meta: ChannelId) failed with payload=Error */\nexport const channelDepositFailed = createStandardAction('channelDepositFailed').map((payload, meta) => ({ payload, error: true, meta }));\n/* A withdraw is detected on-chain */\nexport const channelWithdrawn = createStandardAction('channelWithdrawn')();\n/* Request channel meta:ChannelId to be closed */\nexport const channelClose = createStandardAction('channelClose')();\n/* A close channel event is detected on-chain. Also works as 'success' for channelClose action */\nexport const channelClosed = createStandardAction('channelClosed')();\n/* A channelClose request action (with meta: ChannelId) failed with payload=Error */\nexport const channelCloseFailed = createStandardAction('channelCloseFailed').map((payload, meta) => ({ payload, error: true, meta }));\n/* A channel meta:ChannelId becomes settleable, starting from payload.settleableBlock */\nexport const channelSettleable = createStandardAction('channelSettleable')();\n/* Request channel meta:ChannelId to be settled */\nexport const channelSettle = createStandardAction('channelSettle')();\n/* A settle channel event is detected on-chain. Also works as 'success' for channelSettle action */\nexport const channelSettled = createStandardAction('channelSettled')();\n/* A channelSettle request action (with meta: ChannelId) failed with payload=Error */\nexport const channelSettleFailed = createStandardAction('channelSettleFailed').map((payload, meta) => ({ payload, error: true, meta }));\n//# sourceMappingURL=actions.js.map","import { isActionOf } from 'typesafe-actions';\nimport { get, set, unset } from 'lodash/fp';\nimport { Zero } from 'ethers/constants';\nimport { partialCombineReducers } from '../utils/redux';\nimport { initialState } from '../state';\nimport { channelClose, channelClosed, channelDeposited, channelOpen, channelOpened, channelOpenFailed, channelSettle, channelSettleable, channelSettled, newBlock, tokenMonitored, channelWithdrawn, } from './actions';\nimport { ChannelState } from './state';\n// state.blockNumber specific reducer, handles only newBlock action\nfunction blockNumber(state = initialState.blockNumber, action) {\n    if (isActionOf(newBlock, action))\n        return action.payload.blockNumber;\n    else\n        return state;\n}\n// state.tokens specific reducer, handles only tokenMonitored action\nfunction tokens(state = initialState.tokens, action) {\n    if (isActionOf(tokenMonitored, action))\n        return set([action.payload.token], action.payload.tokenNetwork, state);\n    else\n        return state;\n}\n// handles all channel actions and requests\nfunction channels(state = initialState.channels, action) {\n    if (isActionOf(channelOpen, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        if (get(path, state))\n            return state; // there's already a channel with partner\n        const channel = {\n            state: ChannelState.opening,\n            own: { deposit: Zero },\n            partner: { deposit: Zero },\n        };\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelOpened, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner], channel = {\n            state: ChannelState.open,\n            own: { deposit: Zero },\n            partner: { deposit: Zero },\n            id: action.payload.id,\n            settleTimeout: action.payload.settleTimeout,\n            openBlock: action.payload.openBlock,\n            isFirstParticipant: action.payload.isFirstParticipant,\n        };\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelOpenFailed, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        if (get([...path, 'state'], state) !== ChannelState.opening)\n            return state;\n        return unset(path, state);\n    }\n    else if (isActionOf(channelDeposited, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel || channel.state !== ChannelState.open || channel.id !== action.payload.id)\n            return state;\n        if (action.payload.participant === action.meta.partner)\n            channel = Object.assign({}, channel, { partner: Object.assign({}, channel.partner, { deposit: action.payload.totalDeposit }) });\n        else\n            channel = Object.assign({}, channel, { own: Object.assign({}, channel.own, { deposit: action.payload.totalDeposit }) });\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelWithdrawn, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel || channel.state !== ChannelState.open || channel.id !== action.payload.id)\n            return state;\n        if (action.payload.participant === action.meta.partner)\n            channel = Object.assign({}, channel, { partner: Object.assign({}, channel.partner, { withdraw: action.payload.totalWithdraw }) });\n        else\n            channel = Object.assign({}, channel, { own: Object.assign({}, channel.own, { withdraw: action.payload.totalWithdraw }) });\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelClose, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel || channel.state !== ChannelState.open)\n            return state;\n        channel = Object.assign({}, channel, { state: ChannelState.closing });\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelClosed, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel ||\n            !(channel.state === ChannelState.open || channel.state === ChannelState.closing) ||\n            channel.id !== action.payload.id)\n            return state;\n        channel = Object.assign({}, channel, { state: ChannelState.closed, closeBlock: action.payload.closeBlock });\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelSettleable, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel || channel.state !== ChannelState.closed)\n            return state;\n        channel = Object.assign({}, channel, { state: ChannelState.settleable });\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelSettle, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel || channel.state !== ChannelState.settleable)\n            return state;\n        channel = Object.assign({}, channel, { state: ChannelState.settling });\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelSettled, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        const channel = get(path, state);\n        if (!channel ||\n            ![ChannelState.closed, ChannelState.settleable, ChannelState.settling].includes(channel.state))\n            return state;\n        return unset(path, state);\n    }\n    else\n        return state;\n}\n/**\n * Nested/combined reducer for channels\n * blockNumber, tokens & channels reducers get its own slice of the state, corresponding to the\n * name of the reducer. channels root reducer instead must be handled the complete state instead,\n * so it compose the output with each key/nested/combined state.\n */\nexport const channelsReducer = partialCombineReducers({ blockNumber, tokens, channels }, initialState);\n//# sourceMappingURL=reducer.js.map","import { createStandardAction } from 'typesafe-actions';\n/* MatrixClient instance is ready and logged in to payload.server with credentials payload.setup */\nexport const matrixSetup = createStandardAction('matrixSetup')();\n/* Request matrix to start monitoring presence updates for meta.address */\nexport const matrixRequestMonitorPresence = createStandardAction('matrixRequestMonitorPresence')();\n/**\n * Monitored user meta.address presence updated.\n * First event for this address also works as 'success' for matrixRequestMonitorPresence\n */\nexport const matrixPresenceUpdate = createStandardAction('matrixPresenceUpdate').map(({ userId, available, ts }, meta) => ({ payload: { userId, available, ts: ts || Date.now() }, meta }));\n/* A matrixRequestMonitorPresence request action (with meta.address) failed with payload=Error */\nexport const matrixRequestMonitorPresenceFailed = createStandardAction('matrixRequestMonitorPresenceFailed').map((payload, meta) => ({ payload, error: true, meta }));\n/* payload.roomId must go front on meta.address's room queue */\nexport const matrixRoom = createStandardAction('matrixRoom')();\n/* payload.roomId must be excluded from meta.address room queue, if present */\nexport const matrixRoomLeave = createStandardAction('matrixRoomLeave')();\n//# sourceMappingURL=actions.js.map","import { isActionOf } from 'typesafe-actions';\nimport { get, getOr, isEmpty, set, unset } from 'lodash/fp';\nimport { partialCombineReducers } from '../utils/redux';\nimport { initialState } from '../state';\nimport { matrixSetup, matrixRoom, matrixRoomLeave } from './actions';\n/**\n * state.transport reducer\n * Handles all transport actions and requests\n *\n * @param state - Current RaidenState['transport'] slice\n * @param action - RaidenAction to handle\n * @returns New RaidenState['transport'] slice\n */\nfunction transport(state = initialState.transport, action) {\n    if (isActionOf(matrixSetup, action)) {\n        return Object.assign({}, state, { matrix: Object.assign({}, state.matrix, action.payload) });\n    }\n    else if (isActionOf(matrixRoom, action)) {\n        const path = ['matrix', 'rooms', action.meta.address];\n        return set(path, [\n            action.payload.roomId,\n            ...getOr([], path, state).filter(room => room !== action.payload.roomId),\n        ], state);\n    }\n    else if (isActionOf(matrixRoomLeave, action)) {\n        const path = ['matrix', 'rooms', action.meta.address];\n        state = set(path, getOr([], path, state).filter(r => r !== action.payload.roomId), state);\n        if (isEmpty(get(path, state)))\n            state = unset(path, state);\n        return state;\n    }\n    else\n        return state;\n}\n/**\n * Nested/combined reducer for transport\n * Currently only handles 'transport' substate\n */\nexport const transportReducer = partialCombineReducers({ transport }, initialState);\n//# sourceMappingURL=reducer.js.map","import { concat, hexlify } from 'ethers/utils/bytes';\nimport { keccak256, randomBytes, bigNumberify, sha256 } from 'ethers/utils';\nimport { encode } from '../utils/data';\nimport { RaidenSentTransferStatus } from './state';\n/**\n * Get the locksroot of a given array of pending locks\n * On Alderaan, it's the keccak256 hash of the concatenation of the ordered locks data\n *\n * @param locks - Lock array to calculate the locksroot from\n * @returns hash of the locks array\n */\nexport function getLocksroot(locks) {\n    const encoded = [];\n    for (const lock of locks)\n        encoded.push(encode(lock.expiration, 32), encode(lock.amount, 32), lock.secrethash);\n    return keccak256(concat(encoded));\n}\n/**\n * Return the secrethash of a given secret\n * On Alderaan, the sha256 hash is used for the secret.\n *\n * @param secret - Secret to get the hash from\n * @returns hash of the secret\n */\nexport function getSecrethash(secret) {\n    return sha256(secret);\n}\n/**\n * Generates a random secret of given length, as an HexString<32>\n *\n * @param length - of the secret to generate\n * @returns HexString<32>\n */\nexport function makeSecret(length = 32) {\n    return hexlify(randomBytes(length));\n}\n/**\n * Generates a random payment identifier, as an UInt<8> (64 bits)\n *\n * @returns UInt<8>\n */\nexport function makePaymentId() {\n    return bigNumberify(randomBytes(8));\n}\n/**\n * Generates a message identifier, as an UInt<8> (64 bits)\n *\n * @returns UInt<8>\n */\nexport function makeMessageId() {\n    return bigNumberify(Date.now());\n}\n/**\n * Convert a state.sent: SentTransfer to a public RaidenSentTransfer object\n *\n * @param sent - RaidenState.sent value\n * @returns Public raiden sent transfer info object\n */\nexport function raidenSentTransfer(sent) {\n    const [status, changedAt] = sent.lockExpiredProcessed\n        ? [RaidenSentTransferStatus.expired, sent.lockExpiredProcessed[0]]\n        : sent.unlockProcessed\n            ? [RaidenSentTransferStatus.unlocked, sent.unlockProcessed[0]]\n            : sent.lockExpired\n                ? [RaidenSentTransferStatus.expiring, sent.lockExpired[0]]\n                : sent.unlock\n                    ? [RaidenSentTransferStatus.unlocking, sent.unlock[0]]\n                    : sent.secretReveal\n                        ? [RaidenSentTransferStatus.revealed, sent.secretReveal[0]]\n                        : sent.channelClosed // channelClosed before revealing\n                            ? [RaidenSentTransferStatus.closed, sent.channelClosed[0]]\n                            : sent.refund\n                                ? [RaidenSentTransferStatus.refunded, sent.refund[0]]\n                                : sent.transferProcessed\n                                    ? [RaidenSentTransferStatus.received, sent.transferProcessed[0]]\n                                    : [RaidenSentTransferStatus.pending, sent.transfer[0]], success = sent.secretReveal || sent.unlock\n        ? true\n        : sent.refund || sent.lockExpired || sent.channelClosed\n            ? false\n            : undefined, completed = !!(sent.unlockProcessed || sent.lockExpiredProcessed || sent.channelClosed);\n    return {\n        secrethash: sent.transfer[1].lock.secrethash,\n        status,\n        initiator: sent.transfer[1].initiator,\n        recipient: sent.transfer[1].recipient,\n        target: sent.transfer[1].target,\n        metadata: sent.transfer[1].metadata,\n        paymentId: sent.transfer[1].payment_identifier,\n        chainId: sent.transfer[1].chain_id.toNumber(),\n        token: sent.transfer[1].token,\n        tokenNetwork: sent.transfer[1].token_network_address,\n        channelId: sent.transfer[1].channel_identifier,\n        amount: sent.transfer[1].lock.amount,\n        expirationBlock: sent.transfer[1].lock.expiration.toNumber(),\n        fee: sent.transfer[1].fee,\n        startedAt: new Date(sent.transfer[0]),\n        changedAt: new Date(changedAt),\n        success,\n        completed,\n    };\n}\n//# sourceMappingURL=utils.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// import * as t from 'io-ts';\nimport { ThrowReporter } from 'io-ts/lib/ThrowReporter';\nimport { isLeft } from 'fp-ts/lib/Either';\nimport { keccak256, RLP, verifyMessage } from 'ethers/utils';\nimport { arrayify, concat, hexlify } from 'ethers/utils/bytes';\nimport { HashZero } from 'ethers/constants';\nimport { Signature } from '../utils/types';\nimport { encode, losslessParse, losslessStringify } from '../utils/data';\nimport { Message, MessageType, Signed } from './types';\nconst CMDIDs = {\n    [MessageType.DELIVERED]: 12,\n    [MessageType.PROCESSED]: 0,\n    [MessageType.SECRET_REQUEST]: 3,\n    [MessageType.SECRET_REVEAL]: 11,\n    [MessageType.LOCKED_TRANSFER]: 7,\n    [MessageType.REFUND_TRANSFER]: 8,\n    [MessageType.UNLOCK]: 4,\n    [MessageType.LOCK_EXPIRED]: 13,\n    [MessageType.TO_DEVICE]: 14,\n    [MessageType.WITHDRAW_REQUEST]: 15,\n    [MessageType.WITHDRAW_CONFIRMATION]: 16,\n    [MessageType.WITHDRAW_EXPIRED]: 17,\n    [MessageType.PFS_CAPACITY_UPDATE]: -1,\n};\n// raiden_contracts.constants.MessageTypeId\nvar MessageTypeId;\n(function (MessageTypeId) {\n    MessageTypeId[MessageTypeId[\"BALANCE_PROOF\"] = 1] = \"BALANCE_PROOF\";\n    MessageTypeId[MessageTypeId[\"WITHDRAW\"] = 3] = \"WITHDRAW\";\n})(MessageTypeId || (MessageTypeId = {}));\n/**\n * Create the hash of Metadata structure.\n *\n * @param metadata - The LockedTransfer metadata\n * @returns Hash of the metadata.\n */\nexport function createMetadataHash(metadata) {\n    const routeHashes = metadata.routes.map(value => keccak256(RLP.encode(value.route)));\n    return keccak256(RLP.encode(routeHashes));\n}\n/**\n * Returns a balance_hash from transferred&locked amounts & locksroot\n *\n * @param transferredAmount - EnvelopeMessage.transferred_amount\n * @param lockedAmount - EnvelopeMessage.locked_amount\n * @param locksroot - Hash of all current locks\n * @returns Hash of the balance\n */\nexport function createBalanceHash(transferredAmount, lockedAmount, locksroot) {\n    return (transferredAmount.isZero() && lockedAmount.isZero() && locksroot === HashZero\n        ? HashZero\n        : keccak256(concat([encode(transferredAmount, 32), encode(lockedAmount, 32), encode(locksroot, 32)])));\n}\n/**\n * Create the messageHash for a given EnvelopeMessage\n *\n * @param message - EnvelopeMessage to pack\n * @returns Hash of the message pack\n */\nexport function createMessageHash(message) {\n    switch (message.type) {\n        case MessageType.LOCKED_TRANSFER:\n        case MessageType.REFUND_TRANSFER:\n            // hash of packed representation of the whole message\n            let packed = concat([\n                encode(CMDIDs[message.type], 1),\n                encode(message.message_identifier, 8),\n                encode(message.payment_identifier, 8),\n                encode(message.lock.expiration, 32),\n                encode(message.token, 20),\n                encode(message.recipient, 20),\n                encode(message.target, 20),\n                encode(message.initiator, 20),\n                encode(message.lock.secrethash, 32),\n                encode(message.lock.amount, 32),\n                encode(message.fee, 32),\n            ]);\n            if (message.type === MessageType.LOCKED_TRANSFER)\n                packed = concat([packed, createMetadataHash(message.metadata)]);\n            return keccak256(packed);\n        case MessageType.UNLOCK:\n            return keccak256(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(message.message_identifier, 8),\n                encode(message.payment_identifier, 8),\n                encode(message.secret, 32),\n            ]));\n        case MessageType.LOCK_EXPIRED:\n            return keccak256(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(message.message_identifier, 8),\n                encode(message.recipient, 20),\n                encode(message.secrethash, 32),\n            ]));\n    }\n}\n/**\n * Pack a message in a hex-string format, **without** signature\n * This packed hex-byte-array can then be used for signing.\n * On Raiden python client, this is the output of `_data_to_sign` method of the messages, as the\n * actual packed encoding was once used for binary transport protocols, but nowadays is used only\n * for generating data to be signed, which is the purpose of our implementation.\n *\n * @param message - Message to be packed\n * @returns HexBytes hex-encoded string data representing message in binary format\n */\nexport function packMessage(message) {\n    switch (message.type) {\n        case MessageType.DELIVERED:\n            return hexlify(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.delivered_message_identifier, 8),\n            ]));\n        case MessageType.PROCESSED:\n            return hexlify(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.message_identifier, 8),\n            ]));\n        case MessageType.LOCKED_TRANSFER:\n        case MessageType.REFUND_TRANSFER:\n        case MessageType.UNLOCK:\n        case MessageType.LOCK_EXPIRED: {\n            const messageHash = createMessageHash(message), balanceHash = createBalanceHash(message.transferred_amount, message.locked_amount, message.locksroot);\n            return hexlify(concat([\n                encode(message.token_network_address, 20),\n                encode(message.chain_id, 32),\n                encode(MessageTypeId.BALANCE_PROOF, 32),\n                encode(message.channel_identifier, 32),\n                encode(balanceHash, 32),\n                encode(message.nonce, 32),\n                encode(messageHash, 32),\n            ]));\n        }\n        case MessageType.SECRET_REQUEST:\n            return hexlify(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.message_identifier, 8),\n                encode(message.payment_identifier, 8),\n                encode(message.secrethash, 32),\n                encode(message.amount, 32),\n                encode(message.expiration, 32),\n            ]));\n        case MessageType.SECRET_REVEAL:\n            return hexlify(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.message_identifier, 8),\n                encode(message.secret, 32),\n            ]));\n        case MessageType.TO_DEVICE:\n            return hexlify(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.message_identifier, 8),\n            ]));\n        case MessageType.WITHDRAW_REQUEST:\n        case MessageType.WITHDRAW_CONFIRMATION:\n            return hexlify(concat([\n                encode(message.token_network_address, 20),\n                encode(message.chain_id, 32),\n                encode(MessageTypeId.WITHDRAW, 32),\n                encode(message.channel_identifier, 32),\n                encode(message.participant, 20),\n                encode(message.total_withdraw, 32),\n                encode(message.expiration, 32),\n            ]));\n        case MessageType.WITHDRAW_EXPIRED:\n            return hexlify(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.nonce, 32),\n                encode(message.message_identifier, 8),\n                encode(message.token_network_address, 20),\n                encode(message.chain_id, 32),\n                encode(MessageTypeId.WITHDRAW, 32),\n                encode(message.channel_identifier, 32),\n                encode(message.participant, 20),\n                encode(message.total_withdraw, 32),\n                encode(message.expiration, 32),\n            ]));\n        case MessageType.PFS_CAPACITY_UPDATE:\n            return hexlify(concat([\n                encode(message.canonical_identifier.chain_identifier, 32),\n                encode(message.canonical_identifier.token_network_address, 20),\n                encode(message.canonical_identifier.channel_identifier, 32),\n                encode(message.updating_participant, 20),\n                encode(message.other_participant, 20),\n                encode(message.updating_nonce, 8),\n                encode(message.other_nonce, 8),\n                encode(message.updating_capacity, 32),\n                encode(message.other_capacity, 32),\n                encode(message.reveal_timeout, 32),\n            ]));\n    }\n}\n/**\n * Typeguard to check if a message contains a valid signature\n *\n * @param message - May or may not be a signed message\n * @returns Boolean if message is signed\n */\nexport function isSigned(message) {\n    return Signature.is(message.signature);\n}\n/**\n * Requires a signed message and returns its signer address\n *\n * @param message - Signed message to retrieve signer address\n * @returns Address which signed message\n */\nexport function getMessageSigner(message) {\n    return verifyMessage(arrayify(packMessage(message)), message.signature);\n}\n/**\n * Get the SignedBalanceProof associated with an EnvelopeMessage\n *\n * @param message - Signed EnvelopeMessage\n * @returns SignedBalanceProof object for message\n */\nexport function getBalanceProofFromEnvelopeMessage(message) {\n    return {\n        chainId: message.chain_id,\n        tokenNetworkAddress: message.token_network_address,\n        channelId: message.channel_identifier,\n        nonce: message.nonce,\n        transferredAmount: message.transferred_amount,\n        lockedAmount: message.locked_amount,\n        locksroot: message.locksroot,\n        messageHash: createMessageHash(message),\n        signature: message.signature,\n        sender: getMessageSigner(message),\n    };\n}\n/**\n * Encode a Message as a JSON string\n * Uses lossless-json to encode BigNumbers as JSON 'number' type, as Raiden\n *\n * @param message - Message object to be serialized\n * @returns JSON string\n */\nexport function encodeJsonMessage(message) {\n    return losslessStringify(Signed(Message).encode(message));\n}\n/**\n * Try to decode text as a Message, using lossless-json to decode BigNumbers\n * Throws if can't decode, or message is invalid regarding any of the encoded constraints\n *\n * @param text - JSON string to try to decode\n * @returns Message object\n */\nexport function decodeJsonMessage(text) {\n    const parsed = losslessParse(text), decoded = Signed(Message).decode(parsed);\n    if (isLeft(decoded))\n        throw ThrowReporter.report(decoded); // throws if decode failed\n    return decoded.right;\n}\n/**\n * Pack message and request signer to sign it, and returns signed message\n *\n * @param signer - Signer instance\n * @param message - Unsigned message to pack and sign\n * @returns Promise to signed message\n */\nexport function signMessage(signer, message) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (isSigned(message))\n            return message;\n        const signature = (yield signer.signMessage(arrayify(packMessage(message))));\n        return Object.assign({}, message, { signature });\n    });\n}\n//# sourceMappingURL=utils.js.map","import { createStandardAction } from 'typesafe-actions';\n/** A request to initiate a transfer */\nexport const transfer = createStandardAction('transfer')();\n/** A LockedTransfer was signed and should be sent to partner */\nexport const transferSigned = createStandardAction('transferSigned')();\n/** Partner acknowledge they received and processed our LockedTransfer */\nexport const transferProcessed = createStandardAction('transferProcessed')();\n/** Register a secret */\nexport const transferSecret = createStandardAction('transferSecret')();\n/** A valid SecretRequest received from target */\nexport const transferSecretRequest = createStandardAction('transferSecretRequest')();\n/** A SecretReveal sent to target */\nexport const transferSecretReveal = createStandardAction('transferSecretReveal')();\n/** Unlock request after partner also revealed they know the secret */\nexport const transferUnlock = createStandardAction('transferUnlock')();\n/** Signed Unlock to be sent to partner */\nexport const transferUnlocked = createStandardAction('transferUnlocked')();\n/** Partner acknowledge they received and processed our Unlock */\nexport const transferUnlockProcessed = createStandardAction('transferUnlockProcessed')();\n/** A request to expire a given transfer */\nexport const transferExpire = createStandardAction('transferExpire')();\n/** A transfer LockExpired message/BalanceProof successfuly generated */\nexport const transferExpired = createStandardAction('transferExpired')();\n/**\n * A transfer expiration request failed for any reason\n * e.g. user rejected sign promopt. It should eventually get prompted again, on a future newBlock\n * action which sees this transfer should be expired but sent.lockExpired didn't get set yet.\n */\nexport const transferExpireFailed = createStandardAction('transferExpireFailed').map((payload, meta) => ({ payload, error: true, meta }));\n/** Partner acknowledge they received and processed our LockExpired */\nexport const transferExpireProcessed = createStandardAction('transferExpireProcessed')();\n/** A transfer was refunded */\nexport const transferRefunded = createStandardAction('transferRefunded')();\n/**\n * A transfer completed successfuly\n *\n * A transfer is considered as having succeeded from the time the secret is revealed to the target,\n * as from there, target and mediators can claim the payment down to us. But the full off-chain\n * happy case completes only after partner/neighbor acknowledges receiving the Unlock.\n * So, we usually only emits this action in the end of the happy case, and it'll then contain the\n * unlock's balanceProof, which indicates the full off-chain path succeeded.\n * It'll be emitted without a balanceProof if something forces the transfer to complete\n * (e.g.  channel closed), the secret was revealed (so target was paid) but for any reason the\n * unlock didn't happen yet.\n */\nexport const transferred = createStandardAction('transferred')();\n/**\n * A transfer failed and can't succeed anymore\n *\n * It is emitted as soon as we know the transfer failed definitely, like when a RefundTransfer is\n * received or the lock expires before revealing the secret. It notifies the user (e.g. pending\n * Promises) that the transfer failed and won't be paid (eventually, locked amount will be\n * recovered by expiring the lock).\n */\nexport const transferFailed = createStandardAction('transferFailed').map((payload, meta) => ({ payload, error: true, meta }));\n/** A pending transfer isn't needed anymore and should be cleared from state */\nexport const transferClear = createStandardAction('transferClear')();\n/** A WithdrawRequest was received from partner */\nexport const withdrawReceiveRequest = createStandardAction('withdrawReceiveRequest')();\n/** A WithdrawConfirmation was signed and must be sent to partner */\nexport const withdrawSendConfirmation = createStandardAction('withdrawSendConfirmation')();\n//# sourceMappingURL=actions.js.map","import { isActionOf } from 'typesafe-actions';\nimport { get, set, unset, mapValues } from 'lodash/fp';\nimport { Zero, HashZero } from 'ethers/constants';\nimport { hexlify } from 'ethers/utils';\nimport { initialState } from '../state';\nimport { ChannelState } from '../channels/state';\nimport { channelClosed } from '../channels/actions';\nimport { getLocksroot } from './utils';\nimport { SignatureZero } from '../constants';\nimport { timed } from '../utils/types';\nimport { getBalanceProofFromEnvelopeMessage } from '../messages/utils';\nimport { transferSigned, transferSecret, transferProcessed, transferUnlocked, transferExpired, transferSecretReveal, transferRefunded, transferUnlockProcessed, transferExpireProcessed, transferClear, withdrawSendConfirmation, } from './actions';\n/**\n * Handles all transfers actions and requests\n *\n * @param state - Current RaidenState\n * @param action - RaidenAction to handle\n * @returns New RaidenState (or current, if action didn't change anything)\n */\nexport function transfersReducer(state = initialState, action) {\n    if (isActionOf(transferSecret, action)) {\n        if (action.meta.secrethash in state.secrets &&\n            state.secrets[action.meta.secrethash].registerBlock)\n            return state; // avoid storing without registerBlock if we already got with\n        return Object.assign({}, state, { secrets: Object.assign({}, state.secrets, { [action.meta.secrethash]: action.payload }) });\n    }\n    else if (isActionOf(transferSigned, action)) {\n        const transfer = action.payload.message, lock = transfer.lock, secrethash = lock.secrethash;\n        // transferSigned must be the first action, to init SentTransfer state\n        if (secrethash in state.sent)\n            return state;\n        const channelPath = ['channels', transfer.token_network_address, transfer.recipient];\n        let channel = get(channelPath, state);\n        if (!channel)\n            return state;\n        const locks = [...(channel.own.locks || []), lock], // append lock\n        locksroot = getLocksroot(locks);\n        if (transfer.locksroot !== locksroot ||\n            !transfer.nonce.eq((channel.own.balanceProof ? channel.own.balanceProof.nonce : Zero).add(1)) || // nonce must be next\n            !transfer.transferred_amount.eq(channel.own.balanceProof ? channel.own.balanceProof.transferredAmount : Zero) ||\n            !transfer.locked_amount.eq((channel.own.balanceProof ? channel.own.balanceProof.lockedAmount : Zero).add(lock.amount)))\n            return state;\n        channel = Object.assign({}, channel, { own: Object.assign({}, channel.own, { locks, \n                // set current/latest channel.own.balanceProof to LockedTransfer's\n                balanceProof: getBalanceProofFromEnvelopeMessage(transfer) }) });\n        const sentTransfer = { transfer: timed(transfer) };\n        state = set(channelPath, channel, state);\n        state = set(['sent', secrethash], sentTransfer, state);\n        return state;\n    }\n    else if (isActionOf(transferProcessed, action)) {\n        if (!(action.meta.secrethash in state.sent))\n            return state;\n        return Object.assign({}, state, { sent: Object.assign({}, state.sent, { [action.meta.secrethash]: Object.assign({}, state.sent[action.meta.secrethash], { transferProcessed: timed(action.payload.message) }) }) });\n    }\n    else if (isActionOf(transferSecretReveal, action)) {\n        if (!(action.meta.secrethash in state.sent) || state.sent[action.meta.secrethash].secretReveal)\n            return state;\n        return Object.assign({}, state, { sent: Object.assign({}, state.sent, { [action.meta.secrethash]: Object.assign({}, state.sent[action.meta.secrethash], { secretReveal: timed(action.payload.message) }) }) });\n    }\n    else if (isActionOf(transferUnlocked, action)) {\n        const unlock = action.payload.message, secrethash = action.meta.secrethash;\n        if (!(secrethash in state.sent) || state.sent[secrethash].unlock)\n            return state;\n        const transfer = state.sent[secrethash].transfer[1], lock = transfer.lock;\n        const channelPath = ['channels', transfer.token_network_address, transfer.recipient];\n        let channel = get(channelPath, state);\n        if (!channel || !channel.own.locks || !channel.own.balanceProof)\n            return state;\n        const locks = channel.own.locks.filter(l => l.secrethash !== secrethash), locksroot = getLocksroot(locks);\n        if (unlock.locksroot !== locksroot ||\n            !channel.own.balanceProof.nonce.add(1).eq(unlock.nonce) || // nonce must be next\n            !unlock.transferred_amount.eq(channel.own.balanceProof.transferredAmount.add(lock.amount)) ||\n            !unlock.locked_amount.eq(channel.own.balanceProof.lockedAmount.sub(lock.amount)))\n            return state;\n        channel = Object.assign({}, channel, { own: Object.assign({}, channel.own, { locks, \n                // set current/latest channel.own.balanceProof to Unlock's\n                balanceProof: getBalanceProofFromEnvelopeMessage(unlock) }) });\n        const sentTransfer = Object.assign({}, state.sent[secrethash], { unlock: timed(unlock) });\n        state = set(channelPath, channel, state);\n        state = set(['sent', secrethash], sentTransfer, state);\n        return state;\n    }\n    else if (isActionOf(transferExpired, action)) {\n        const lockExpired = action.payload.message, secrethash = action.meta.secrethash;\n        if (!(secrethash in state.sent) ||\n            state.sent[secrethash].unlock || // don't accept expire if already unlocked\n            state.sent[secrethash].lockExpired // already expired\n        )\n            return state;\n        const transfer = state.sent[secrethash].transfer[1], lock = transfer.lock;\n        const channelPath = ['channels', transfer.token_network_address, transfer.recipient];\n        let channel = get(channelPath, state);\n        if (!channel || !channel.own.locks || !channel.own.balanceProof)\n            return state;\n        const locks = channel.own.locks.filter(l => l.secrethash !== secrethash), locksroot = getLocksroot(locks);\n        if (lockExpired.locksroot !== locksroot ||\n            !channel.own.balanceProof.nonce.add(1).eq(lockExpired.nonce) || // nonce must be next\n            !lockExpired.transferred_amount.eq(channel.own.balanceProof.transferredAmount) ||\n            !lockExpired.locked_amount.eq(channel.own.balanceProof.lockedAmount.sub(lock.amount)))\n            return state;\n        channel = Object.assign({}, channel, { own: Object.assign({}, channel.own, { locks, \n                // set current/latest channel.own.balanceProof to LockExpired's\n                balanceProof: getBalanceProofFromEnvelopeMessage(lockExpired) }) });\n        const sentTransfer = Object.assign({}, state.sent[secrethash], { lockExpired: timed(lockExpired) });\n        state = set(channelPath, channel, state);\n        state = set(['sent', secrethash], sentTransfer, state);\n        return state;\n    }\n    else if (isActionOf(transferUnlockProcessed, action)) {\n        if (!(action.meta.secrethash in state.sent))\n            return state;\n        return Object.assign({}, state, { sent: Object.assign({}, state.sent, { [action.meta.secrethash]: Object.assign({}, state.sent[action.meta.secrethash], { unlockProcessed: timed(action.payload.message) }) }) });\n    }\n    else if (isActionOf(transferExpireProcessed, action)) {\n        if (!(action.meta.secrethash in state.sent))\n            return state;\n        return Object.assign({}, state, { sent: Object.assign({}, state.sent, { [action.meta.secrethash]: Object.assign({}, state.sent[action.meta.secrethash], { lockExpiredProcessed: timed(action.payload.message) }) }) });\n    }\n    else if (isActionOf(transferRefunded, action)) {\n        if (!(action.meta.secrethash in state.sent))\n            return state;\n        return Object.assign({}, state, { sent: Object.assign({}, state.sent, { [action.meta.secrethash]: Object.assign({}, state.sent[action.meta.secrethash], { refund: timed(action.payload.message) }) }) });\n    }\n    else if (isActionOf(channelClosed, action)) {\n        return Object.assign({}, state, { sent: mapValues((v) => \n            // if transfer was on this channel, persist CloseChannel txHash, else pass\n            v.transfer[1].channel_identifier.eq(action.payload.id) &&\n                v.transfer[1].recipient === action.meta.partner &&\n                v.transfer[1].token_network_address === action.meta.tokenNetwork\n                ? Object.assign({}, v, { channelClosed: timed(action.payload.txHash) }) : v)(state.sent) });\n    }\n    else if (isActionOf(transferClear, action)) {\n        if (!(action.meta.secrethash in state.sent))\n            return state;\n        state = unset(['sent', action.meta.secrethash], state);\n        state = unset(['secrets', action.meta.secrethash], state);\n        return state;\n    }\n    else if (isActionOf(withdrawSendConfirmation, action)) {\n        const message = action.payload.message, channelPath = ['channels', action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(channelPath, state);\n        if (!channel || channel.state !== ChannelState.open)\n            return state;\n        // current own balanceProof, or zero balance proof, with some known fields filled\n        const balanceProof = channel.own.balanceProof || {\n            chainId: message.chain_id,\n            tokenNetworkAddress: action.meta.tokenNetwork,\n            channelId: message.channel_identifier,\n            // balance proof data\n            nonce: Zero,\n            transferredAmount: Zero,\n            lockedAmount: Zero,\n            locksroot: HashZero,\n            messageHash: HashZero,\n            signature: hexlify(SignatureZero),\n            sender: state.address,\n        };\n        // if it's the next nonce, update balance proof\n        if (message.nonce.eq(balanceProof.nonce.add(1)) && message.expiration.gt(state.blockNumber)) {\n            channel = Object.assign({}, channel, { own: Object.assign({}, channel.own, { balanceProof: Object.assign({}, balanceProof, { nonce: message.nonce }) }) });\n            state = set(channelPath, channel, state);\n        }\n        return state;\n    }\n    else\n        return state;\n}\n//# sourceMappingURL=reducer.js.map","import { channelsReducer } from './channels/reducer';\nimport { transportReducer } from './transport/reducer';\nimport { transfersReducer } from './transfers/reducer';\nimport { initialState } from './state';\nconst raidenReducers = {\n    channelsReducer,\n    transportReducer,\n    transfersReducer,\n};\n/**\n * Raiden root reducer\n * Apply action over each submodule root reducer in a flattened manner (iteratively).\n * Notice the submodules reducers aren't handled only a partial/deep property of the state\n * (as combineReducers), but instead receive the whole state, so they can act on any part of the\n * state. This approach is similar to `reduce-reducers` util.\n * Each submodule root reducer may then choose to split its concerns into nested or flattened\n * reducers (like this one).\n *\n * @param state - Current RaidenState to reduce\n * @param action - RaidenAction to apply over state\n * @returns New RaidenState\n */\nexport const raidenReducer = (state = initialState, action) => Object.values(raidenReducers).reduce((s, reducer) => reducer(s, action), state);\n//# sourceMappingURL=reducer.js.map","import { createStandardAction } from 'typesafe-actions';\n/** One-shot send payload.message to meta.address user in transport */\nexport const messageSend = createStandardAction('messageSend')();\n/**\n * Success action when message is actually sent\n * messageSend doesn't fail (except unexpectedly, like network errors), instead just hang there\n * until a suitable set of conditions is met, i.e.: there's a room for recipient's address, an\n * online validated user for this address, and it had joined that room, then the message is sent\n * and this success action is emitted. 'payload.message' and 'meta.address' should be kept strictly\n * equal to messageSend (even by reference, in case of Message), to ease filtering.\n * Useful to control retry without queueing multiple identical messages while the first is still\n * pending\n */\nexport const messageSent = createStandardAction('messageSent')();\n/** One-shot send payload.message to a global room in transport */\nexport const messageGlobalSend = createStandardAction('messageGlobalSend')();\n/**\n * payload.message was received on payload.ts (timestamp) from meta.address\n * payload.userId and payload.roomId are optional and specific to matrix transport, as sender info\n */\nexport const messageReceived = createStandardAction('messageReceived').map(({ text, message, ts, userId, roomId, }, meta) => ({ payload: { text, message, ts: ts || Date.now(), userId, roomId }, meta }));\n//# sourceMappingURL=actions.js.map","import { createStandardAction } from 'typesafe-actions';\nexport const pathFind = createStandardAction('pathFind')();\nexport const pathFound = createStandardAction('pathFound')();\nexport const pathFindFailed = createStandardAction('pathFindFailed').map((payload, meta) => ({ payload, error: true, meta }));\n//# sourceMappingURL=actions.js.map","/**\n * Aggregate types and exported properties from actions from all modules\n */\nimport { pick } from 'lodash';\nimport { createStandardAction, getType } from 'typesafe-actions';\nimport * as ChannelsActions from './channels/actions';\nimport * as TransportActions from './transport/actions';\nimport * as MessagesActions from './messages/actions';\nimport * as TransfersActions from './transfers/actions';\nimport * as PathFindActions from './path/actions';\nexport const raidenShutdown = createStandardAction('raidenShutdown')();\nexport const RaidenActions = Object.assign({ raidenShutdown }, ChannelsActions, TransportActions, MessagesActions, TransfersActions, PathFindActions);\n/* Mapping { [type: string]: Action } of a subset of RaidenActions exposed as events */\nexport const RaidenEvents = pick(RaidenActions, [\n    RaidenActions.raidenShutdown,\n    RaidenActions.newBlock,\n    RaidenActions.matrixPresenceUpdate,\n    RaidenActions.tokenMonitored,\n].map(getType));\n//# sourceMappingURL=actions.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getNetwork as parseNetwork } from 'ethers/utils/networks';\nimport { flatten, sortBy } from 'lodash';\nimport { fromEventPattern, merge, from, of, defer, EMPTY, combineLatest } from 'rxjs';\nimport { filter, first, map, switchMap, mergeMap } from 'rxjs/operators';\n/**\n * Like rxjs' fromEvent, but event can be an EventFilter\n *\n * @param target - Object to hook event listener, maybe a Provider or Contract\n * @param event - EventFilter or string representing the event to listen to\n * @param resultSelector - A map of events arguments to output parameters\n *      Default is to pass only first parameter\n * @returns Observable of target.on(event) events\n */\nexport function fromEthersEvent(target, event, resultSelector) {\n    return fromEventPattern((handler) => target.on(event, handler), (handler) => target.removeListener(event, handler), resultSelector);\n}\n/**\n * getEventsStream returns a stream of T-type tuples (arrays) from Contract's\n * events from filters. These events are polled since provider's [re]setEventsBlock to newest\n * polled block. If both 'fromBlock$' and 'lastSeenBlock$' are specified, also fetch past events\n * since fromBlock up to lastSeenBlock$ === provider.resetEventsBlock - 1\n * T must be a tuple-like type receiving all filters arguments plus the respective Event in the end\n *\n * @param contract - Contract source instance for filters, connected to a provider\n * @param filters - array of OR filters from tokenNetwork\n * @param fromBlock$ - Observable of a past blockNumber since when to fetch past events\n * @param lastSeenBlock$ - Observable of latest seen block, to be used as toBlock of pastEvents.\n *      lastSeenBlock + 1 is supposed to be first one fetched by contract.on newEvents$\n *      Both fromBlock$ and lastSeenBlock$ need to be set to fetch pastEvents$\n * @returns Observable of contract's events\n */\nexport function getEventsStream(contract, filters, fromBlock$, lastSeenBlock$) {\n    const provider = contract.provider;\n    // past events (in the closed-interval=[fromBlock, lastSeenBlock]),\n    // fetch once, sort by blockNumber, emit all, complete\n    let pastEvents$ = EMPTY;\n    if (fromBlock$ && lastSeenBlock$) {\n        pastEvents$ = combineLatest(fromBlock$, defer(() => (provider.blockNumber ? of(provider.blockNumber) : lastSeenBlock$))).pipe(first(), switchMap(([fromBlock, toBlock]) => Promise.all(filters.map(filter => provider.getLogs(Object.assign({}, filter, { fromBlock, toBlock }))))), \n        // flatten array of each getLogs query response and sort them\n        // emit log array elements as separate logs into stream (unwind)\n        mergeMap(logs => from(sortBy(flatten(logs), ['blockNumber']))), map(log => {\n            // parse log into [...args, event: Event] array,\n            // the same that contract.on events/callbacks\n            const parsed = contract.interface.parseLog(log);\n            if (!parsed)\n                return;\n            const args = Array.prototype.slice.call(parsed.values);\n            // not all parameters quite needed right now, but let's comply with the interface\n            const event = Object.assign({}, log, parsed, { args, removeListener: () => { }, getBlock: () => provider.getBlock(log.blockHash), getTransaction: () => provider.getTransaction(log.transactionHash), getTransactionReceipt: () => provider.getTransactionReceipt(log.transactionHash), decode: undefined });\n            return [...args, event];\n        }), filter((event) => !!event));\n    }\n    // new events (in open-interval=]lastSeenBlock, latest])\n    // where lastSeenBlock is the currentBlock at call time\n    // doesn't complete, keep emitting events for each new block (if any) until unsubscription\n    const newEvents$ = from(filters).pipe(mergeMap(filter => fromEthersEvent(contract, filter, (...args) => args)));\n    return merge(pastEvents$, newEvents$);\n}\n/**\n * Like Provider.getNetwork, but fetches every time instead of using cached property\n *\n * @param provider - Provider to fetch data from\n * @returns Promise of Network info\n */\nexport function getNetwork(provider) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return parseNetwork(parseInt(yield provider.send('net_version', [])));\n    });\n}\n/**\n * Patch JsonRpcProvider.send to try personal_sign first, and fallback to eth_sign if it fails\n * Call it once on the provider instance\n *\n * @param provider - A JsonRpcProvider instance to patch\n */\nexport function patchSignSend(provider) {\n    const origSend = provider.send;\n    provider.send = function (method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (method === 'eth_sign') {\n                // try 'personal_sign' by default instead of 'eth_sign'\n                return origSend.apply(this, ['personal_sign', [params[1], params[0]]]).catch(err => {\n                    // on first error, if personal_sign isn't available\n                    if (err instanceof Error &&\n                        (err.message.includes('The method personal_sign does not exist') ||\n                            err.message.includes('Method personal_sign not supported'))) {\n                        provider.send = origSend; // un-patch\n                        return provider.send(method, params); // and retry with eth_sign\n                    }\n                    throw err; // else, re-raise\n                });\n            }\n            return origSend.apply(this, [method, params]);\n        });\n    };\n}\n//# sourceMappingURL=ethers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { from, of, EMPTY, merge, interval } from 'rxjs';\nimport { catchError, filter, map, mergeMap, mergeMapTo, tap, takeWhile, withLatestFrom, groupBy, exhaustMap, first, publishReplay, switchMap, pluck, } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { findKey, get, isEmpty, negate } from 'lodash';\nimport { hexlify, concat } from 'ethers/utils';\nimport { HashZero, Zero } from 'ethers/constants';\nimport { raidenShutdown } from '../actions';\nimport { ChannelState } from '../channels';\nimport { newBlock, tokenMonitored, channelOpenFailed, channelMonitored, channelDepositFailed, channelCloseFailed, channelSettleFailed, channelOpen, channelOpened, channelDeposit, channelClose, channelSettle, channelSettleable, channelDeposited, channelClosed, channelSettled, channelWithdrawn, } from './actions';\nimport { SignatureZero, ShutdownReason } from '../constants';\nimport { fromEthersEvent, getEventsStream, getNetwork } from '../utils/ethers';\nimport { encode } from '../utils/data';\n/**\n * Fetch current blockNumber, register for new block events and emit newBlock actions\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param provider - RaidenEpicDeps members\n * @returns Observable of newBlock actions\n */\nexport const initNewBlockEpic = ({}, {}, { provider }) => from(provider.getBlockNumber()).pipe(mergeMap(blockNumber => merge(of(blockNumber), fromEthersEvent(provider, 'block'))), map(blockNumber => newBlock({ blockNumber })));\n/**\n * Monitor registry for new token networks and monitor them\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param registryContract,contractsInfo - RaidenEpicDeps members\n * @returns Observable of tokenMonitored actions\n */\nexport const initMonitorRegistryEpic = (action$, state$, { registryContract, contractsInfo }) => state$.pipe(publishReplay(1, undefined, state$ => action$.pipe(first(isActionOf(newBlock)), withLatestFrom(state$), switchMap(([{ payload: { blockNumber } }, state]) => merge(\n// monitor old (in case of empty tokens) and new registered tokens\n// and starts monitoring every registered token\ngetEventsStream(registryContract, [registryContract.filters.TokenNetworkCreated(null, null)], isEmpty(state.tokens)\n    ? of(contractsInfo.TokenNetworkRegistry.block_number)\n    : undefined, isEmpty(state.tokens) ? of(blockNumber) : undefined).pipe(withLatestFrom(state$), map(([[token, tokenNetwork, event], state]) => tokenMonitored({\n    token,\n    tokenNetwork,\n    fromBlock: !(token in state.tokens) ? event.blockNumber : undefined,\n}))), \n// monitor previously monitored tokens\nfrom(Object.entries(state.tokens)).pipe(map(([token, tokenNetwork]) => tokenMonitored({ token: token, tokenNetwork }))))))));\n/**\n * Monitor channels previously already on state\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of channelMonitored actions\n */\nexport const initMonitorChannelsEpic = ({}, state$) => state$.pipe(first(), mergeMap(function* (state) {\n    for (const [tokenNetwork, obj] of Object.entries(state.channels)) {\n        for (const [partner, channel] of Object.entries(obj)) {\n            if (channel.state === ChannelState.opening)\n                continue;\n            yield channelMonitored({ id: channel.id }, { tokenNetwork: tokenNetwork, partner: partner });\n        }\n    }\n}));\n/**\n * Monitor provider to ensure account continues to be available and network stays the same\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param address,network,provider - RaidenEpicDeps members\n * @returns Observable of raidenShutdown actions\n */\nexport const initMonitorProviderEpic = ({}, {}, { address, network, provider }) => from(provider.listAccounts()).pipe(\n// at init time, check if our address is in provider's accounts list\n// if not, it means Signer is a local Wallet or another non-provider-side account\n// if yes, poll accounts every 1s and monitors if address is still there\n// also, every 1s poll current provider network and monitors if it's the same\n// if any check fails, emits RaidenShutdownAction, nothing otherwise\n// Poll reason from: https://github.com/MetaMask/faq/blob/master/DEVELOPERS.md\n// first/init-time check\nmap(accounts => accounts.includes(address)), mergeMap(isProviderAccount => interval(provider.pollingInterval).pipe(mergeMap(() => merge(\n// if isProviderAccount, also polls and monitors accounts list\nisProviderAccount\n    ? from(provider.listAccounts()).pipe(mergeMap(accounts => !accounts.includes(address)\n        ? of(raidenShutdown({ reason: ShutdownReason.ACCOUNT_CHANGED }))\n        : EMPTY))\n    : EMPTY, \n// unconditionally monitors network changes\nfrom(getNetwork(provider)).pipe(mergeMap(curNetwork => curNetwork.chainId !== network.chainId\n    ? of(raidenShutdown({ reason: ShutdownReason.NETWORK_CHANGED }))\n    : EMPTY)))))));\n/**\n * Starts monitoring a token network for events\n * When this action goes through (because a former or new token registry event was deteceted),\n * subscribe to events and emit respective actions to the stream. Currently:\n * - ChannelOpened events with us or by us\n *\n * @param action$ - Observable of tokenMonitored actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of channelOpened actions\n */\nexport const tokenMonitoredEpic = (action$, state$, { address, getTokenNetworkContract }) => state$.pipe(pluck('blockNumber'), publishReplay(1, undefined, blockNumber$ => action$.pipe(filter(isActionOf(tokenMonitored)), groupBy(action => action.payload.tokenNetwork), mergeMap(grouped$ => grouped$.pipe(exhaustMap(action => {\n    const tokenNetworkContract = getTokenNetworkContract(action.payload.tokenNetwork);\n    const filters = [\n        tokenNetworkContract.filters.ChannelOpened(null, address, null, null),\n        tokenNetworkContract.filters.ChannelOpened(null, null, address, null),\n    ];\n    return getEventsStream(tokenNetworkContract, filters, \n    // if first time monitoring this token network,\n    // fetch TokenNetwork's pastEvents since registry deployment as fromBlock$\n    action.payload.fromBlock ? of(action.payload.fromBlock) : undefined, action.payload.fromBlock ? blockNumber$ : undefined).pipe(filter(([, p1, p2]) => p1 === address || p2 === address), map(([id, p1, p2, settleTimeout, event]) => channelOpened({\n        id: id.toNumber(),\n        settleTimeout: settleTimeout.toNumber(),\n        openBlock: event.blockNumber,\n        isFirstParticipant: address === p1,\n        txHash: event.transactionHash,\n    }, {\n        tokenNetwork: tokenNetworkContract.address,\n        partner: address === p1 ? p2 : p1,\n    })));\n}))))));\n/**\n * Monitors a channel for channel Events\n * Can be called either at initialization time (for previously known channels on previously\n * monitored TokenNetwork) or by a new detected ChannelOpenedAction. On the later case,\n * also fetches events since Channel.openBlock.\n * Currently monitored events:\n * - ChannelNewDeposit, fires a channelDeposited action\n * - ChannelClosedEvent, fires a channelClosed action\n * - ChannelSettledEvent, fires a channelSettled action and completes that channel observable\n *\n * @param action$ - Observable of channelMonitored actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of channelDeposited,channelClosed,channelSettled actions\n */\nexport const channelMonitoredEpic = (action$, state$, { getTokenNetworkContract }) => state$.pipe(pluck('blockNumber'), publishReplay(1, undefined, blockNumber$ => action$.pipe(filter(isActionOf(channelMonitored)), groupBy(action => `${action.payload.id}#${action.meta.partner}@${action.meta.tokenNetwork}`), mergeMap(grouped$ => grouped$.pipe(exhaustMap(action => {\n    const tokenNetworkContract = getTokenNetworkContract(action.meta.tokenNetwork);\n    // TODO: instead of one filter for each event, optimize to one filter per channel\n    // it requires ethers to support OR filters for topics:\n    // https://github.com/ethers-io/ethers.js/issues/437\n    // can we hook to provider.on directly and decoding the events ourselves?\n    const depositFilter = tokenNetworkContract.filters.ChannelNewDeposit(action.payload.id, null, null), withdrawFilter = tokenNetworkContract.filters.ChannelWithdraw(action.payload.id, null, null), closedFilter = tokenNetworkContract.filters.ChannelClosed(action.payload.id, null, null, null), settledFilter = tokenNetworkContract.filters.ChannelSettled(action.payload.id, null, null, null, null);\n    return merge(getEventsStream(tokenNetworkContract, [depositFilter], \n    // if channelMonitored triggered by ChannelOpenedAction,\n    // fetch Channel's pastEvents since channelOpened blockNumber as fromBlock$\n    action.payload.fromBlock ? of(action.payload.fromBlock) : undefined, action.payload.fromBlock ? blockNumber$ : undefined).pipe(map(([id, participant, totalDeposit, event]) => channelDeposited({\n        id: id.toNumber(),\n        participant,\n        totalDeposit,\n        txHash: event.transactionHash,\n    }, action.meta))), getEventsStream(tokenNetworkContract, [withdrawFilter], action.payload.fromBlock ? of(action.payload.fromBlock) : undefined, action.payload.fromBlock ? blockNumber$ : undefined).pipe(map(([id, participant, totalWithdraw, event]) => channelWithdrawn({\n        id: id.toNumber(),\n        participant,\n        totalWithdraw,\n        txHash: event.transactionHash,\n    }, action.meta))), getEventsStream(tokenNetworkContract, [closedFilter], action.payload.fromBlock ? of(action.payload.fromBlock) : undefined, action.payload.fromBlock ? blockNumber$ : undefined).pipe(map(([id, participant, , , event]) => channelClosed({\n        id: id.toNumber(),\n        participant,\n        closeBlock: event.blockNumber,\n        txHash: event.transactionHash,\n    }, action.meta))), getEventsStream(tokenNetworkContract, [settledFilter], action.payload.fromBlock ? of(action.payload.fromBlock) : undefined, action.payload.fromBlock ? blockNumber$ : undefined).pipe(map(([id, , , , , event]) => channelSettled({\n        id: id.toNumber(),\n        settleBlock: event.blockNumber,\n        txHash: event.transactionHash,\n    }, action.meta)))).pipe(\n    // takeWhile tends to broad input to generic Action. We need to narrow it by hand\n    takeWhile(negate(isActionOf(channelSettled)), true));\n}))))));\n/**\n * A channelOpen action requested by user\n * Needs to be called on a previously monitored tokenNetwork. Calls TokenNetwork.openChannel\n * with given parameters. If tx goes through successfuly, stop as ChannelOpened success action\n * will instead be detected and fired by tokenMonitoredEpic. If anything detectable goes wrong,\n * fires a ChannnelOpenActionFailed instead\n *\n * @param action$ - Observable of channelOpen actions\n * @param state$ - Observable of RaidenStates\n * @param getTokenNetworkContract - RaidenEpicDeps members\n * @returns Observable of channelOpenFailed actions\n */\nexport const channelOpenEpic = (action$, state$, { getTokenNetworkContract, config$ }) => action$.pipe(filter(isActionOf(channelOpen)), withLatestFrom(state$, config$), mergeMap(([action, state, config]) => {\n    const tokenNetwork = getTokenNetworkContract(action.meta.tokenNetwork);\n    const channelState = get(state.channels, [\n        action.meta.tokenNetwork,\n        action.meta.partner,\n        'state',\n    ]);\n    // proceed only if channel is in 'opening' state, set by this action\n    if (channelState !== ChannelState.opening)\n        return of(channelOpenFailed(new Error(`Invalid channel state: ${channelState}`), action.meta));\n    // send openChannel transaction !!!\n    return from(tokenNetwork.functions.openChannel(state.address, action.meta.partner, action.payload.settleTimeout || config.settleTimeout)).pipe(mergeMap((tx) => __awaiter(this, void 0, void 0, function* () { return ({ receipt: yield tx.wait(), tx }); })), map(({ receipt, tx }) => {\n        if (!receipt.status)\n            throw new Error(`openChannel transaction \"${tx.hash}\" failed`);\n        return tx.hash;\n    }), \n    // if succeeded, return a empty/completed observable\n    // actual ChannelOpenedAction will be detected and handled by tokenMonitoredEpic\n    // if any error happened on tx call/pipeline, mergeMap below won't be hit, and catchError\n    // will then emit the channelOpenFailed action instead\n    mergeMapTo(EMPTY), catchError(error => of(channelOpenFailed(error, action.meta))));\n}));\n/**\n * When we see a new ChannelOpenedAction event, starts monitoring channel\n *\n * @param action$ - Observable of channelOpened actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of channelMonitored actions\n */\nexport const channelOpenedEpic = (action$, state$) => action$.pipe(filter(isActionOf(channelOpened)), withLatestFrom(state$), \n// proceed only if channel is in 'open' state and a deposit is required\nfilter(([action, state]) => {\n    const channel = get(state.channels, [\n        action.meta.tokenNetwork,\n        action.meta.partner,\n    ]);\n    return !!channel && channel.state === ChannelState.open;\n}), map(([action]) => channelMonitored({\n    id: action.payload.id,\n    fromBlock: action.payload.openBlock,\n}, action.meta)));\n/**\n * A ChannelDeposit action requested by user\n * Needs to be called on a previously monitored channel. Calls Token.approve for TokenNetwork\n * and then set respective setTotalDeposit. If all tx go through successfuly, stop as\n * ChannelDeposited success action will instead be detected and reacted by\n * channelMonitoredEpic. If anything detectable goes wrong, fires a ChannelDepositActionFailed\n * instead\n *\n * @param action$ - Observable of channelDeposit actions\n * @param state$ - Observable of RaidenStates\n * @param address,getTokenContract,getTokenNetworkContract - RaidenEpicDeps members\n * @returns Observable of channelDepositFailed actions\n */\nexport const channelDepositEpic = (action$, state$, { address, getTokenContract, getTokenNetworkContract }) => action$.pipe(filter(isActionOf(channelDeposit)), withLatestFrom(state$), mergeMap(([action, state]) => {\n    const token = findKey(state.tokens, tn => tn === action.meta.tokenNetwork);\n    if (!token) {\n        const error = new Error(`token for tokenNetwork \"${action.meta.tokenNetwork}\" not found`);\n        return of(channelDepositFailed(error, action.meta));\n    }\n    const tokenContract = getTokenContract(token);\n    const tokenNetworkContract = getTokenNetworkContract(action.meta.tokenNetwork);\n    const channel = get(state.channels, [\n        action.meta.tokenNetwork,\n        action.meta.partner,\n    ]);\n    if (!channel || channel.state !== ChannelState.open || channel.id === undefined) {\n        const error = new Error(`channel for \"${action.meta.tokenNetwork}\" and \"${action.meta.partner}\" not found or not in 'open' state`);\n        return of(channelDepositFailed(error, action.meta));\n    }\n    const channelId = channel.id;\n    // send approve transaction\n    return from(tokenContract.functions.approve(action.meta.tokenNetwork, action.payload.deposit))\n        .pipe(tap(tx => console.log(`sent approve tx \"${tx.hash}\" to \"${token}\"`)), mergeMap((tx) => __awaiter(this, void 0, void 0, function* () { return ({ receipt: yield tx.wait(), tx }); })), map(({ receipt, tx }) => {\n        if (!receipt.status)\n            throw new Error(`token \"${token}\" approve transaction \"${tx.hash}\" failed`);\n        return tx.hash;\n    }), tap(txHash => console.log(`approve tx \"${txHash}\" successfuly mined!`)))\n        .pipe(withLatestFrom(state$), mergeMap(([, state]) => \n    // send setTotalDeposit transaction\n    tokenNetworkContract.functions.setTotalDeposit(channelId, address, state.channels[action.meta.tokenNetwork][action.meta.partner].own.deposit.add(action.payload.deposit), action.meta.partner, { gasLimit: 100e3 })), tap(tx => console.log(`sent setTotalDeposit tx \"${tx.hash}\" to \"${action.meta.tokenNetwork}\"`)), mergeMap((tx) => __awaiter(this, void 0, void 0, function* () { return ({ receipt: yield tx.wait(), tx }); })), map(({ receipt, tx }) => {\n        if (!receipt.status)\n            throw new Error(`tokenNetwork \"${action.meta.tokenNetwork}\" setTotalDeposit transaction \"${tx.hash}\" failed`);\n        return tx.hash;\n    }), tap(txHash => console.log(`setTotalDeposit tx \"${txHash}\" successfuly mined!`)), \n    // if succeeded, return a empty/completed observable\n    // actual ChannelDepositedAction will be detected and handled by channelMonitoredEpic\n    // if any error happened on tx call/pipeline, mergeMap below won't be hit, and catchError\n    // will then emit the channelDepositFailed action instead\n    mergeMapTo(EMPTY), catchError(error => of(channelDepositFailed(error, action.meta))));\n}));\n/**\n * A ChannelClose action requested by user\n * Needs to be called on an opened or closing (for retries) channel.\n * If tx goes through successfuly, stop as ChannelClosed success action will instead be\n * detected and reacted by channelMonitoredEpic. If anything detectable goes wrong, fires a\n * ChannelCloseActionFailed instead\n *\n * @param action$ - Observable of channelClose actions\n * @param state$ - Observable of RaidenStates\n * @param getTokenNetworkContract - RaidenEpicDeps members\n * @returns Observable of channelCloseFailed actions\n */\nexport const channelCloseEpic = (action$, state$, { address, network, getTokenNetworkContract, signer }) => action$.pipe(filter(isActionOf(channelClose)), withLatestFrom(state$), mergeMap(([action, state]) => {\n    const tokenNetworkContract = getTokenNetworkContract(action.meta.tokenNetwork);\n    const channel = get(state.channels, [\n        action.meta.tokenNetwork,\n        action.meta.partner,\n    ]);\n    if (!channel ||\n        !(channel.state === ChannelState.open || channel.state === ChannelState.closing) ||\n        !channel.id) {\n        const error = new Error(`channel for \"${action.meta.tokenNetwork}\" and \"${action.meta.partner}\" not found or not in 'open' or 'closing' state`);\n        return of(channelCloseFailed(error, action.meta));\n    }\n    const channelId = channel.id;\n    const balanceHash = HashZero, nonce = Zero, additionalHash = HashZero, nonClosingSignature = hexlify(SignatureZero);\n    // TODO: enable this after we're able to receive transfers\n    // if (channel.partner.balanceProof) {\n    //   balanceHash = createBalanceHash(\n    //     channel.partner.balanceProof.transferredAmount,\n    //     channel.partner.balanceProof.lockedAmount,\n    //     channel.partner.balanceProof.locksroot,\n    //   );\n    //   nonce = channel.partner.balanceProof.nonce;\n    //   additionalHash = channel.partner.balanceProof.messageHash;\n    //   nonClosingSignature = channel.partner.balanceProof.signature;\n    // }\n    const closingMessage = concat([\n        encode(action.meta.tokenNetwork, 20),\n        encode(network.chainId, 32),\n        encode(1, 32),\n        encode(channelId, 32),\n        encode(balanceHash, 32),\n        encode(nonce, 32),\n        encode(additionalHash, 32),\n        encode(nonClosingSignature, 65),\n    ]); // UInt8Array of 277 bytes\n    // sign counter balance proof (while we don't receive transfers yet, it's always zero),\n    // then send closeChannel transaction with our signature\n    return from(signer.signMessage(closingMessage)).pipe(mergeMap(closingSignature => tokenNetworkContract.functions.closeChannel(channelId, action.meta.partner, address, balanceHash, nonce, additionalHash, nonClosingSignature, closingSignature)), tap(tx => console.log(`sent closeChannel tx \"${tx.hash}\" to \"${action.meta.tokenNetwork}\"`)), mergeMap((tx) => __awaiter(this, void 0, void 0, function* () { return ({ receipt: yield tx.wait(), tx }); })), map(({ receipt, tx }) => {\n        if (!receipt.status)\n            throw new Error(`tokenNetwork \"${action.meta.tokenNetwork}\" closeChannel transaction \"${tx.hash}\" failed`);\n        console.log(`closeChannel tx \"${tx.hash}\" successfuly mined!`);\n        return tx.hash;\n    }), \n    // if succeeded, return a empty/completed observable\n    // actual ChannelClosedAction will be detected and handled by channelMonitoredEpic\n    // if any error happened on tx call/pipeline, mergeMap below won't be hit, and catchError\n    // will then emit the channelCloseFailed action instead\n    mergeMapTo(EMPTY), catchError(error => of(channelCloseFailed(error, action.meta))));\n}));\n/**\n * A ChannelSettle action requested by user\n * Needs to be called on an settleable or settling (for retries) channel.\n * If tx goes through successfuly, stop as ChannelSettled success action will instead be\n * detected and reacted by channelMonitoredEpic. If anything detectable goes wrong, fires a\n * ChannelSettleActionFailed instead\n *\n * @param action$ - Observable of channelSettle actions\n * @param state$ - Observable of RaidenStates\n * @param address,getTokenNetworkContract - RaidenEpicDeps members\n * @returns Observable of channelSettleFailed actions\n */\nexport const channelSettleEpic = (action$, state$, { address, getTokenNetworkContract }) => action$.pipe(filter(isActionOf(channelSettle)), withLatestFrom(state$), mergeMap(([action, state]) => {\n    const tokenNetworkContract = getTokenNetworkContract(action.meta.tokenNetwork);\n    const channel = get(state.channels, [\n        action.meta.tokenNetwork,\n        action.meta.partner,\n    ]);\n    if (!channel ||\n        !(channel.state === ChannelState.settleable || channel.state === ChannelState.settling) ||\n        !channel.id) {\n        const error = new Error(`channel for \"${action.meta.tokenNetwork}\" and \"${action.meta.partner}\" not found or not in 'settleable' or 'settling' state`);\n        return of(channelSettleFailed(error, action.meta));\n    }\n    const channelId = channel.id;\n    const zeroBalanceProof = {\n        transferredAmount: Zero,\n        lockedAmount: Zero,\n        locksroot: HashZero,\n    };\n    let part1 = Object.assign({ address: action.meta.partner }, (channel.partner.balanceProof || zeroBalanceProof)), part2 = Object.assign({ address }, (channel.own.balanceProof || zeroBalanceProof));\n    if (channel.isFirstParticipant)\n        [part1, part2] = [part2, part1];\n    // send settleChannel transaction\n    return from(tokenNetworkContract.functions.settleChannel(channelId, part1.address, part1.transferredAmount, part1.lockedAmount, part1.locksroot, part2.address, part2.transferredAmount, part2.lockedAmount, part2.locksroot)).pipe(tap(tx => console.log(`sent settleChannel tx \"${tx.hash}\" to \"${action.meta.tokenNetwork}\"`)), mergeMap((tx) => __awaiter(this, void 0, void 0, function* () { return ({ receipt: yield tx.wait(), tx }); })), map(({ receipt, tx }) => {\n        if (!receipt.status)\n            throw new Error(`tokenNetwork \"${action.meta.tokenNetwork}\" settleChannel transaction \"${tx.hash}\" failed`);\n        console.log(`settleChannel tx \"${tx.hash}\" successfuly mined!`);\n        return tx.hash;\n    }), \n    // if succeeded, return a empty/completed observable\n    // actual ChannelSettledAction will be detected and handled by channelMonitoredEpic\n    // if any error happened on tx call/pipeline, mergeMap below won't be hit, and catchError\n    // will then emit the channelSettleFailed action instead\n    mergeMapTo(EMPTY), catchError(error => of(channelSettleFailed(error, action.meta))));\n}));\n/**\n * Process newBlocks, emits ChannelSettleableAction if any closed channel is now settleable\n *\n * @param action$ - Observable of newBlock actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of channelSettleable actions\n */\nexport const channelSettleableEpic = (action$, state$) => action$.pipe(filter(isActionOf(newBlock)), withLatestFrom(state$), mergeMap(function* ([{ payload: { blockNumber }, }, state,]) {\n    for (const tokenNetwork in state.channels) {\n        for (const partner in state.channels[tokenNetwork]) {\n            const channel = state.channels[tokenNetwork][partner];\n            if (channel.state === ChannelState.closed &&\n                channel.settleTimeout && // closed channels always have settleTimeout & closeBlock set\n                channel.closeBlock &&\n                blockNumber > channel.closeBlock + channel.settleTimeout) {\n                yield channelSettleable({ settleableBlock: blockNumber }, { tokenNetwork: tokenNetwork, partner: partner });\n            }\n        }\n    }\n}));\n//# sourceMappingURL=epics.js.map","import { defer, of } from 'rxjs';\nimport { fromFetch } from 'rxjs/fetch';\nimport { map, catchError, timeout } from 'rxjs/operators';\nimport { encodeUri } from 'matrix-js-sdk/lib/utils';\n/**\n * From a yaml list string, return as Array\n * E.g. yamlListToArray(`\n * # comment\n *   - test1\n *   - test2\n *   - test3\n * `) === ['test1', 'test2', 'test3']\n *\n * @param yml - String containing only YAML list\n * @returns List of strings inside yml-encoded text\n */\nexport function yamlListToArray(yml) {\n    // match all strings starting with optional spaces followed by a dash + space\n    // capturing only the content of the list item, trimming spaces\n    const reg = /^\\s*-\\s*(.+?)\\s*$/gm;\n    const results = [];\n    let match;\n    while ((match = reg.exec(yml))) {\n        results.push(match[1]);\n    }\n    return results;\n}\n/**\n * Given a server name (with or without schema and port), return HTTP GET round trip time\n *\n * @param server - Server name with or without schema\n * @param httpTimeout - Optional timeout for the HTTP request\n * @returns Promise to a { server, rtt } object, where `rtt` may be NaN\n */\nexport function matrixRTT(server, httpTimeout) {\n    let url = server;\n    if (!url.includes('://')) {\n        url = `https://${url}`;\n    }\n    url += `/_matrix/client/versions`;\n    return defer(() => {\n        const start = Date.now();\n        return fromFetch(url).pipe(map(response => (response.ok ? Date.now() : NaN)), timeout(httpTimeout || Number.MAX_SAFE_INTEGER), catchError(() => of(NaN)), map(end => end - start), map(rtt => ({ server, rtt })));\n    });\n}\n/**\n * Return server name without schema or path\n *\n * @param server - any URL\n * @returns server URL with domain and port (if present), without schema, paths or query params\n */\nexport function getServerName(server) {\n    const match = /^(?:\\w*:?\\/\\/)?([^/#?&]+)/.exec(server);\n    return match && match[1];\n}\n/**\n * MatrixClient doesn't expose this API, but it does exist, so we create it here\n *\n * @param matrix - an already setup and started MatrixClient\n * @param userId - to fetch status/presence from\n * @returns Promise to object containing status data\n */\nexport function getUserPresence(matrix, userId) {\n    const path = encodeUri('/presence/$userId/status', { $userId: userId });\n    return matrix._http.authedRequest(undefined, 'GET', path);\n}\n//# sourceMappingURL=matrix.js.map","/**\n * Simple Map-based LRU cache\n *\n * @param max - Maximum size of cache\n */\nexport class LruCache {\n    constructor(max) {\n        this.values = new Map();\n        this.max = max;\n    }\n    get(key) {\n        const entry = this.values.get(key);\n        if (entry) {\n            // peek the entry, re-insert for LRU strategy\n            this.values.delete(key);\n            this.values.set(key, entry);\n        }\n        return entry;\n    }\n    put(key, value) {\n        if (this.values.size >= this.max) {\n            // least-recently used cache eviction strategy\n            const keyToDelete = this.values.keys().next().value;\n            this.values.delete(keyToDelete);\n        }\n        this.values.set(key, value);\n    }\n}\n//# sourceMappingURL=lru.js.map","import { of, fromEvent } from 'rxjs';\nimport { filter, scan, startWith, share, take } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { memoize, curry } from 'lodash';\nimport { matrixPresenceUpdate } from './actions';\n/**\n * Helper to map/get an aggregated Presences observable from action$ bus\n * Known presences as { address: <last seen MatrixPresenceUpdateAction> } mapping\n * It's memoized and shared, so all subscriptions share the same mapped/output object\n *\n * @param action$ - Observable\n * @returns Observable of aggregated Presences from subscription to now\n */\nexport const getPresences$ = memoize((action$) => action$.pipe(filter(isActionOf(matrixPresenceUpdate)), scan(\n// scan all presence update actions and populate/output a per-address mapping\n(presences, update) => (Object.assign({}, presences, { [update.meta.address]: update })), {}), share(), startWith({})));\n/**\n * Return the array of configured global rooms\n *\n * @param config - object to gather the list from\n * @returns Array of room names\n */\nexport function globalRoomNames(config) {\n    return [config.discoveryRoom, config.pfsRoom].filter((g) => !!g);\n}\n/**\n * Curried function (arity=2) which matches room passed as second argument based on roomId, name or\n * alias passed as first argument\n *\n * @param roomIdOrAlias - Room Id, name, canonical or normal alias for room\n * @param room - Room to test\n * @returns True if room matches term, false otherwise\n */\nexport const roomMatch = curry((roomIdOrAlias, room) => roomIdOrAlias === room.roomId ||\n    roomIdOrAlias === room.name ||\n    roomIdOrAlias === room.getCanonicalAlias() ||\n    room.getAliases().includes(roomIdOrAlias));\n/**\n * Returns an observable to a (possibly pending) room matching roomId or some alias\n * This method doesn't try to join the room, just wait for it to show up in MatrixClient.\n *\n * @param matrix - Client instance to fetch room info from\n * @param roomIdOrAlias - room id or alias to look for\n * @returns Observable to populated room instance\n */\nexport function getRoom$(matrix, roomIdOrAlias) {\n    let room = matrix.getRoom(roomIdOrAlias);\n    if (!room)\n        room = matrix.getRooms().find(roomMatch(roomIdOrAlias));\n    if (room)\n        return of(room);\n    return fromEvent(matrix, 'Room').pipe(filter(roomMatch(roomIdOrAlias)), take(1));\n}\n//# sourceMappingURL=utils.js.map","/* eslint-disable @typescript-eslint/camelcase */\nimport { combineLatest, from, of, EMPTY, fromEvent, timer, throwError, merge, } from 'rxjs';\nimport { catchError, concatMap, delay, distinctUntilChanged, filter, groupBy, ignoreElements, map, mergeMap, withLatestFrom, scan, startWith, switchMap, take, takeUntil, tap, toArray, mapTo, finalize, first, timeout, publishReplay, } from 'rxjs/operators';\nimport { fromFetch } from 'rxjs/fetch';\nimport { isActionOf } from 'typesafe-actions';\nimport { find, get, minBy, sortBy } from 'lodash';\nimport { getAddress, verifyMessage } from 'ethers/utils';\nimport { createClient } from 'matrix-js-sdk';\nimport { channelMonitored } from '../channels/actions';\nimport { MessageType, Processed, SecretRequest, SecretReveal, Signed, } from '../messages/types';\nimport { decodeJsonMessage, encodeJsonMessage, getMessageSigner, signMessage, } from '../messages/utils';\nimport { messageSend, messageReceived, messageSent, messageGlobalSend } from '../messages/actions';\nimport { getServerName, getUserPresence, matrixRTT, yamlListToArray } from '../utils/matrix';\nimport { LruCache } from '../utils/lru';\nimport { matrixPresenceUpdate, matrixRequestMonitorPresenceFailed, matrixRoom, matrixRoomLeave, matrixSetup, matrixRequestMonitorPresence, } from './actions';\nimport { getPresences$, getRoom$, roomMatch, globalRoomNames } from './utils';\n// unavailable just means the user didn't do anything over a certain amount of time, but they're\n// still there, so we consider the user as available/online then\nconst AVAILABLE = ['online', 'unavailable'];\nconst userRe = /^@(0x[0-9a-f]{40})[.:]/i;\n/**\n * Initialize matrix transport\n * The matrix client instance will be outputed to RaidenEpicDeps.matrix$ AsyncSubject\n * The setup info (including credentials, for persistence) will be the matrixSetup output action\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param address,network,signer,matrix$ - RaidenEpicDeps members\n * @returns Observable of matrixSetup generated by initializing matrix client\n */\nexport const initMatrixEpic = ({}, state$, { address, signer, matrix$, config$ }) => state$.pipe(first(), withLatestFrom(config$), mergeMap(([state, { matrixServer, matrixServerLookup, httpTimeout }]) => {\n    const server = get(state, ['transport', 'matrix', 'server']), setup = get(state, ['transport', 'matrix', 'setup']);\n    if (server && (!matrixServer || matrixServer === server)) {\n        // reuse server&setup from state iff set and either matrixServer equal or undefined\n        return of({ server, setup });\n    }\n    else if (matrixServer) {\n        // [re]auth on [new] server if matrixServer is set and different from state or first run\n        return of({ server: matrixServer, setup: undefined });\n    }\n    else {\n        // fetch servers list and use the one with shortest http round trip time (rtt)\n        return fromFetch(matrixServerLookup).pipe(mergeMap(response => {\n            if (!response.ok)\n                return throwError(new Error(`Could not fetch server list from \"${matrixServerLookup}\" => ${response.status}`));\n            return response.text();\n        }), timeout(httpTimeout), mergeMap(text => from(yamlListToArray(text))), mergeMap(server => matrixRTT(server, httpTimeout)), toArray(), map(rtts => sortBy(rtts, ['rtt'])), map(rtts => {\n            if (!rtts[0] || typeof rtts[0].rtt !== 'number' || isNaN(rtts[0].rtt))\n                throw new Error(`Could not contact any matrix servers: ${JSON.stringify(rtts)}`);\n            return rtts[0].server;\n        }), map(server => ({\n            server: server.includes('://') ? server : `https://${server}`,\n            setup: undefined,\n        })));\n    }\n}), mergeMap(function ({ server, setup, }) {\n    let { userId, accessToken, deviceId } = setup || {};\n    if (setup) {\n        // if matrixSetup was already issued before, and credentials are already in state\n        const matrix = createClient({\n            baseUrl: server,\n            userId,\n            accessToken,\n            deviceId,\n        });\n        return of({ matrix, server, setup });\n    }\n    else {\n        const serverName = getServerName(server);\n        if (!serverName)\n            return throwError(new Error(`Could not get serverName from \"${server}\"`));\n        const matrix = createClient({ baseUrl: server });\n        const userName = address.toLowerCase();\n        userId = `@${userName}:${serverName}`;\n        // create password as signature of serverName, then try login or register\n        return from(signer.signMessage(serverName)).pipe(mergeMap(password => from(matrix.loginWithPassword(userName, password)).pipe(catchError(() => from(matrix.register(userName, password))))), tap(result => {\n            // matrix.register implementation doesn't set returned credentials\n            // which would require an unnecessary additional login request if we didn't\n            // set it here, and login doesn't set deviceId, so we set all credential\n            // parameters again here after successful login or register\n            matrix.deviceId = result.device_id;\n            matrix._http.opts.accessToken = result.access_token;\n            matrix.credentials = {\n                userId: result.user_id,\n            };\n            // set vars for later MatrixSetupAction\n            accessToken = result.access_token;\n            deviceId = result.device_id;\n        }), \n        // displayName must be signature of full userId for our messages to be accepted\n        mergeMap(() => signer.signMessage(userId)), map(signedUserId => ({\n            matrix,\n            server,\n            setup: {\n                userId: userId,\n                accessToken: accessToken,\n                deviceId: deviceId,\n                displayName: signedUserId,\n            },\n        })));\n    }\n}), withLatestFrom(config$), mergeMap(([{ matrix, server, setup }, config]) => \n// ensure displayName is set even on restarts\nfrom(matrix.setDisplayName(setup.displayName)).pipe(mergeMap(() => merge(\n// ensure we joined global rooms\n...globalRoomNames(config).map(globalRoom => from(matrix.joinRoom(`#${globalRoom}:${getServerName(server)}`))))), toArray(), // wait all promises to complete\nmapTo({ matrix, server, setup }))), tap(({ matrix }) => {\n    // like Promise.resolve for AsyncSubjects\n    matrix$.next(matrix);\n    matrix$.complete();\n}), map(({ server, setup }) => matrixSetup({ server, setup })));\n/**\n * Start MatrixClient sync polling when detecting MatrixSetupAction, **after** init time fromEvents\n * were already registered.\n * This is required to ensure init-time events registering are done before initial sync, to avoid\n * losing one-shot events, like invitations.\n *\n * @param action$ - Observable of matrixSetup actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Empty observable (whole side-effect on matrix instance)\n */\nexport const matrixStartEpic = (action$, {}, { matrix$ }) => action$.pipe(filter(isActionOf(matrixSetup)), switchMap(() => matrix$), tap(matrix => console.log('MATRIX client', matrix)), mergeMap(matrix => matrix.startClient({ initialSyncLimit: 0 })), ignoreElements());\n/**\n * Calls matrix.stopClient when raiden is shutting down, i.e. action$ completes\n *\n * @param action$ - Observable of matrixSetup actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Empty observable (whole side-effect on matrix instance)\n */\nexport const matrixShutdownEpic = (action$, {}, { matrix$ }) => matrix$.pipe(mergeMap(matrix => action$.pipe(finalize(() => matrix.stopClient()))), ignoreElements());\n/**\n * Handles MatrixRequestMonitorPresenceAction and emits a MatrixPresenceUpdateAction\n * If presence is already known, emits it, else fetch from user profile\n * Even if the presence stays the same, we emit a MatrixPresenceUpdateAction, as this may be a\n * request being waited by a promise or something like that\n * IOW: every request should be followed by a presence update or a failed action, but presence\n * updates may happen later without new requests (e.g. when the user goes offline)\n *\n * @param action$ - Observable of matrixRequestMonitorPresence actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of presence updates or fail action\n */\nexport const matrixMonitorPresenceEpic = (action$, {}, { matrix$ }) => action$.pipe(filter(isActionOf(matrixRequestMonitorPresence)), \n// this mergeMap is like withLatestFrom, but waits until matrix$ emits its only value\nmergeMap(action => matrix$.pipe(map(matrix => ({ action, matrix })))), withLatestFrom(getPresences$(action$)), \n// TODO: groupBy(address)+concatMap serialize presence fetching\nmergeMap(([{ action, matrix }, presences]) => {\n    if (action.meta.address in presences)\n        // we already monitored/saw this user's presence\n        return of(presences[action.meta.address]);\n    const validUsers = [];\n    for (const user of matrix.getUsers()) {\n        if (!user.displayName)\n            continue;\n        if (!user.presence)\n            continue;\n        let recovered;\n        try {\n            const match = userRe.exec(user.userId);\n            if (!match || getAddress(match[1]) !== action.meta.address)\n                continue;\n            recovered = verifyMessage(user.userId, user.displayName);\n            if (!recovered || recovered !== action.meta.address)\n                continue;\n        }\n        catch (err) {\n            continue;\n        }\n        validUsers.push(user);\n    }\n    // IFF we see a cached/stored user (matrix.getUsers), with displayName and presence already\n    // populated, which displayName signature verifies to our address of interest,\n    // then construct and return the MatrixPresenceUpdateAction from the stored data\n    if (validUsers.length > 0) {\n        const user = minBy(validUsers, 'lastPresenceTs');\n        return of(matrixPresenceUpdate({ userId: user.userId, available: AVAILABLE.includes(user.presence) }, action.meta));\n    }\n    // if anything failed up to here, go the slow path: searchUserDirectory + getUserPresence\n    return from(\n    // search user directory for any user containing the address of interest in its userId\n    matrix.searchUserDirectory({ term: action.meta.address.toLowerCase() })).pipe(\n    // for every result matches, verify displayName signature is address of interest\n    mergeMap(function* ({ results }) {\n        for (const user of results) {\n            if (!user.display_name)\n                continue;\n            try {\n                const match = userRe.exec(user.user_id);\n                if (!match || getAddress(match[1]) !== action.meta.address)\n                    continue;\n                const recovered = verifyMessage(user.user_id, user.display_name);\n                if (!recovered || recovered !== action.meta.address)\n                    continue;\n            }\n            catch (err) {\n                continue;\n            }\n            yield user.user_id;\n        }\n    }), mergeMap(userId => getUserPresence(matrix, userId)\n        .then(presence => (Object.assign({}, presence, { user_id: userId })))\n        .catch(err => {\n        console.log('Error fetching user presence, ignoring:', err);\n        return { presence: '', user_id: userId };\n    })), filter(presence => !!presence && !!presence.presence), toArray(), \n    // for all matched/verified users, get its presence through dedicated API\n    // it's required because, as the user events could already have been handled and\n    // filtered out by matrixPresenceUpdateEpic because it wasn't yet a user-of-interest,\n    // we could have missed presence updates, then we need to fetch it here directly,\n    // and from now on, that other epic will monitor its updates, and sort by most recently\n    // seen user\n    map(presences => {\n        if (!presences.length)\n            throw new Error(`Could not find any user with valid signature for ${action.meta.address}`);\n        return minBy(presences, 'last_active_ago');\n    }), map(({ presence, user_id: userId }) => matrixPresenceUpdate({\n        userId,\n        available: AVAILABLE.includes(presence),\n    }, action.meta)), catchError(err => of(matrixRequestMonitorPresenceFailed(err, action.meta))));\n}));\n/**\n * Monitor peers matrix presence from User.presence events\n * We aggregate all users of interest (i.e. for which a monitor request was emitted at some point)\n * and emit presence updates for any presence change happening to a user validating to this address\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of presence updates\n */\nexport const matrixPresenceUpdateEpic = (action$, {}, { matrix$ }) => matrix$.pipe(\n// when matrix finishes initialization, register to matrix presence events\nswitchMap(matrix => \n// matrix's 'User.presence' sometimes fail to fire, but generic 'event' is always fired,\n// and User (retrieved via matrix.getUser) is up-to-date before 'event' emits\nfromEvent(matrix, 'event').pipe(map(event => ({ event, matrix })))), filter(({ event }) => event.getType() === 'm.presence'), \n// parse peer address from userId\nmap(({ event, matrix }) => {\n    // as 'event' is emitted after user is (created and) updated, getUser always returns it\n    const user = matrix.getUser(event.getSender()), match = userRe.exec(user.userId), peerAddress = match && match[1];\n    // getAddress will convert any valid address into checksummed-format\n    return {\n        user,\n        matrix,\n        peerAddress: (peerAddress && getAddress(peerAddress)),\n    };\n}), \n// filter out events without userId in the right format (startWith hex-address)\nfilter(({ user, peerAddress }) => !!(user.presence && peerAddress)), withLatestFrom(\n// observable of all addresses whose presence monitoring was requested since init\naction$.pipe(filter(isActionOf(matrixRequestMonitorPresence)), scan((toMonitor, request) => toMonitor.add(request.meta.address), new Set()), startWith(new Set())), \n// known presences as { address: <last seen MatrixPresenceUpdateAction> } mapping\ngetPresences$(action$)), \n// filter out events from users we don't care about\n// i.e.: presence monitoring never requested\nfilter(([{ peerAddress }, toMonitor]) => toMonitor.has(peerAddress)), mergeMap(([{ user, matrix, peerAddress }, , presences]) => {\n    // first filter can't tell typescript this property will always be set!\n    const userId = user.userId, address = peerAddress, presence = user.presence, available = AVAILABLE.includes(presence);\n    if (address in presences &&\n        presences[address].payload.userId === userId &&\n        presences[address].payload.available === available)\n        // even if signature verification passes, this wouldn't change presence, so return early\n        return EMPTY;\n    // fetch profile info if user doesn't contain a displayName\n    const displayName$ = user.displayName\n        ? of(user.displayName)\n        : from(matrix.getProfileInfo(userId, 'displayname')).pipe(map(profile => profile.displayname), catchError(() => of(undefined)));\n    return displayName$.pipe(map(displayName => {\n        // errors raised here will be logged and ignored on catchError below\n        if (!displayName)\n            throw new Error(`Could not get displayName of \"${userId}\"`);\n        // ecrecover address, validating displayName is the signature of the userId\n        const recovered = verifyMessage(userId, displayName);\n        if (!recovered || recovered !== peerAddress)\n            throw new Error(`Could not verify displayName signature of \"${userId}\": got \"${recovered}\"`);\n        return recovered;\n    }), map(address => matrixPresenceUpdate({ userId, available, ts: user.lastPresenceTs }, { address })));\n}), catchError(err => (console.log('Error validating presence event, ignoring', err), EMPTY)));\n/**\n * Upon receiving a MessageSendAction, ensure there's a room for the given address\n * Requires address to have its presence monitored.\n *\n * @param action$ - Observable of messageSend actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of matrixRoom actions\n */\nexport const matrixCreateRoomEpic = (action$, state$, { matrix$ }) => combineLatest(getPresences$(action$), state$).pipe(\n// multicasting combined presences+state with a ReplaySubject makes it act as withLatestFrom\n// but working inside concatMap, which is called only at outer next and subscribe delayed\npublishReplay(1, undefined, presencesStateReplay$ => \n// actual output observable, handles MessageSendAction serially and create room if needed\naction$.pipe(filter(isActionOf(messageSend)), \n// this mergeMap is like withLatestFrom, but waits until matrix$ emits its only value\nmergeMap(action => matrix$.pipe(map(matrix => ({ action, matrix })))), \n// concatMap is used to prevent bursts of messages for a given address (eg. on startup)\n// of creating multiple rooms for same address\nconcatMap(({ action, matrix }) => \n// presencesStateReplay$+take(1) acts like withLatestFrom with cached result\npresencesStateReplay$.pipe(\n// wait for user to be monitored\nfilter(([presences]) => action.meta.address in presences), take(1), \n// if there's already a room state for address and it's present in matrix, skip\nfilter(([, state]) => !get(state, ['transport', 'matrix', 'rooms', action.meta.address, 0])), \n// else, create a room, invite known user and dispatch the respective MatrixRoomAction\n// to store it in state\nmergeMap(([presences]) => matrix.createRoom({\n    visibility: 'private',\n    invite: [presences[action.meta.address].payload.userId],\n})), map(({ room_id: roomId }) => matrixRoom({ roomId }, action.meta)))))));\n/**\n * Invites users coming online to rooms we may have with them\n *\n * @param action$ - Observable of matrixPresenceUpdate actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Empty observable (whole side-effect on matrix instance)\n */\nexport const matrixInviteEpic = (action$, state$, { matrix$ }) => action$.pipe(filter(isActionOf(matrixPresenceUpdate)), filter(action => action.payload.available), \n// this mergeMap is like withLatestFrom, but waits until matrix$ emits its only value\nmergeMap(action => matrix$.pipe(map(matrix => ({ action, matrix })))), withLatestFrom(state$), mergeMap(([{ action, matrix }, state]) => {\n    const roomId = get(state, [\n        'transport',\n        'matrix',\n        'rooms',\n        action.meta.address,\n        0,\n    ]);\n    if (roomId) {\n        const room = matrix.getRoom(roomId);\n        if (room) {\n            const member = room.getMember(action.payload.userId);\n            if (!member)\n                return from(matrix.invite(roomId, action.payload.userId));\n        }\n    }\n    return EMPTY;\n}), ignoreElements());\n/**\n * Handle invites sent to us and accepts them iff sent by a monitored user\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of matrixRoom actions\n */\nexport const matrixHandleInvitesEpic = (action$, {}, { matrix$ }) => matrix$.pipe(\n// when matrix finishes initialization, register to matrix invite events\nswitchMap(matrix => fromEvent(matrix, 'RoomMember.membership', (event, member) => ({ event, member, matrix }))), filter(\n// filter for invite events to us\n({ member, matrix }) => member.userId === matrix.getUserId() && member.membership === 'invite'), withLatestFrom(getPresences$(action$)), mergeMap(([{ event, member, matrix }, presences]) => {\n    const sender = event.getSender(), cachedPresence = find(presences, p => p.payload.userId === sender), senderPresence$ = cachedPresence\n        ? of(cachedPresence)\n        : action$.pipe(\n        // as these membership events can come up quite early, we delay continue processing\n        // them a while, to see if the sender is of interest to us (presence monitored)\n        filter(isActionOf(matrixPresenceUpdate)), filter(a => a.payload.userId === sender), take(1), \n        // Don't wait more than some arbitrary time for this sender presence update to show\n        // up; completes without emitting anything otherwise, ending this pipeline.\n        // This also works as a filter to continue processing invites only for monitored\n        // users, as it'll complete without emitting if no MatrixPresenceUpdateAction is\n        // found for sender in time\n        takeUntil(timer(30e3)));\n    return senderPresence$.pipe(map(senderPresence => ({ matrix, member, senderPresence })));\n}), mergeMap(({ matrix, member, senderPresence }) => \n// join room and emit MatrixRoomAction to make it default/first option for sender address\nfrom(matrix.joinRoom(member.roomId, { syncRoom: true })).pipe(map(() => matrixRoom({ roomId: member.roomId }, { address: senderPresence.meta.address })))));\n/**\n * Leave any excess room for a partner when creating or joining a new one.\n * Excess rooms are LRU beyond a given threshold (configurable, default=3) in address's rooms\n * queue and are checked (only) when a new one is added to it.\n *\n * @param action$ - Observable of matrixRoom actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of matrixRoomLeave actions\n */\nexport const matrixLeaveExcessRoomsEpic = (action$, state$, { matrix$, config$ }) => action$.pipe(\n// act whenever a new room is added to the address queue in state\nfilter(isActionOf(matrixRoom)), \n// this mergeMap is like withLatestFrom, but waits until matrix$ emits its only value\nmergeMap(action => matrix$.pipe(map(matrix => ({ action, matrix })))), withLatestFrom(state$, config$), mergeMap(([{ action, matrix }, state, { matrixExcessRooms }]) => {\n    const rooms = state.transport.matrix.rooms[action.meta.address];\n    return from(rooms.filter(({}, i) => i >= matrixExcessRooms)).pipe(mergeMap(roomId => matrix.leave(roomId).then(() => roomId)), map(roomId => matrixRoomLeave({ roomId }, action.meta)));\n}));\n/**\n * Leave any room which is neither global nor known as a room for some user of interest\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Empty observable (whole side-effect on matrix instance)\n */\nexport const matrixLeaveUnknownRoomsEpic = ({}, state$, { matrix$, config$ }) => matrix$.pipe(\n// when matrix finishes initialization, register to matrix Room events\nswitchMap(matrix => fromEvent(matrix, 'Room').pipe(map(room => ({ matrix, roomId: room.roomId })))), delay(30e3), // this room may become known later for some reason, so wait a little\nwithLatestFrom(state$, config$), \n// filter for leave events to us\nfilter(([{ matrix, roomId }, state, config]) => {\n    const room = matrix.getRoom(roomId);\n    if (!room)\n        return false; // room already gone while waiting\n    const globalRooms = globalRoomNames(config);\n    if (room.name && globalRooms.some(g => room.name.match(`#${g}:`)))\n        return false;\n    const rooms = get(state, ['transport', 'matrix', 'rooms'], {});\n    for (const address in rooms) {\n        for (const roomId of rooms[address]) {\n            if (roomId === room.roomId)\n                return false;\n        }\n    }\n    return true;\n}), mergeMap(([{ matrix, roomId }]) => matrix.leave(roomId)), ignoreElements());\n/**\n * If we leave a room for any reason (eg. a kick event), purge it from state\n * Notice excess rooms left by matrixLeaveExcessRoomsEpic are cleaned before the matrix event is\n * detected, and then no MatrixRoomLeaveAction is emitted for them by this epic.\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of matrixRoomLeave actions\n */\nexport const matrixCleanLeftRoomsEpic = ({}, state$, { matrix$ }) => matrix$.pipe(\n// when matrix finishes initialization, register to matrix invite events\nswitchMap(matrix => fromEvent(matrix, 'Room.myMembership', (room, membership) => ({ room, membership, matrix }))), \n// filter for leave events to us\nfilter(({ membership }) => membership === 'leave'), withLatestFrom(state$), mergeMap(function* ([{ room }, state]) {\n    const rooms = get(state, ['transport', 'matrix', 'rooms'], {});\n    for (const address in rooms) {\n        for (const roomId of rooms[address]) {\n            if (roomId === room.roomId) {\n                yield matrixRoomLeave({ roomId }, { address: address });\n            }\n        }\n    }\n}));\n/**\n * Handles a [[messageSend]] action and send its message to the first room on queue for address\n *\n * @param action$ - Observable of messageSend actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of messageSent actions\n */\nexport const matrixMessageSendEpic = (action$, state$, { matrix$ }) => combineLatest(getPresences$(action$), state$).pipe(\n// multicasting combined presences+state with a ReplaySubject makes it act as withLatestFrom\n// but working inside concatMap, called only at outer emit and subscription delayed\npublishReplay(1, undefined, presencesStateReplay$ => \n// actual output observable, gets/wait for the user to be in a room, and then sendMessage\naction$.pipe(filter(isActionOf(messageSend)), \n// this mergeMap is like withLatestFrom, but waits until matrix$ emits its only value\nmergeMap(action => matrix$.pipe(map(matrix => ({ action, matrix })))), groupBy(({ action }) => action.meta.address), \n// merge all inner/grouped observables, so different user's \"queues\" can be parallel\nmergeMap(grouped$ => \n// per-user \"queue\"\ngrouped$.pipe(\n// each per-user \"queue\" (observable) are processed serially (because concatMap)\n// TODO: batch all pending messages in a single send message request, with retry\nconcatMap(({ action, matrix }) => presencesStateReplay$.pipe(\n// wait for address to be monitored, online and roomId to be in state.\n// ReplaySubject ensures it happens immediatelly if all conditions are satisfied\nfilter(([presences, state]) => action.meta.address in presences &&\n    presences[action.meta.address].payload.available &&\n    get(state, ['transport', 'matrix', 'rooms', action.meta.address, 0])), map(([, state]) => state.transport.matrix.rooms[action.meta.address][0]), distinctUntilChanged(), \n// get/wait room object for roomId\n// may wait for the room state to be populated (happens after createRoom resolves)\nswitchMap(roomId => getRoom$(matrix, roomId)), \n// get up-to-date/last presences at this point in time, which may have been updated\nwithLatestFrom(presencesStateReplay$), \n// get room member for partner userId\nmergeMap(([room, [presences]]) => {\n    // get latest known userId for address at this point in time\n    const userId = presences[action.meta.address].payload.userId;\n    const member = room.getMember(userId);\n    // if it's already present in room, return its membership\n    if (member && member.membership === 'join')\n        return of(member);\n    // else, wait for the user to join our newly created room\n    return fromEvent(matrix, 'RoomMember.membership', ({}, member) => member).pipe(\n    // use up-to-date presences again, which may have been updated while\n    // waiting for member join event (e.g. user roamed and was re-invited)\n    withLatestFrom(presencesStateReplay$), filter(([member, [presences]]) => member.roomId === room.roomId &&\n        member.userId === presences[action.meta.address].payload.userId &&\n        member.membership === 'join'), take(1), map(([member]) => member));\n}), take(1), // use first room/user which meets all requirements/filters so far\n// send message!\nmergeMap(member => {\n    const body = typeof action.payload.message === 'string'\n        ? action.payload.message\n        : encodeJsonMessage(action.payload.message);\n    return matrix.sendEvent(member.roomId, 'm.room.message', { body, msgtype: 'm.text' }, '');\n}), map(() => messageSent(action.payload, action.meta)))))))));\n/**\n * Handles a [[messageGlobalSend]] action and send one-shot message to a global room\n *\n * @param action$ - Observable of messageSend actions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Empty observable (whole side-effect on matrix instance)\n */\nexport const matrixMessageGlobalSendEpic = (action$, state$, { matrix$, config$ }) => \n// actual output observable, gets/wait for the user to be in a room, and then sendMessage\naction$.pipe(filter(isActionOf(messageGlobalSend)), \n// this mergeMap is like withLatestFrom, but waits until matrix$ emits its only value\nmergeMap(action => matrix$.pipe(map(matrix => ({ action, matrix })))), withLatestFrom(state$, config$), mergeMap(([{ action, matrix }, state, config]) => {\n    const globalRooms = globalRoomNames(config);\n    if (!globalRooms.includes(action.meta.roomName)) {\n        console.warn('messageGlobalSend for unknown global room, ignoring', action.meta.roomName, globalRooms);\n        return EMPTY;\n    }\n    const serverName = getServerName(state.transport.matrix.server), roomAlias = `#${action.meta.roomName}:${serverName}`;\n    return getRoom$(matrix, roomAlias).pipe(\n    // send message!\n    mergeMap(room => {\n        const body = typeof action.payload.message === 'string'\n            ? action.payload.message\n            : encodeJsonMessage(action.payload.message);\n        return matrix.sendEvent(room.roomId, 'm.room.message', { body, msgtype: 'm.text' }, '');\n    }));\n}), ignoreElements());\n/**\n * Subscribe to matrix messages and emits MessageReceivedAction upon receiving a valid message from\n * an user of interest (one valid signature from an address we monitor) in a room we have for them\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param matrix$ - RaidenEpicDeps members\n * @returns Observable of messageReceived actions\n */\nexport const matrixMessageReceivedEpic = (action$, state$, { matrix$, config$ }) => combineLatest(getPresences$(action$), state$).pipe(\n// multicasting combined presences+state with a ReplaySubject makes it act as withLatestFrom\n// but working inside concatMap, called only at outer emit and subscription delayed\npublishReplay(1, undefined, presencesStateReplay$ => \n// actual output observable, gets/wait for the user to be in a room, and then sendMessage\nmatrix$.pipe(\n// when matrix finishes initialization, register to matrix timeline events\nswitchMap(matrix => fromEvent(matrix, 'Room.timeline', (event, room) => ({ matrix, event, room }))), withLatestFrom(config$), \n// filter for text messages not from us and not from global rooms\nfilter(([{ matrix, event, room }, config]) => event.getType() === 'm.room.message' &&\n    event.event.content.msgtype === 'm.text' &&\n    event.getSender() !== matrix.getUserId() &&\n    !globalRoomNames(config).some(g => \n    // generate an alias for global room of given name, and check if room matches\n    roomMatch(`#${g}:${getServerName(matrix.getHomeserverUrl())}`, room))), mergeMap(([{ event, room }]) => presencesStateReplay$.pipe(filter(([presences, state]) => {\n    const presence = find(presences, ['payload.userId', event.getSender()]);\n    if (!presence)\n        return false;\n    const rooms = get(state, ['transport', 'matrix', 'rooms', presence.meta.address], []);\n    if (!rooms.includes(room.roomId))\n        return false;\n    return true;\n}), take(1), \n// take up to an arbitrary timeout to presence status for the sender\n// AND the room in which this message was sent to be in sender's address room queue\ntakeUntil(timer(30e3)), mergeMap(function* ([presences]) {\n    const presence = find(presences, ['payload.userId', event.getSender()]);\n    for (const line of (event.event.content.body || '').split('\\n')) {\n        let message;\n        try {\n            message = decodeJsonMessage(line);\n            const signer = getMessageSigner(message);\n            if (signer !== presence.meta.address)\n                throw new Error(`Signature mismatch: sender=${presence.meta.address} != signer=${signer}`);\n        }\n        catch (err) {\n            console.warn(`Could not decode message: ${line}: ${err}`);\n            message = undefined;\n        }\n        yield messageReceived({\n            text: line,\n            message,\n            ts: event.event.origin_server_ts,\n            userId: presence.payload.userId,\n            roomId: room.roomId,\n        }, presence.meta);\n    }\n}))))));\n/**\n * If matrix received a message from user in a room we have with them, but not the first on queue,\n * update queue so this room goes to the front and will be used as send message room from now on\n *\n * @param action$ - Observable of messageReceived actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of matrixRoom actions\n */\nexport const matrixMessageReceivedUpdateRoomEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), filter(([action, state]) => {\n    const rooms = get(state, ['transport', 'matrix', 'rooms', action.meta.address], []);\n    return (!!action.payload.roomId &&\n        rooms.includes(action.payload.roomId) &&\n        rooms[0] !== action.payload.roomId);\n}), map(([action]) => matrixRoom({ roomId: action.payload.roomId }, action.meta)));\n/**\n * Channel monitoring triggers matrix presence monitoring for partner\n *\n * @param action$ - Observable of RaidenActions\n * @returns Observable of matrixRequestMonitorPresence actions\n */\nexport const matrixMonitorChannelPresenceEpic = (action$) => action$.pipe(filter(isActionOf(channelMonitored)), map(action => matrixRequestMonitorPresence(undefined, { address: action.meta.partner })));\n/**\n * Sends Delivered for specific messages\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param signer - RaidenEpicDeps members\n * @returns Observable of messageSend actions\n */\nexport const deliveredEpic = (action$, {}, { signer }) => {\n    const cache = new LruCache(32);\n    return action$.pipe(filter(isActionOf(messageReceived)), concatMap(action => {\n        const message = action.payload.message;\n        if (!message ||\n            !(Signed(Processed).is(message) ||\n                Signed(SecretRequest).is(message) ||\n                Signed(SecretReveal).is(message)))\n            return EMPTY;\n        const msgId = message.message_identifier, key = msgId.toString();\n        const cached = cache.get(key);\n        if (cached)\n            return of(messageSend({ message: cached }, action.meta));\n        const delivered = {\n            type: MessageType.DELIVERED,\n            delivered_message_identifier: msgId,\n        };\n        return from(signMessage(signer, delivered)).pipe(tap(signed => cache.put(key, signed)), map(signed => messageSend({ message: signed }, action.meta)));\n    }));\n};\n//# sourceMappingURL=epics.js.map","/* eslint-disable @typescript-eslint/camelcase */\nimport { combineLatest, EMPTY, from, merge, of } from 'rxjs';\nimport { catchError, concatMap, delay, exhaustMap, filter, first, ignoreElements, map, mergeMap, publishReplay, repeatWhen, take, takeUntil, tap, withLatestFrom, } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { bigNumberify } from 'ethers/utils';\nimport { Zero, One } from 'ethers/constants';\nimport { findKey, get } from 'lodash';\nimport { LruCache } from '../utils/lru';\nimport { messageReceived, messageSend, messageSent } from '../messages/actions';\nimport { LockedTransfer, LockExpired, MessageType, Processed, RefundTransfer, SecretRequest, SecretReveal, Signed, WithdrawExpired, WithdrawRequest, } from '../messages/types';\nimport { getBalanceProofFromEnvelopeMessage, signMessage } from '../messages/utils';\nimport { ChannelState } from '../channels/state';\nimport { channelClose, channelClosed, newBlock } from '../channels/actions';\nimport { matrixRequestMonitorPresence } from '../transport/actions';\nimport { transfer, transferExpire, transferExpired, transferExpireFailed, transferExpireProcessed, transferFailed, transferProcessed, transferred, transferRefunded, transferSecret, transferSecretRequest, transferSecretReveal, transferSigned, transferUnlock, transferUnlocked, transferUnlockProcessed, withdrawReceiveRequest, withdrawSendConfirmation, } from './actions';\nimport { getLocksroot, getSecrethash, makeMessageId, makePaymentId } from './utils';\n/**\n * Return the next nonce for a (possibly missing) balanceProof, or else BigNumber(1)\n *\n * @param balanceProof - Balance proof to increase nonce from\n * @returns Increased nonce, or One if no balance proof provided\n */\nfunction nextNonce(balanceProof) {\n    if (balanceProof)\n        return balanceProof.nonce.add(1);\n    else\n        return One;\n}\n/**\n * Create an observable to compose and sign a LockedTransfer message/transferSigned action\n * As it's an async observable which depends on state and may return an action which changes it,\n * the returned observable must be subscribed in a serialized context that ensures non-concurrent\n * write access to the channel's balance proof (e.g. concatMap)\n *\n * @param state$ - Observable of current state\n * @param action - transfer request action to be sent\n * @param network,address,signer - RaidenEpicDeps members\n * @returns Observable of transferSigned|transferSecret|transferFailed actions\n */\nfunction makeAndSignTransfer(state$, action, { network, address, signer, config$ }) {\n    return combineLatest(state$, config$).pipe(first(), mergeMap(([state, { revealTimeout }]) => {\n        if (action.meta.secrethash in state.sent) {\n            // don't throw to avoid emitting transferFailed, to just wait for already pending transfer\n            console.error('transfer already present', action.meta);\n            return EMPTY;\n        }\n        // assume metadata is valid and recipient is first hop of first route\n        const metadata = action.payload.metadata, recipient = metadata.routes[0].route[0];\n        const channel = state.channels[action.payload.tokenNetwork][recipient];\n        // check below shouldn't fail because of route validation in pathFindServiceEpic\n        // used here mostly for type narrowing on channel union\n        if (!channel || channel.state !== ChannelState.open)\n            throw new Error('not open');\n        const paymentId = action.payload.paymentId || makePaymentId(), lock = {\n            amount: action.payload.amount,\n            expiration: bigNumberify(state.blockNumber + revealTimeout * 2),\n            secrethash: action.meta.secrethash,\n        }, locks = [...(channel.own.locks || []), lock], locksroot = getLocksroot(locks), fee = action.payload.fee || Zero, token = findKey(state.tokens, tn => tn === action.payload.tokenNetwork);\n        const message = {\n            type: MessageType.LOCKED_TRANSFER,\n            message_identifier: makeMessageId(),\n            chain_id: bigNumberify(network.chainId),\n            token_network_address: action.payload.tokenNetwork,\n            channel_identifier: bigNumberify(channel.id),\n            nonce: nextNonce(channel.own.balanceProof),\n            transferred_amount: (channel.own.balanceProof\n                ? channel.own.balanceProof.transferredAmount\n                : Zero),\n            locked_amount: (channel.own.balanceProof\n                ? channel.own.balanceProof.lockedAmount\n                : Zero).add(action.payload.amount),\n            locksroot,\n            payment_identifier: paymentId,\n            token,\n            recipient,\n            lock,\n            target: action.payload.target,\n            initiator: address,\n            fee,\n            metadata,\n        };\n        return from(signMessage(signer, message)).pipe(mergeMap(function* (signed) {\n            // besides transferSigned, also yield transferSecret (for registering) if we know it\n            if (action.payload.secret)\n                yield transferSecret({ secret: action.payload.secret }, action.meta);\n            yield transferSigned({ message: signed }, action.meta);\n            // messageSend LockedTransfer handled by transferSignedRetryMessageEpic\n        }));\n    }), catchError(err => of(transferFailed(err, action.meta))));\n}\n/**\n * Create an observable to compose and sign a Unlock message/transferUnlocked action\n * As it's an async observable which depends on state and may return an action which changes it,\n * the returned observable must be subscribed in a serialized context that ensures non-concurrent\n * write access to the channel's balance proof (e.g. concatMap)\n *\n * @param state$ - Observable of current state\n * @param action - transferUnlock request action to be sent\n * @param signer - RaidenEpicDeps members\n * @returns Observable of transferUnlocked actions\n */\nfunction makeAndSignUnlock(state$, action, { signer }) {\n    return state$.pipe(first(), mergeMap(state => {\n        const secrethash = action.meta.secrethash;\n        if (!(secrethash in state.sent))\n            throw new Error('unknown transfer');\n        const transfer = state.sent[secrethash].transfer[1], channel = get(state.channels, [\n            transfer.token_network_address,\n            transfer.recipient,\n        ]);\n        // shouldn't happen, channel close clears transfers, but unlock may already have been queued\n        if (!channel || channel.state !== ChannelState.open || !channel.own.balanceProof)\n            throw new Error('channel gone, not open or no balanceProof');\n        let signed$;\n        if (state.sent[secrethash].unlock) {\n            // unlock already signed, use cached\n            signed$ = of(state.sent[secrethash].unlock[1]);\n        }\n        else {\n            // don't forget to check after signature too, may have expired by then\n            if (transfer.lock.expiration.lte(state.blockNumber))\n                throw new Error('lock expired');\n            const locks = (channel.own.locks || []).filter(l => l.secrethash !== secrethash), locksroot = getLocksroot(locks);\n            const message = {\n                type: MessageType.UNLOCK,\n                message_identifier: makeMessageId(),\n                chain_id: transfer.chain_id,\n                token_network_address: transfer.token_network_address,\n                channel_identifier: transfer.channel_identifier,\n                nonce: nextNonce(channel.own.balanceProof),\n                transferred_amount: channel.own.balanceProof.transferredAmount.add(transfer.lock.amount),\n                locked_amount: channel.own.balanceProof.lockedAmount.sub(transfer.lock.amount),\n                locksroot,\n                payment_identifier: transfer.payment_identifier,\n                secret: state.secrets[action.meta.secrethash].secret,\n            };\n            signed$ = from(signMessage(signer, message));\n        }\n        return signed$.pipe(withLatestFrom(state$), mergeMap(function* ([signed, state]) {\n            if (transfer.lock.expiration.lte(state.blockNumber))\n                throw new Error('lock expired!');\n            if (state.sent[secrethash].channelClosed)\n                throw new Error('channel closed!');\n            yield transferUnlocked({ message: signed }, action.meta);\n            // messageSend Unlock handled by transferUnlockedRetryMessageEpic\n            // we don't check if transfer was refunded. If partner refunded the transfer but still\n            // forwarded the payment, we still act honestly and unlock if they revealed\n        }));\n    }), catchError(err => {\n        console.error('Error when trying to unlock after SecretReveal', err);\n        return EMPTY;\n    }));\n}\n/**\n * Create an observable to compose and sign a LockExpired message/transferExpired action\n * As it's an async observable which depends on state and may return an action which changes it,\n * the returned observable must be subscribed in a serialized context that ensures non-concurrent\n * write access to the channel's balance proof (e.g. concatMap)\n *\n * @param state$ - Observable of current state\n * @param action - transfer request action to be sent\n * @param signer - RaidenEpicDeps members\n * @returns Observable of transferExpired|transferExpireFailed actions\n */\nfunction makeAndSignLockExpired(state$, action, { signer }) {\n    return state$.pipe(first(), mergeMap(state => {\n        const secrethash = action.meta.secrethash;\n        if (!(secrethash in state.sent))\n            throw new Error('unknown transfer');\n        const transfer = state.sent[secrethash].transfer[1], channel = get(state.channels, [\n            transfer.token_network_address,\n            transfer.recipient,\n        ]);\n        if (!channel || channel.state !== ChannelState.open || !channel.own.balanceProof)\n            throw new Error('channel gone, not open or no balanceProof');\n        let signed$;\n        if (state.sent[secrethash].lockExpired) {\n            // lockExpired already signed, use cached\n            signed$ = of(state.sent[secrethash].lockExpired[1]);\n        }\n        else {\n            if (transfer.lock.expiration.gte(state.blockNumber))\n                throw new Error('lock not yet expired');\n            else if (state.sent[secrethash].unlock)\n                throw new Error('transfer already unlocked');\n            const locks = (channel.own.locks || []).filter(l => l.secrethash !== secrethash), locksroot = getLocksroot(locks);\n            const message = {\n                type: MessageType.LOCK_EXPIRED,\n                message_identifier: makeMessageId(),\n                chain_id: transfer.chain_id,\n                token_network_address: transfer.token_network_address,\n                channel_identifier: transfer.channel_identifier,\n                nonce: nextNonce(channel.own.balanceProof),\n                transferred_amount: channel.own.balanceProof.transferredAmount,\n                locked_amount: channel.own.balanceProof.lockedAmount.sub(transfer.lock.amount),\n                locksroot,\n                recipient: transfer.recipient,\n                secrethash,\n            };\n            signed$ = from(signMessage(signer, message));\n        }\n        return signed$.pipe(\n        // messageSend LockExpired handled by transferExpiredRetryMessageEpic\n        map(signed => transferExpired({ message: signed }, action.meta)));\n    }), catchError(err => of(transferExpireFailed(err, action.meta))));\n}\n/**\n * Create an observable to compose and sign a [[WithdrawConfirmation]] message\n *\n * Validate we're inside expiration timeout, channel exists and is open, and that total_withdraw is\n * less than or equal withdrawable amount (while we don't receive, partner.deposit +\n * own.transferredAmount).\n * We need it inside [[transferGenerateAndSignEnvelopeMessageEpic]] concatMap/lock because we read\n * and change the 'nonce', even though WithdrawConfirmation doesn't carry a full balanceProof.\n * Also, instead of storing the messages in state and retrying, we just cache it and send cached\n * signed message on each received request.\n *\n * TODO: once we're able to receive transfers, instead of considering only own.transferredAmount,\n * we must also listen to ChannelWithdraw events, store it alongside pending withdraw requests and\n * take that into account before accepting a transfer and also total balance/capacity for accepting\n * a total_withdraw from a WithdrawRequest.\n *\n * @param state$ - Observable of current state\n * @param action - Withdraw request which caused this handling\n * @param signer - RaidenEpicDeps members\n * @param cache - A Map to store and reuse previously Signed<WithdrawConfirmation>\n * @returns Observable of transferExpired|transferExpireFailed actions\n */\nfunction makeAndSignWithdrawConfirmation(state$, action, { signer }, cache) {\n    return state$.pipe(first(), mergeMap(state => {\n        const request = action.payload.message;\n        const channel = get(state.channels, [\n            action.meta.tokenNetwork,\n            action.meta.partner,\n        ]);\n        // check channel is in valid state and requested total_withdraw is valid\n        // withdrawable amount is: total_withdraw <= partner.deposit + own.transferredAmount\n        if (!channel ||\n            channel.state !== ChannelState.open ||\n            !request.channel_identifier.eq(channel.id))\n            throw new Error('channel gone or not open');\n        else if (request.expiration.lte(state.blockNumber))\n            throw new Error('WithdrawRequest expired');\n        else if (request.total_withdraw.gt(channel.partner.deposit.add(channel.own.balanceProof ? channel.own.balanceProof.transferredAmount : Zero)))\n            throw new Error('invalid total_withdraw, greater than partner.deposit + own.transferredAmount');\n        let signed$;\n        const key = request.message_identifier.toString();\n        const cached = cache.get(key);\n        // ensure all parameters are equal the cached one before returning it, or else sign again\n        if (cached &&\n            cached.chain_id.eq(request.chain_id) &&\n            cached.token_network_address === request.token_network_address &&\n            cached.channel_identifier.eq(request.channel_identifier) &&\n            cached.participant === request.participant &&\n            cached.total_withdraw.eq(request.total_withdraw) &&\n            cached.expiration.eq(request.expiration)) {\n            signed$ = of(cached);\n        }\n        else {\n            const confirmation = {\n                type: MessageType.WITHDRAW_CONFIRMATION,\n                message_identifier: request.message_identifier,\n                chain_id: request.chain_id,\n                token_network_address: request.token_network_address,\n                channel_identifier: request.channel_identifier,\n                participant: request.participant,\n                total_withdraw: request.total_withdraw,\n                nonce: nextNonce(channel.own.balanceProof),\n                expiration: request.expiration,\n            };\n            signed$ = from(signMessage(signer, confirmation)).pipe(tap(signed => cache.put(key, signed)));\n        }\n        return signed$.pipe(map(signed => withdrawSendConfirmation({ message: signed }, action.meta)));\n    }), catchError(err => {\n        console.error('Error trying to handle WithdrawRequest, ignoring:', err);\n        return EMPTY;\n    }));\n}\n/**\n * Serialize creation and signing of BalanceProof-changing messages or actions\n * Actions which change any data in any channel balance proof must only ever be created reading\n * state inside the serialization flow provided by the concatMap, and also be composed and produced\n * inside it (inner, subscribed observable)\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @param deps - RaidenEpicDeps\n * @returns Observable of output actions for this epic\n */\nexport const transferGenerateAndSignEnvelopeMessageEpic = (action$, state$, deps) => state$.pipe(publishReplay(1, undefined, state$ => {\n    const withdrawCache = new LruCache(32);\n    return action$.pipe(filter(isActionOf([transfer, transferUnlock, transferExpire, withdrawReceiveRequest])), concatMap(action => isActionOf(transfer, action)\n        ? makeAndSignTransfer(state$, action, deps)\n        : isActionOf(transferUnlock, action)\n            ? makeAndSignUnlock(state$, action, deps)\n            : isActionOf(transferExpire, action)\n                ? makeAndSignLockExpired(state$, action, deps)\n                : makeAndSignWithdrawConfirmation(state$, action, deps, withdrawCache)));\n}));\n/**\n * Handles a transferSigned action and retry messageSend until transfer is gone (completed with\n * success or error) OR Processed message for LockedTransfer received.\n * transferSigned for pending LockedTransfer's may be re-emitted on startup for pending transfer,\n * to start retrying sending the message again until stop condition is met.\n *\n * @param action$ - Observable of transferSigned actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of messageSend actions\n */\nexport const transferSignedRetryMessageEpic = (action$, state$) => state$.pipe(publishReplay(1, undefined, state$ => action$.pipe(filter(isActionOf(transferSigned)), mergeMap(action => {\n    const secrethash = action.meta.secrethash, signed = action.payload.message, send = messageSend({ message: signed }, { address: signed.recipient });\n    // emit Send once immediatelly, then wait until respective messageSent, then completes\n    const sendOnceAndWaitSent$ = merge(of(send), action$.pipe(filter(a => isActionOf(messageSent, a) &&\n        a.payload.message === send.payload.message &&\n        a.meta.address === send.meta.address), take(1), \n    // don't output messageSent, just wait for it before completing\n    ignoreElements()));\n    return sendOnceAndWaitSent$.pipe(\n    // Resubscribe/retry every 30s after messageSend succeeds with messageSent\n    // Notice first (or any) messageSend can wait for a long time before succeeding, as it\n    // waits for address's user in transport to be online and joined room before actually\n    // sending the message. That's why repeatWhen emits/resubscribe only some time after\n    // sendOnceAndWaitSent$ completes, instead of a plain 'interval'\n    // TODO: configurable retry delay, possibly use an exponential backoff timeout strat\n    repeatWhen(completed$ => completed$.pipe(delay(30e3))), \n    // until transferProcessed received OR transfer completed OR channelClosed\n    takeUntil(state$.pipe(filter(state => !!state.sent[secrethash].transferProcessed ||\n        !!state.sent[secrethash].unlockProcessed ||\n        !!state.sent[secrethash].lockExpiredProcessed ||\n        !!state.sent[secrethash].channelClosed))));\n}))));\n/**\n * Handles a transferUnlocked action and retry messageSend until transfer is gone (completed with\n * success or error).\n * transferUnlocked for pending Unlock's may be re-emitted on startup for pending transfer, to\n * start retrying sending the message again until stop condition is met.\n *\n * @param action$ - Observable of transferUnlocked actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of messageSend actions\n */\nexport const transferUnlockedRetryMessageEpic = (action$, state$) => state$.pipe(publishReplay(1, undefined, state$ => action$.pipe(filter(isActionOf(transferUnlocked)), withLatestFrom(state$), mergeMap(([action, state]) => {\n    const secrethash = action.meta.secrethash;\n    if (!(secrethash in state.sent))\n        return EMPTY; // shouldn't happen\n    const unlock = action.payload.message, transfer = state.sent[secrethash].transfer[1], send = messageSend({ message: unlock }, { address: transfer.recipient });\n    // emit Send once immediatelly, then wait until respective messageSent, then completes\n    const sendOnceAndWaitSent$ = merge(of(send), action$.pipe(filter(a => isActionOf(messageSent, a) &&\n        a.payload.message === send.payload.message &&\n        a.meta.address === send.meta.address), take(1), \n    // don't output messageSent, just wait for it before completing\n    ignoreElements()));\n    return sendOnceAndWaitSent$.pipe(\n    // Resubscribe/retry every 30s after messageSend succeeds with messageSent\n    // Notice first (or any) messageSend can wait for a long time before succeeding, as it\n    // waits for address's user in transport to be online and joined room before actually\n    // sending the message. That's why repeatWhen emits/resubscribe only some time after\n    // sendOnceAndWaitSent$ completes, instead of a plain 'interval'\n    // TODO: configurable retry delay, possibly use an exponential backoff timeout strat\n    repeatWhen(completed$ => completed$.pipe(delay(30e3))), \n    // until transferUnlockProcessed OR channelClosed\n    takeUntil(state$.pipe(filter(state => !!state.sent[secrethash].unlockProcessed ||\n        !!state.sent[secrethash].channelClosed))));\n}))));\n/**\n * Handles a transferExpired action and retry messageSend until transfer is gone (completed with\n * success or error).\n * transferExpired for pending LockExpired's may be re-emitted on startup for pending transfer, to\n * start retrying sending the message again until stop condition is met.\n *\n * @param action$ - Observable of transferExpired actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of messageSend actions\n */\nexport const transferExpiredRetryMessageEpic = (action$, state$) => state$.pipe(publishReplay(1, undefined, state$ => action$.pipe(filter(isActionOf(transferExpired)), withLatestFrom(state$), mergeMap(([action, state]) => {\n    const secrethash = action.meta.secrethash;\n    if (!(secrethash in state.sent))\n        return EMPTY; // shouldn't happen\n    const lockExpired = action.payload.message, send = messageSend({ message: lockExpired }, { address: state.sent[secrethash].transfer[1].recipient });\n    // emit Send once immediatelly, then wait until respective messageSent, then completes\n    const sendOnceAndWaitSent$ = merge(of(send), action$.pipe(filter(a => isActionOf(messageSent, a) &&\n        a.payload.message === send.payload.message &&\n        a.meta.address === send.meta.address), take(1), \n    // don't output messageSent, just wait for it before completing\n    ignoreElements()));\n    return sendOnceAndWaitSent$.pipe(\n    // Resubscribe/retry every 30s after messageSend succeeds with messageSent\n    // Notice first (or any) messageSend can wait for a long time before succeeding, as it\n    // waits for address's user in transport to be online and joined room before actually\n    // sending the message. That's why repeatWhen emits/resubscribe only some time after\n    // sendOnceAndWaitSent$ completes, instead of a plain 'interval'\n    // TODO: configurable retry delay, possibly use an exponential backoff timeout strat\n    repeatWhen(completed$ => completed$.pipe(delay(30e3))), \n    // until transferExpireProcessed OR channelClosed\n    takeUntil(state$.pipe(filter(state => !!state.sent[secrethash].lockExpiredProcessed ||\n        !!state.sent[secrethash].channelClosed))));\n}))));\n/**\n * Process newBlocks, emits transferExpire (request to compose&sign LockExpired for a transfer)\n * if pending transfer's lock expired and transfer didn't unlock (succeed) in time\n * Also, emits transferFailed, to notify users that a transfer has failed (although it'll only be\n * considered as completed with fail once the transferExpireProcessed arrives).\n *\n * @param action$ - Observable of newBlock|transferExpired|transferExpireFailed actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of transferExpire|transferFailed actions\n */\nexport const transferAutoExpireEpic = (action$, state$) => action$.pipe(filter(isActionOf(newBlock)), withLatestFrom(state$), \n// exhaustMap ignores new blocks while previous request batch is still pending\nexhaustMap(([{ payload: { blockNumber } }, state]) => {\n    const requests$ = [];\n    for (const [key, sent] of Object.entries(state.sent)) {\n        if (sent.unlock ||\n            sent.lockExpired ||\n            sent.channelClosed ||\n            sent.transfer[1].lock.expiration.gte(blockNumber))\n            continue;\n        const secrethash = key;\n        // this observable acts like a Promise: emits request once, completes on success/failure\n        const requestAndWait$ = merge(\n        // output once tranferExpire\n        of(transferExpire(undefined, { secrethash })), \n        // but wait until respective success/failure action is seen before completing\n        action$.pipe(filter(a => isActionOf([transferExpired, transferExpireFailed], a) &&\n            a.meta.secrethash === secrethash), take(1), \n        // don't output success/failure action, just wait for first match to complete\n        ignoreElements()));\n        requests$.push(requestAndWait$);\n        // notify users that this transfer failed definitely\n        requests$.push(of(transferFailed(new Error(`transfer expired at block=${sent.transfer[1].lock.expiration.toString()}`), { secrethash })));\n    }\n    // process all requests before completing and restart handling newBlocks (in exhaustMap)\n    return merge(...requests$);\n}));\n/**\n * Re-queue pending transfer's BalanceProof/Envelope messages for retry on init\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of transferSigned|transferUnlocked actions\n */\nexport const initQueuePendingEnvelopeMessagesEpic = ({}, state$) => state$.pipe(first(), mergeMap(function* (state) {\n    // loop over all pending transfers\n    for (const [key, sent] of Object.entries(state.sent)) {\n        const secrethash = key;\n        // transfer already completed or channelClosed\n        if (sent.unlockProcessed || sent.lockExpiredProcessed || sent.channelClosed)\n            continue;\n        // on init, request monitor presence of any pending transfer target\n        yield matrixRequestMonitorPresence(undefined, { address: sent.transfer[1].target });\n        // Processed not received yet for LockedTransfer\n        if (!sent.transferProcessed)\n            yield transferSigned({ message: sent.transfer[1] }, { secrethash });\n        // already unlocked, but Processed not received yet for Unlock\n        if (sent.unlock)\n            yield transferUnlocked({ message: sent.unlock[1] }, { secrethash });\n        // lock expired, but Processed not received yet for LockExpired\n        if (sent.lockExpired)\n            yield transferExpired({ message: sent.lockExpired[1] }, { secrethash });\n    }\n}));\n/**\n * Handles receiving a signed Processed for some sent LockedTransfer\n * This will persist the Processed reply in transfer state and stop message retry\n *\n * @param action$ - Observable of messageReceived actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of transferProcessed actions\n */\nexport const transferProcessedReceivedEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    const message = action.payload.message;\n    if (!message || !Signed(Processed).is(message))\n        return;\n    let secrethash = undefined;\n    for (const [key, sent] of Object.entries(state.sent)) {\n        if (sent.transfer[1].message_identifier.eq(message.message_identifier) &&\n            sent.transfer[1].recipient === action.meta.address) {\n            secrethash = key;\n            break;\n        }\n    }\n    if (!secrethash)\n        return;\n    yield transferProcessed({ message }, { secrethash });\n}));\n/**\n * Handles receiving a signed SecretRequest from target for some sent LockedTransfer\n * Emits a transferSecretRequest action only if all conditions are met\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of output actions for this epic\n */\nexport const transferSecretRequestedEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    const message = action.payload.message;\n    if (!message || !Signed(SecretRequest).is(message))\n        return;\n    // proceed only if we know the secret and the transfer\n    if (!(message.secrethash in state.secrets) || !(message.secrethash in state.sent))\n        return;\n    const transfer = state.sent[message.secrethash].transfer[1];\n    if (transfer.target !== action.meta.address || // reveal only to target\n        !transfer.payment_identifier.eq(message.payment_identifier)) {\n        console.warn('Invalid SecretRequest for transfer', message, transfer);\n    }\n    else if (!message.expiration.lte(transfer.lock.expiration) ||\n        !message.expiration.gt(state.blockNumber)) {\n        console.warn('SecretRequest for expired transfer', message, transfer);\n    }\n    else if (!message.amount.gte(transfer.lock.amount.mul(9).div(10))) {\n        // FIXME: TMP! accept transfers deduced up to 10% what was sent\n        console.warn('SecretRequest for amount too small!', message, transfer);\n    } /* accept request */\n    else {\n        if (!message.amount.eq(transfer.lock.amount))\n            console.warn('Accepted SecretRequest for amount different than sent', message, transfer);\n        yield transferSecretRequest({ message }, { secrethash: message.secrethash });\n    }\n    // we don't check if transfer was refunded. If partner refunded the transfer but still\n    // forwarded the payment, they would be in risk of losing their money, not us\n}));\n/**\n * Handles a transferSecretRequest action to send the respective secret to target\n * It both emits transferSecretReveal (to persist sent SecretReveal in state and indicate that\n * the secret was revealed and thus the transfer should be assumed as succeeded) as well as\n * triggers sending the message once. New SecretRequests will cause a new transferSecretRequest,\n * which will re-send the cached SecretReveal.\n *\n * @param action$ - Observable of transferSecretRequest actions\n * @param state$ - Observable of RaidenStates\n * @param signer - RaidenEpicDeps signer\n * @returns Observable of transferSecretReveal|messageSend actions\n */\nexport const transferSecretRevealEpic = (action$, state$, { signer }) => state$.pipe(publishReplay(1, undefined, state$ => action$.pipe(filter(isActionOf(transferSecretRequest)), concatMap(action => state$.pipe(first(), mergeMap(state => {\n    const target = state.sent[action.meta.secrethash].transfer[1].target;\n    let reveal$;\n    if (state.sent[action.meta.secrethash].secretReveal)\n        reveal$ = of(state.sent[action.meta.secrethash].secretReveal[1]);\n    else {\n        const message = {\n            type: MessageType.SECRET_REVEAL,\n            message_identifier: makeMessageId(),\n            secret: state.secrets[action.meta.secrethash].secret,\n        };\n        reveal$ = from(signMessage(signer, message));\n    }\n    return reveal$.pipe(mergeMap(function* (message) {\n        yield transferSecretReveal({ message }, action.meta);\n        yield messageSend({ message }, { address: target });\n    }));\n}))))));\n/**\n * Handles receiving a valid SecretReveal from recipient (neighbor/partner)\n * This indicates that the partner knowws the secret, and we should Unlock to avoid going on-chain.\n * The transferUnlock action is a request for the unlocking to be generated and sent.\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of output actions for this epic\n */\nexport const transferSecretRevealedEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    const message = action.payload.message;\n    if (!message || !Signed(SecretReveal).is(message))\n        return;\n    const secrethash = getSecrethash(message.secret);\n    if (!(secrethash in state.sent) ||\n        action.meta.address !== state.sent[secrethash].transfer[1].recipient ||\n        // don't unlock if channel closed\n        state.sent[secrethash].channelClosed ||\n        // don't unlock again if already unlocked, retry handled by transferUnlockedRetryMessageEpic\n        // in the future, we may avoid retry until Processed, and [re]send once per SecretReveal\n        state.sent[secrethash].unlock)\n        return;\n    // transferSecret is noop if we already know the secret (e.g. we're the initiator)\n    yield transferSecret({ secret: message.secret }, { secrethash });\n    // request unlock to be composed, signed & sent to partner\n    yield transferUnlock(undefined, { secrethash });\n}));\n/**\n * Handles receiving a signed Processed for some sent Unlock\n * It sends the success action for transfer (which resolves any pending Promise), marking it as\n * completed successfuly by setting sent.unlockProcessed\n *\n * @param action$ - Observable of messageReceived actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of transferred|transferUnlockProcessed actions\n */\nexport const transferUnlockProcessedReceivedEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    const message = action.payload.message;\n    if (!message || !Signed(Processed).is(message))\n        return;\n    let secrethash;\n    for (const [key, sent] of Object.entries(state.sent)) {\n        if (sent.unlock &&\n            sent.unlock[1].message_identifier.eq(message.message_identifier) &&\n            sent.transfer[1].recipient === action.meta.address) {\n            secrethash = key;\n            break;\n        }\n    }\n    if (!secrethash)\n        return;\n    yield transferred({\n        balanceProof: getBalanceProofFromEnvelopeMessage(state.sent[secrethash].unlock[1]),\n    }, { secrethash });\n    yield transferUnlockProcessed({ message }, { secrethash });\n}));\n/**\n * Handles receiving a signed Processed for some sent LockExpired\n * It marks the end of the unhappy case, by setting sent.lockExpiredProcessed\n * transferFailed was already sent at newBlock handling/transferExpire time\n *\n * @param action$ - Observable of RaidenActions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of output actions for this epic\n */\nexport const transferExpireProcessedEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    const message = action.payload.message;\n    if (!message || !Signed(Processed).is(message))\n        return;\n    let secrethash;\n    for (const [key, sent] of Object.entries(state.sent)) {\n        if (sent.lockExpired &&\n            sent.lockExpired[1].message_identifier.eq(message.message_identifier) &&\n            sent.transfer[1].recipient === action.meta.address) {\n            secrethash = key;\n            break;\n        }\n    }\n    if (!secrethash)\n        return;\n    yield transferExpireProcessed({ message }, { secrethash });\n}));\n/**\n * Complete or fail any pending transfer for any closing or closed channels\n * Transfer is considered successful if secret was revealed (as it could be claimed on-chain),\n * else it's considered as failed as couldn't succeed inside expiration timeout\n *\n * @param action$ - Observable of channelClose|channelClosed actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of transferred|transferFailed actions\n */\nexport const transferChannelClosedEpic = (action$, state$) => action$.pipe(filter(isActionOf([channelClose, channelClosed])), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    for (const [key, sent] of Object.entries(state.sent)) {\n        const secrethash = key, transfer = sent.transfer[1];\n        if (transfer.token_network_address !== action.meta.tokenNetwork ||\n            transfer.recipient !== action.meta.partner)\n            continue;\n        // as we can't know for sure if recipient/partner received the secret or unlock,\n        //consider transfer failed iff neither the secret was revealed nor the unlock happened\n        if (!sent.secretReveal && !sent.unlock)\n            yield transferFailed(new Error(`Channel closed before revealing or unlocking`), {\n                secrethash,\n            });\n        else if (state.sent[secrethash].unlock)\n            yield transferred({\n                balanceProof: getBalanceProofFromEnvelopeMessage(state.sent[secrethash].unlock[1]),\n            }, { secrethash });\n        else\n            yield transferred({}, { secrethash });\n    }\n}));\n/**\n * Receiving RefundTransfer for pending transfer fails it\n *\n * @param action$ - Observable of messageReceived actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of transferFailed|transferRefunded actions\n */\nexport const transferRefundedEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    const message = action.payload.message;\n    if (!message || !Signed(RefundTransfer).is(message))\n        return;\n    const secrethash = message.lock.secrethash;\n    if (!(secrethash in state.sent))\n        return;\n    const [, transfer] = state.sent[secrethash].transfer;\n    if (message.initiator !== transfer.recipient ||\n        !message.payment_identifier.eq(transfer.payment_identifier) ||\n        !message.lock.amount.eq(transfer.lock.amount) ||\n        !message.lock.expiration.eq(transfer.lock.expiration) ||\n        state.sent[secrethash].unlock || // already unlocked\n        state.sent[secrethash].lockExpired || // already expired\n        state.sent[secrethash].channelClosed || // channel closed\n        message.lock.expiration.lte(state.blockNumber) // lock expired but transfer didn't yet\n    )\n        return;\n    yield transferRefunded({ message }, { secrethash });\n    yield transferFailed(new Error('transfer refunded'), { secrethash });\n}));\n/**\n * Sends Processed for unhandled nonce'd messages\n *\n * We don't yet support receiving nor mediating transfers (LockedTransfer, RefundTransfer), but\n * also don't want the partner to keep retrying any messages intended for us indefinitely.\n * That's why we decided to just answer them with Processed, to clear their queue. Of course, we\n * still don't validate, store state for these messages nor handle them in any way (e.g. requesting\n * secret from initiator), so any transfer is going to expire, and then we also reply Processed for\n * the respective LockExpired.\n * Additionally, we hook in sending Processed for other messages which contain nonces (and require\n * Processed reply to stop being retried) but are safe to be ignored, like WithdrawExpired.\n *\n * @param action$ - Observable of messageReceived actions\n * @param state$ - Observable of RaidenStates\n * @param signer - RaidenEpicDeps members\n * @returns Observable of messageSend actions\n */\nexport const transferReceivedReplyProcessedEpic = (action$, {}, { signer }) => {\n    const cache = new LruCache(32);\n    return action$.pipe(filter(isActionOf(messageReceived)), concatMap(action => {\n        const message = action.payload.message;\n        if (!message ||\n            !(Signed(LockedTransfer).is(message) ||\n                Signed(RefundTransfer).is(message) ||\n                Signed(LockExpired).is(message) ||\n                Signed(WithdrawExpired).is(message)))\n            return EMPTY;\n        const msgId = message.message_identifier, key = msgId.toString();\n        const cached = cache.get(key);\n        if (cached)\n            return of(messageSend({ message: cached }, action.meta));\n        const processed = {\n            type: MessageType.PROCESSED,\n            message_identifier: msgId,\n        };\n        return from(signMessage(signer, processed)).pipe(tap(signed => cache.put(key, signed)), map(signed => messageSend({ message: signed }, action.meta)));\n    }));\n};\n/**\n * When receiving a [[WithdrawRequest]] message, create the respective [[withdrawReceiveRequest]]\n * action\n *\n * @param action$ - Observable of messageReceived actions\n * @returns Observable of withdrawReceiveRequest actions\n */\nexport const withdrawRequestReceivedEpic = (action$) => action$.pipe(filter(isActionOf(messageReceived)), mergeMap(function* (action) {\n    const message = action.payload.message;\n    if (!message ||\n        !Signed(WithdrawRequest).is(message) ||\n        message.participant !== action.meta.address)\n        return;\n    yield withdrawReceiveRequest({ message }, {\n        tokenNetwork: message.token_network_address,\n        partner: message.participant,\n        totalWithdraw: message.total_withdraw,\n        expiration: message.expiration.toNumber(),\n    });\n}));\n/**\n * sendMessage when a [[withdrawSendConfirmation]] action is fired\n *\n * @param action$ - Observable of withdrawSendConfirmation actions\n * @returns Observable of messageSend actions\n */\nexport const withdrawSendConfirmationEpic = (action$) => action$.pipe(filter(isActionOf(withdrawSendConfirmation)), map(action => messageSend({ message: action.payload.message }, { address: action.meta.partner })));\n//# sourceMappingURL=epics.js.map","import { ChannelState } from '../channels/state';\nimport { channelAmounts } from '../channels/utils';\n/**\n * Either returns true if given channel can route a payment, or a reason as string if not\n *\n * @param state - current RaidenState\n * @param presences - latest Presences mapping\n * @param tokenNetwork - tokenNetwork where the channel is\n * @param partner - possibly a partner on given tokenNetwork\n * @param amount - amount of tokens to check if channel can route\n * @returns true if channel can route, string containing reason if not\n */\nexport function channelCanRoute(state, presences, tokenNetwork, partner, amount) {\n    if (!(partner in presences) || !presences[partner].payload.available)\n        return `path: partner \"${partner}\" not available in transport`;\n    if (!(partner in state.channels[tokenNetwork]))\n        return `path: there's no direct channel with partner \"${partner}\"`;\n    const channel = state.channels[tokenNetwork][partner];\n    if (channel.state !== ChannelState.open)\n        return `path: channel with \"${partner}\" in state \"${channel.state}\" instead of \"${ChannelState.open}\"`;\n    const { ownCapacity: capacity } = channelAmounts(channel);\n    if (capacity.lt(amount))\n        return `path: channel with \"${partner}\" don't have enough capacity=${capacity.toString()}`;\n    return true;\n}\n//# sourceMappingURL=utils.js.map","/* eslint-disable @typescript-eslint/camelcase */\nimport * as t from 'io-ts';\nimport { Address } from '../utils/types';\nexport const PathResults = t.readonly(t.intersection([\n    t.type({\n        result: t.readonlyArray(t.readonly(t.type({\n            path: t.readonlyArray(Address),\n            estimated_fee: t.number,\n        }))),\n    }),\n    t.partial({\n        feedback_token: t.string,\n    }),\n]));\n//# sourceMappingURL=types.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/* eslint-disable @typescript-eslint/camelcase */\nimport { of, combineLatest, from, EMPTY } from 'rxjs';\nimport { filter, mergeMap, publishReplay, first, catchError, concatMap, map, withLatestFrom, timeout, } from 'rxjs/operators';\nimport { fromFetch } from 'rxjs/fetch';\nimport { isActionOf } from 'typesafe-actions';\nimport { isLeft } from 'fp-ts/lib/Either';\nimport { ThrowReporter } from 'io-ts/lib/ThrowReporter';\nimport { bigNumberify } from 'ethers/utils';\nimport { Zero } from 'ethers/constants';\nimport { getPresences$ } from '../transport/utils';\nimport { messageGlobalSend } from '../messages/actions';\nimport { MessageType } from '../messages/types';\nimport { signMessage } from '../messages/utils';\nimport { channelDeposited } from '../channels/actions';\nimport { ChannelState } from '../channels/state';\nimport { channelAmounts } from '../channels/utils';\nimport { UInt } from '../utils/types';\nimport { losslessStringify } from '../utils/data';\nimport { pathFind, pathFound, pathFindFailed } from './actions';\nimport { channelCanRoute } from './utils';\nimport { PathResults } from './types';\n/**\n * Check if a transfer can be made and return a set of paths for it.\n *\n * @param action$ - Observable of pathFind actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of pathFound|pathFindFailed actions\n */\nexport const pathFindServiceEpic = (action$, state$, { address, config$ }) => combineLatest(state$, getPresences$(action$), config$).pipe(publishReplay(1, undefined, statePresencesConfig$ => {\n    return action$.pipe(filter(isActionOf(pathFind)), concatMap(action => statePresencesConfig$.pipe(first(), mergeMap(([state, presences, { pfs, httpTimeout }]) => {\n        const { tokenNetwork, target } = action.meta;\n        if (!(tokenNetwork in state.channels))\n            throw new Error(`PFS: unknown tokenNetwork ${tokenNetwork}`);\n        if (!(target in presences) || !presences[target].payload.available)\n            throw new Error(`PFS: target ${target} not available in transport`);\n        // if pathFind received a metadata, pass it through to validation/cleanup\n        if (action.payload.metadata)\n            return of(action.payload.metadata);\n        // else, if possible, use a direct transfer\n        else if (channelCanRoute(state, presences, tokenNetwork, target, action.meta.value) === true)\n            return of({ routes: [{ route: [state.address, target] }] });\n        // else, request a route from PFS\n        else if (pfs !== null) {\n            // from all channels\n            return fromFetch(`${pfs}/api/v1/${tokenNetwork}/paths`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: losslessStringify({\n                    from: address,\n                    to: target,\n                    value: UInt(32).encode(action.meta.value),\n                    max_paths: 10,\n                }),\n            }).pipe(timeout(httpTimeout), mergeMap((response) => __awaiter(this, void 0, void 0, function* () {\n                if (!response.ok)\n                    throw new Error(`PFS: paths request: code=${response.status} => body=${yield response.text()}`);\n                const decoded = PathResults.decode(yield response.json());\n                if (isLeft(decoded))\n                    throw ThrowReporter.report(decoded);\n                return decoded.right;\n            })), map(({ result }) => ({\n                routes: result\n                    .slice()\n                    .sort(({ estimated_fee: a }, { estimated_fee: b }) => a - b)\n                    .map(({ path }) => ({ route: path })),\n            })));\n        }\n        else {\n            throw new Error(`PFS disabled and no direct route available`);\n        }\n    }), withLatestFrom(statePresencesConfig$), \n    // validate/cleanup received routes/metadata\n    map(([{ routes: result }, [state, presences]]) => {\n        const routes = [], invalidatedRecipients = new Set();\n        for (let { route } of result) {\n            // if route has us as first hop, cleanup/shift\n            if (route[0] === state.address)\n                route = route.slice(1);\n            const recipient = route[0];\n            // if this recipient was already invalidated in a previous iteration, skip\n            if (invalidatedRecipients.has(recipient))\n                continue;\n            // if we already found some valid route, allow only new routes through this peer\n            const canTransferOrReason = !routes.length\n                ? channelCanRoute(state, presences, action.meta.tokenNetwork, recipient, action.meta.value)\n                : recipient !== routes[0].route[0]\n                    ? 'path: already selected another recipient'\n                    : true;\n            if (canTransferOrReason !== true) {\n                console.debug('Invalidated received route! Reason:', canTransferOrReason, 'Route:', route);\n                invalidatedRecipients.add(recipient);\n                continue;\n            }\n            routes.push({ route });\n        }\n        if (!routes.length)\n            throw new Error(`PFS: validated routes are empty`);\n        return pathFound({ metadata: { routes } }, action.meta);\n    }), catchError(err => of(pathFindFailed(err, action.meta))))));\n}));\n/**\n * Sends a [[PFSCapacityUpdate]] to PFS global room on new deposit on our side of channels\n *\n * @param action$ - Observable of channelDeposited actions\n * @param state$ - Observable of RaidenStates\n * @returns Observable of messageGlobalSend actions\n */\nexport const pfsCapacityUpdateEpic = (action$, state$, { address, network, signer, config$ }) => action$.pipe(filter(isActionOf(channelDeposited)), filter(action => action.payload.participant === address), withLatestFrom(state$, config$), filter(([, , { pfsRoom }]) => !!pfsRoom), // ignore actions while/if config.pfsRoom isn't set\nmergeMap(([action, state, { revealTimeout, pfsRoom }]) => {\n    const channel = state.channels[action.meta.tokenNetwork][action.meta.partner];\n    if (channel.state !== ChannelState.open)\n        return EMPTY;\n    const { ownCapacity, partnerCapacity } = channelAmounts(channel);\n    const message = {\n        type: MessageType.PFS_CAPACITY_UPDATE,\n        canonical_identifier: {\n            chain_identifier: bigNumberify(network.chainId),\n            token_network_address: action.meta.tokenNetwork,\n            channel_identifier: bigNumberify(channel.id),\n        },\n        updating_participant: address,\n        other_participant: action.meta.partner,\n        updating_nonce: channel.own.balanceProof\n            ? channel.own.balanceProof.nonce\n            : Zero,\n        other_nonce: channel.partner.balanceProof\n            ? channel.partner.balanceProof.nonce\n            : Zero,\n        updating_capacity: ownCapacity,\n        other_capacity: partnerCapacity,\n        reveal_timeout: revealTimeout,\n    };\n    return from(signMessage(signer, message)).pipe(map(signed => messageGlobalSend({ message: signed }, { roomName: pfsRoom })));\n}), catchError(err => {\n    console.error('Error trying to generate & sign PFSCapacityUpdate', err);\n    return EMPTY;\n}));\n//# sourceMappingURL=epics.js.map","import { from, of } from 'rxjs';\nimport { catchError, filter, mergeMap, takeWhile, takeUntil } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { negate } from 'lodash';\nimport { raidenShutdown } from './actions';\nimport * as ChannelsEpics from './channels/epics';\nimport * as TransportEpics from './transport/epics';\nimport * as TransfersEpics from './transfers/epics';\nimport * as PathFindEpics from './path/epics';\nexport const RaidenEpics = Object.assign({}, ChannelsEpics, TransportEpics, TransfersEpics, PathFindEpics);\nexport const raidenRootEpic = (action$, state$, deps) => {\n    const shutdownNotification = action$.pipe(filter(isActionOf(raidenShutdown))), limitedAction$ = action$.pipe(takeWhile(negate(isActionOf(raidenShutdown)), true)), limitedState$ = state$.pipe(takeUntil(shutdownNotification));\n    // wire state$ & action$ to output subjects, to expose them to Raiden public class\n    limitedState$.subscribe(deps.stateOutput$);\n    limitedAction$.subscribe(deps.actionOutput$);\n    // like combineEpics, but completes action$, state$ & output$ when a raidenShutdown goes through\n    return from(Object.values(RaidenEpics)).pipe(mergeMap(epic => epic(limitedAction$, limitedState$, deps)), catchError(err => of(raidenShutdown({ reason: err }))), takeUntil(shutdownNotification));\n};\n//# sourceMappingURL=epics.js.map","import * as t from 'io-ts';\n/**\n * A Raiden configuration object with required parameters and\n * optional parameters from [[PartialRaidenConfig]].\n *\n * - matrixServerLookup - Matrix server URL to fetch existing matrix servers from.\n *      After intializing a [[Raiden]] instance, the matrix server can't be changed later on.\n * - revealTimeout - Timeout for secrets to be revealed\n * - settleTimeout - Timeout for channels to be settled\n * - httpTimeout - Used in http fetch requests\n * - pfs - Path Finding Service URL, set to null to disable\n * - discoveryRoom - Discovery Room to auto-join, use null to disable\n * - pfsRoom - PFS Room to auto-join and send PFSCapacityUpdate to, use null to disable\n * - matrixExcessRooms - Keep this much rooms for a single user of interest (partner, target).\n *                       Leave LRU beyond this threshold.\n * - matrixServer? - Specify a matrix server to use.\n * - logger? - String specifying the console log level of redux-logger. Use '' to disable.\n *             Defaults to 'debug' if undefined and process.env.NODE_ENV === 'development'\n */\nexport const RaidenConfig = t.readonly(t.intersection([\n    t.type({\n        matrixServerLookup: t.string,\n        revealTimeout: t.number,\n        settleTimeout: t.number,\n        httpTimeout: t.number,\n        pfs: t.union([t.string, t.null]),\n        discoveryRoom: t.union([t.string, t.null]),\n        pfsRoom: t.union([t.string, t.null]),\n        matrixExcessRooms: t.number,\n    }),\n    t.partial({\n        matrixServer: t.string,\n        logger: t.keyof({ ['']: null, debug: null, log: null, info: null, warn: null, error: null }),\n    }),\n]));\nexport const defaultConfig = {\n    goerli: {\n        pfs: 'https://pfs-goerli.services-dev.raiden.network',\n    },\n    ropsten: {\n        pfs: 'https://pfs-ropsten.services-dev.raiden.network',\n    },\n    kovan: {\n        pfs: 'https://pfs-kovan.services-dev.raiden.network',\n    },\n    rinkeby: {\n        pfs: 'https://pfs-rinkeby.services-dev.raiden.network',\n    },\n    default: {\n        matrixServerLookup: 'https://raw.githubusercontent.com/raiden-network/raiden-transport/master/known_servers.test.yaml',\n        settleTimeout: 500,\n        revealTimeout: 50,\n        httpTimeout: 30e3,\n        pfs: null,\n        discoveryRoom: null,\n        pfsRoom: null,\n        matrixExcessRooms: 3,\n    },\n};\n//# sourceMappingURL=config.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Signer, Contract } from 'ethers';\nimport { Wallet } from 'ethers/wallet';\nimport { Web3Provider, JsonRpcProvider } from 'ethers/providers';\nimport { bigNumberify } from 'ethers/utils';\nimport { applyMiddleware, createStore } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { isActionOf } from 'typesafe-actions';\nimport { createLogger } from 'redux-logger';\nimport { debounce, findKey, transform, constant, memoize, pick, isEmpty } from 'lodash';\nimport { Subject, BehaviorSubject, AsyncSubject, from, merge, defer, EMPTY, } from 'rxjs';\nimport { first, filter, map, distinctUntilChanged, scan, concatMap, mergeMap, pluck, } from 'rxjs/operators';\nimport './polyfills';\nimport TokenNetworkRegistryAbi from './abi/TokenNetworkRegistry.json';\nimport TokenNetworkAbi from './abi/TokenNetwork.json';\nimport HumanStandardTokenAbi from './abi/HumanStandardToken.json';\nimport ropstenDeploy from './deployment/deployment_ropsten.json';\nimport rinkebyDeploy from './deployment/deployment_rinkeby.json';\nimport kovanDeploy from './deployment/deployment_kovan.json';\nimport goerliDeploy from './deployment/deployment_goerli.json';\nimport { ShutdownReason } from './constants';\nimport { Address, PrivateKey, Secret, Hash, UInt } from './utils/types';\nimport { RaidenState, initialState, encodeRaidenState, decodeRaidenState } from './state';\nimport { channelAmounts } from './channels/utils';\nimport { raidenReducer } from './reducer';\nimport { raidenRootEpic } from './epics';\nimport { RaidenEvents, raidenShutdown } from './actions';\nimport { channelOpened, channelOpenFailed, channelOpen, channelDeposited, channelDepositFailed, channelDeposit, channelClosed, channelCloseFailed, channelClose, channelSettled, channelSettleFailed, channelSettle, } from './channels/actions';\nimport { matrixPresenceUpdate, matrixRequestMonitorPresenceFailed, matrixRequestMonitorPresence, } from './transport/actions';\nimport { transfer, transferFailed, transferSigned } from './transfers/actions';\nimport { makeSecret, raidenSentTransfer, getSecrethash } from './transfers/utils';\nimport { pathFind, pathFound, pathFindFailed } from './path/actions';\nimport { patchSignSend } from './utils/ethers';\nimport { defaultConfig } from './config';\nimport { Metadata } from './messages/types';\nexport class Raiden {\n    constructor(provider, network, signer, contractsInfo, state, config) {\n        this.resolveName = provider.resolveName.bind(provider);\n        const address = state.address;\n        // use next from latest known blockNumber as start block when polling\n        provider.resetEventsBlock(state.blockNumber + 1);\n        const state$ = new BehaviorSubject(state);\n        this.state$ = state$;\n        const action$ = new Subject();\n        this.action$ = action$;\n        this.channels$ = state$.pipe(map(state => transform(\n        // transform state.channels to token-partner-raidenChannel map\n        state.channels, (result, partner2channel, tokenNetwork) => {\n            const token = findKey(state.tokens, tn => tn === tokenNetwork);\n            if (!token)\n                return; // shouldn't happen, token mapping is always bi-directional\n            result[token] = transform(\n            // transform Channel to RaidenChannel, with more info\n            partner2channel, (partner2raidenChannel, channel, partner) => {\n                const { ownDeposit, partnerDeposit, ownBalance: balance, ownCapacity: capacity, } = channelAmounts(channel);\n                partner2raidenChannel[partner] = Object.assign({ state: channel.state }, pick(channel, ['id', 'settleTimeout', 'openBlock', 'closeBlock']), { token, tokenNetwork: tokenNetwork, partner: partner, ownDeposit,\n                    partnerDeposit,\n                    balance,\n                    capacity });\n            });\n        })));\n        this.transfers$ = state$.pipe(pluck('sent'), distinctUntilChanged(), concatMap(sent => from(Object.entries(sent))), \n        /* this scan stores a reference to each [key,value] in 'acc', and emit as 'changed' iff it\n         * changes from last time seen. It relies on value references changing only if needed */\n        scan(({ acc }, [secrethash, sent]) => \n        // if ref didn't change, emit previous accumulator, without 'changed' value\n        acc[secrethash] === sent\n            ? { acc }\n            : // else, update ref in 'acc' and emit value in 'changed' prop\n                { acc: Object.assign({}, acc, { [secrethash]: sent }), changed: sent }, { acc: {} }), filter(({ changed }) => !!changed), // filter out if reference didn't change from last emit\n        map(({ changed }) => changed), // get the changed object only\n        // from here, we get SentTransfer objects which changed from previous state (all on first)\n        map(raidenSentTransfer));\n        this.events$ = action$.pipe(filter(isActionOf(Object.values(RaidenEvents))));\n        this.getTokenInfo = memoize((token) => __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token))\n                throw new Error('Invalid address');\n            if (!(token in this.state.tokens))\n                throw new Error(`token \"${token}\" not monitored`);\n            const tokenContract = this.deps.getTokenContract(token);\n            const [totalSupply, decimals, name, symbol] = yield Promise.all([\n                tokenContract.functions.totalSupply(),\n                tokenContract.functions.decimals(),\n                tokenContract.functions.name().catch(constant(undefined)),\n                tokenContract.functions.symbol().catch(constant(undefined)),\n            ]);\n            return { totalSupply, decimals, name, symbol };\n        }));\n        const middlewares = [\n            createLogger({\n                level: () => this.deps.config$.value.logger !== undefined\n                    ? this.deps.config$.value.logger\n                    : process.env.NODE_ENV === 'development'\n                        ? 'debug'\n                        : '',\n            }),\n        ];\n        this.deps = {\n            stateOutput$: state$,\n            actionOutput$: action$,\n            config$: new BehaviorSubject(config),\n            matrix$: new AsyncSubject(),\n            provider,\n            network,\n            signer,\n            address,\n            contractsInfo,\n            registryContract: new Contract(contractsInfo.TokenNetworkRegistry.address, TokenNetworkRegistryAbi, signer),\n            getTokenNetworkContract: memoize((address) => new Contract(address, TokenNetworkAbi, signer)),\n            getTokenContract: memoize((address) => new Contract(address, HumanStandardTokenAbi, signer)),\n        };\n        // minimum blockNumber of contracts deployment as start scan block\n        const epicMiddleware = createEpicMiddleware({ dependencies: this.deps });\n        this.store = createStore(raidenReducer, state, applyMiddleware(...middlewares, epicMiddleware));\n        epicMiddleware.run(raidenRootEpic);\n    }\n    /**\n     * Async helper factory to make a Raiden instance from more common parameters.\n     *\n     * An async factory is needed so we can do the needed async requests to construct the required\n     * parameters ahead of construction time, and avoid partial initialization then\n     *\n     * @param connection - A URL or provider to connect to, one of:\n     *     <ul>\n     *       <li>JsonRpcProvider instance,</li>\n     *       <li>a Metamask's web3.currentProvider object or,</li>\n     *       <li>a hostname or remote json-rpc connection string</li>\n     *     </ul>\n     * @param account - An account to use as main account, one of:\n     *     <ul>\n     *       <li>Signer instance (e.g. Wallet) loadded with account/private key or</li>\n     *       <li>hex-encoded string address of a remote account in provider or</li>\n     *       <li>hex-encoded string local private key or</li>\n     *       <li>number index of a remote account loaded in provider\n     *            (e.g. 0 for Metamask's loaded account)</li>\n     *     </ul>\n     * @param storageOrState - Storage/localStorage-like synchronous object where to load and store\n     *     current state or initial RaidenState-like object instead. In this case, user must listen\n     *     state$ changes and update them on whichever persistency option is used\n     * @param contracts - Contracts deployment info\n     * @param config - Raiden configuration\n     * @returns Promise to Raiden SDK client instance\n     **/\n    static create(connection, account, storageOrState, contracts, config) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let provider;\n            if (typeof connection === 'string') {\n                provider = new JsonRpcProvider(connection);\n            }\n            else if (connection instanceof JsonRpcProvider) {\n                provider = connection;\n            }\n            else {\n                provider = new Web3Provider(connection);\n            }\n            // Patch provider's sign method (https://github.com/raiden-network/light-client/issues/223)\n            patchSignSend(provider);\n            const network = yield provider.getNetwork();\n            // if no ContractsInfo, try to populate from defaults\n            if (!contracts) {\n                switch (network.name) {\n                    case 'rinkeby':\n                        contracts = rinkebyDeploy.contracts;\n                        break;\n                    case 'ropsten':\n                        contracts = ropstenDeploy.contracts;\n                        break;\n                    case 'kovan':\n                        contracts = kovanDeploy.contracts;\n                        break;\n                    case 'goerli':\n                        contracts = goerliDeploy.contracts;\n                        break;\n                    default:\n                        throw new Error(`No deploy info provided nor recognized network: ${JSON.stringify(network)}`);\n                }\n            }\n            let signer;\n            if (Signer.isSigner(account)) {\n                if (account.provider === provider)\n                    signer = account;\n                else if (account instanceof Wallet)\n                    signer = account.connect(provider);\n                else\n                    throw new Error(`Signer ${account} not connected to ${provider}`);\n            }\n            else if (typeof account === 'number') {\n                // index of account in provider\n                signer = provider.getSigner(account);\n            }\n            else if (Address.is(account)) {\n                // address\n                const accounts = yield provider.listAccounts();\n                if (!accounts.includes(account))\n                    throw new Error(`Account \"${account}\" not found in provider, got=${accounts}`);\n                signer = provider.getSigner(account);\n            }\n            else if (PrivateKey.is(account)) {\n                // private key\n                signer = new Wallet(account, provider);\n            }\n            else {\n                throw new Error('String account must be either a 0x-encoded address or private key');\n            }\n            const address = (yield signer.getAddress());\n            // use TokenNetworkRegistry deployment block as initial blockNumber, or 0\n            let loadedState = Object.assign({}, initialState, { blockNumber: contracts.TokenNetworkRegistry.block_number || 0, address, chainId: network.chainId, registry: contracts.TokenNetworkRegistry.address });\n            // type guard\n            function isStorage(storageOrState) {\n                return storageOrState && typeof storageOrState.getItem === 'function';\n            }\n            let onState = undefined, onStateComplete = undefined;\n            if (storageOrState && isStorage(storageOrState)) {\n                const ns = `raiden_${network.name || network.chainId}_${contracts.TokenNetworkRegistry.address}_${address}`;\n                const loaded = Object.assign({}, loadedState, JSON.parse((yield storageOrState.getItem(ns)) || 'null'));\n                loadedState = decodeRaidenState(loaded);\n                // to be subscribed on raiden.state$\n                const debouncedState = debounce((state) => {\n                    storageOrState.setItem(ns, encodeRaidenState(state));\n                }, 1000, { maxWait: 5000 });\n                onState = debouncedState;\n                onStateComplete = () => debouncedState.flush();\n            }\n            else if (storageOrState && RaidenState.is(storageOrState)) {\n                loadedState = storageOrState;\n            }\n            else if (storageOrState /* typeof storageOrState === unknown */) {\n                loadedState = decodeRaidenState(storageOrState);\n            }\n            if (address !== loadedState.address)\n                throw new Error(`Mismatch between provided account and loaded state: \"${address}\" !== \"${loadedState.address}\"`);\n            if (network.chainId !== loadedState.chainId ||\n                contracts.TokenNetworkRegistry.address !== loadedState.registry)\n                throw new Error(`Mismatch between network or registry address and loaded state`);\n            const raidenConfig = Object.assign({}, defaultConfig.default, {\n                discoveryRoom: `raiden_${network.name || network.chainId}_discovery`,\n                pfsRoom: `raiden_${network.name || network.chainId}_path_finding`,\n            }, defaultConfig[network.name], config);\n            const raiden = new Raiden(provider, network, signer, contracts, loadedState, raidenConfig);\n            if (onState)\n                raiden.state$.subscribe(onState, onStateComplete, onStateComplete);\n            return raiden;\n        });\n    }\n    /**\n     * Triggers all epics to be unsubscribed\n     */\n    stop() {\n        this.store.dispatch(raidenShutdown({ reason: ShutdownReason.STOP }));\n    }\n    get state() {\n        return this.store.getState();\n    }\n    get address() {\n        return this.deps.address;\n    }\n    get network() {\n        return this.deps.network;\n    }\n    getBlockNumber() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.deps.provider.blockNumber || (yield this.deps.provider.getBlockNumber());\n        });\n    }\n    config(newConfig) {\n        this.deps.config$.pipe(first()).subscribe((currentConfig) => this.deps.config$.next(Object.assign({}, currentConfig, newConfig)));\n    }\n    /**\n     * Get ETH balance for given address or self\n     *\n     * @param address - Optional target address. If omitted, gets own balance\n     * @returns BigNumber of ETH balance\n     */\n    getBalance(address) {\n        address = address || this.address;\n        if (!Address.is(address))\n            throw new Error('Invalid address');\n        return this.deps.provider.getBalance(address);\n    }\n    /**\n     * Get token balance and token decimals for given address or self\n     *\n     * @param token - Token address to fetch balance. Must be one of the monitored tokens.\n     * @param address - Optional target address. If omitted, gets own balance\n     * @returns BigNumber containing address's token balance\n     */\n    getTokenBalance(token, address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            address = address || this.address;\n            if (!Address.is(address) || !Address.is(token))\n                throw new Error('Invalid address');\n            if (!(token in this.state.tokens))\n                throw new Error(`token \"${token}\" not monitored`);\n            const tokenContract = this.deps.getTokenContract(token);\n            return tokenContract.functions.balanceOf(address);\n        });\n    }\n    /**\n     * Returns a list of all token addresses registered as token networks in registry\n     *\n     * @returns Promise to list of token addresses\n     */\n    getTokenList() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // here we assume there'll be at least one token registered on a registry\n            // so, if the list is empty (e.g. on first init), raidenInitializationEpic is still fetching\n            // the TokenNetworkCreated events from registry, so we wait until some token is found\n            return this.state$\n                .pipe(first(state => !isEmpty(state.tokens)), map(state => Object.keys(state.tokens)))\n                .toPromise();\n        });\n    }\n    /**\n     * Open a channel on the tokenNetwork for given token address with partner\n     *\n     * @param token - Token address on currently configured token network registry\n     * @param partner - Partner address\n     * @param options - (optional) option parameter\n     * @param options.settleTimeout - Custom, one-time settle timeout\n     * @returns txHash of channelOpen call, iff it succeeded\n     */\n    openChannel(token, partner, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token) || !Address.is(partner))\n                throw new Error('Invalid address');\n            const state = this.state;\n            const tokenNetwork = state.tokens[token];\n            if (!tokenNetwork)\n                throw new Error('Unknown token network');\n            const promise = this.action$\n                .pipe(filter(isActionOf([channelOpened, channelOpenFailed])), filter(action => action.meta.tokenNetwork === tokenNetwork && action.meta.partner === partner), first(), map(action => {\n                if (isActionOf(channelOpenFailed, action))\n                    throw action.payload;\n                return action.payload.txHash;\n            }))\n                .toPromise();\n            this.store.dispatch(channelOpen(Object.assign({}, options), { tokenNetwork, partner }));\n            return promise;\n        });\n    }\n    /**\n     * Deposit tokens on channel between us and partner on tokenNetwork for token\n     *\n     * @param token - Token address on currently configured token network registry\n     * @param partner - Partner address\n     * @param deposit - Number of tokens to deposit on channel\n     * @returns txHash of setTotalDeposit call, iff it succeeded\n     */\n    depositChannel(token, partner, deposit) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token) || !Address.is(partner))\n                throw new Error('Invalid address');\n            const state = this.state;\n            const tokenNetwork = state.tokens[token];\n            if (!tokenNetwork)\n                throw new Error('Unknown token network');\n            deposit = bigNumberify(deposit);\n            if (!UInt(32).is(deposit))\n                throw new Error('invalid deposit: must be 0 < amount < 2^256');\n            const promise = this.action$\n                .pipe(filter(isActionOf([channelDeposited, channelDepositFailed])), filter(action => action.meta.tokenNetwork === tokenNetwork && action.meta.partner === partner), first(), map(action => {\n                if (isActionOf(channelDepositFailed, action))\n                    throw action.payload;\n                return action.payload.txHash;\n            }))\n                .toPromise();\n            this.store.dispatch(channelDeposit({ deposit }, { tokenNetwork, partner }));\n            return promise;\n        });\n    }\n    /**\n     * Close channel between us and partner on tokenNetwork for token\n     * This method will fail if called on a channel not in 'opened' or 'closing' state.\n     * When calling this method on an 'opened' channel, its state becomes 'closing', and from there\n     * on, no payments can be performed on the channel. If for any reason the closeChannel\n     * transaction fails, channel's state stays as 'closing', and this method can be called again\n     * to retry sending 'closeChannel' transaction. After it's successful, channel becomes 'closed',\n     * and can be settled after 'settleTimeout' blocks (when it then becomes 'settleable').\n     *\n     * @param token - Token address on currently configured token network registry\n     * @param partner - Partner address\n     * @returns txHash of closeChannel call, iff it succeeded\n     */\n    closeChannel(token, partner) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token) || !Address.is(partner))\n                throw new Error('Invalid address');\n            const state = this.state;\n            const tokenNetwork = state.tokens[token];\n            if (!tokenNetwork)\n                throw new Error('Unknown token network');\n            const promise = this.action$\n                .pipe(filter(isActionOf([channelClosed, channelCloseFailed])), filter(action => action.meta.tokenNetwork === tokenNetwork && action.meta.partner === partner), first(), map(action => {\n                if (isActionOf(channelCloseFailed, action))\n                    throw action.payload;\n                return action.payload.txHash;\n            }))\n                .toPromise();\n            this.store.dispatch(channelClose(undefined, { tokenNetwork, partner }));\n            return promise;\n        });\n    }\n    /**\n     * Settle channel between us and partner on tokenNetwork for token\n     * This method will fail if called on a channel not in 'settleable' or 'settling' state.\n     * Channel becomes 'settleable' settleTimeout blocks after closed (detected automatically\n     * while Raiden Light Client is running or later on restart). When calling it, channel state\n     * becomes 'settling'. If for any reason transaction fails, it'll stay on this state, and this\n     * method can be called again to re-send a settleChannel transaction.\n     *\n     * @param token - Token address on currently configured token network registry\n     * @param partner - Partner address\n     * @returns txHash of settleChannel call, iff it succeeded\n     */\n    settleChannel(token, partner) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token) || !Address.is(partner))\n                throw new Error('Invalid address');\n            const state = this.state;\n            const tokenNetwork = state.tokens[token];\n            if (!tokenNetwork)\n                throw new Error('Unknown token network');\n            // wait for the corresponding success or error action\n            const promise = this.action$\n                .pipe(filter(isActionOf([channelSettled, channelSettleFailed])), filter(action => action.meta.tokenNetwork === tokenNetwork && action.meta.partner === partner), first(), map(action => {\n                if (isActionOf(channelSettleFailed, action))\n                    throw action.payload;\n                return action.payload.txHash;\n            }))\n                .toPromise();\n            this.store.dispatch(channelSettle(undefined, { tokenNetwork, partner }));\n            return promise;\n        });\n    }\n    /**\n     * Returns object describing address's users availability on transport\n     * After calling this method, any further presence update to valid transport peers of this\n     * address will trigger a corresponding MatrixPresenceUpdateAction on events$\n     *\n     * @param address - checksummed address to be monitored\n     * @returns Promise to object describing availability and last event timestamp\n     */\n    getAvailability(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(address))\n                throw new Error('Invalid address');\n            const promise = this.action$\n                .pipe(filter(isActionOf([matrixPresenceUpdate, matrixRequestMonitorPresenceFailed])), filter(action => action.meta.address === address), first(), map(action => {\n                if (isActionOf(matrixRequestMonitorPresenceFailed, action))\n                    throw action.payload;\n                return action.payload;\n            }))\n                .toPromise();\n            this.store.dispatch(matrixRequestMonitorPresence(undefined, { address }));\n            return promise;\n        });\n    }\n    /**\n     * Send a Locked Transfer!\n     * This will reject if LockedTransfer signature prompt is canceled/signature fails, or be\n     * resolved to the transfer unique identifier (secrethash) otherwise, and transfer status can be\n     * queried with this id on this.transfers$ observable, which will just have emitted the 'pending'\n     * transfer. Any following transfer state change will be notified through this observable.\n     *\n     * @param token - Token address on currently configured token network registry\n     * @param target - Target address (must be getAvailability before)\n     * @param amount - Amount to try to transfer\n     * @param options - Optional parameters for transfer:\n     *    <ul>\n     *      <li>paymentId - payment identifier, a random one will be generated if missing</li>\n     *      <li>secret - Secret to register, a random one will be generated if missing</li>\n     *      <li>secrethash - Must match secret, if both provided, or else, secret must be\n     *          informed to target by other means, and reveal can't be performed</li>\n     *      <li>metadata - Used to specify possible routes instead of querying PFS.</li>\n     *    </ul>\n     * @returns A promise to transfer's secrethash (unique id) when it's accepted\n     */\n    transfer(token, target, amount, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token) || !Address.is(target))\n                throw new Error('Invalid address');\n            const tokenNetwork = this.state.tokens[token];\n            if (!tokenNetwork)\n                throw new Error('Unknown token network');\n            const value = bigNumberify(amount);\n            if (!UInt(32).is(value))\n                throw new Error('Invalid amount');\n            const paymentId = !options.paymentId ? undefined : bigNumberify(options.paymentId);\n            if (paymentId && !UInt(8).is(paymentId))\n                throw new Error('Invalid options.paymentId');\n            if (options.secret !== undefined && !Secret.is(options.secret))\n                throw new Error('Invalid options.secret');\n            if (options.secrethash !== undefined && !Hash.is(options.secrethash))\n                throw new Error('Invalid options.secrethash');\n            // use provided secret or create one if no secrethash was provided\n            const secret = options.secret\n                ? options.secret\n                : !options.secrethash\n                    ? makeSecret()\n                    : undefined, secrethash = options.secrethash || getSecrethash(secret);\n            if (secret && getSecrethash(secret) !== secrethash)\n                throw new Error('Provided secrethash must match the sha256 hash of provided secret');\n            const metadata = options.metadata;\n            if (metadata && !Metadata.is(metadata))\n                throw new Error('Invalid options.metadata');\n            return merge(\n            // wait for pathFind response\n            this.action$.pipe(filter(isActionOf([pathFound, pathFindFailed])), first(action => action.meta.tokenNetwork === tokenNetwork &&\n                action.meta.target === target &&\n                action.meta.value.eq(value)), map(action => {\n                if (isActionOf(pathFindFailed, action))\n                    throw action.payload;\n                return action.payload.metadata;\n            })), \n            // request pathFind; even if metadata was provided, send it for validation\n            // this is done at 'merge' subscription time (i.e. when above action filter is subscribed)\n            defer(() => {\n                this.store.dispatch(pathFind({ metadata }, { tokenNetwork, target, value }));\n                return EMPTY;\n            }))\n                .pipe(mergeMap(metadata => merge(\n            // wait for transfer response\n            this.action$.pipe(filter(isActionOf([transferSigned, transferFailed])), first(action => action.meta.secrethash === secrethash), map(action => {\n                if (isActionOf(transferFailed, action))\n                    throw action.payload;\n                return secrethash;\n            })), \n            // request transfer with returned/validated metadata at 'merge' subscription time\n            defer(() => {\n                this.store.dispatch(transfer({\n                    tokenNetwork,\n                    target,\n                    amount: value,\n                    metadata,\n                    paymentId,\n                    secret,\n                }, { secrethash }));\n                return EMPTY;\n            }))))\n                .toPromise();\n        });\n    }\n    /**\n     * Request a path from PFS\n     *\n     * If a direct route is possible, it'll be returned. Else if PFS is set up, a request will be\n     * performed and the cleaned/validated result metadata containing the 'routes' will be resolved.\n     * Else, if no route can be found, promise is rejected with respective error.\n     *\n     * @param token - Token address on currently configured token network registry\n     * @param target - Target address (must be getAvailability before)\n     * @param amount - Minimum capacity required on routes\n     * @returns A promise to returned routes metadata\n     */\n    findRoutes(token, target, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token) || !Address.is(target))\n                throw new Error('Invalid address');\n            const tokenNetwork = this.state.tokens[token];\n            if (!tokenNetwork)\n                throw new Error('Unknown token network');\n            const value = bigNumberify(amount);\n            if (!UInt(32).is(value))\n                throw new Error('Invalid amount');\n            const promise = this.action$\n                .pipe(filter(isActionOf([pathFound, pathFindFailed])), first(action => action.meta.tokenNetwork === tokenNetwork &&\n                action.meta.target === target &&\n                action.meta.value.eq(amount)), map(action => {\n                if (isActionOf(pathFindFailed, action))\n                    throw action.payload;\n                return action.payload.metadata;\n            }))\n                .toPromise();\n            this.store.dispatch(pathFind({}, { tokenNetwork, target, value }));\n            return promise;\n        });\n    }\n}\nexport default Raiden;\n//# sourceMappingURL=raiden.js.map","/* istanbul ignore file */\nexport { RaidenState } from './state';\nexport { ShutdownReason } from './constants';\nexport { RaidenSentTransferStatus } from './transfers/state';\nexport { ChannelState } from './channels/state';\nexport { Raiden } from './raiden';\nexport { RaidenConfig } from './config';\nexport * from './utils/types';\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}