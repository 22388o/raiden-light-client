{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?1462","webpack:///./src/filters.ts","webpack:///./src/mixins/navigation-mixin.ts","webpack:///./src/components/ProgressOverlay.vue?9da6","webpack:///./src/components/ProgressOverlay.vue","webpack:///./src/components/ProgressOverlay.vue?3ae2","webpack:///./src/components/ProgressOverlay.vue?46c0","webpack:///./src/components/ListHeader.vue?7bad","webpack:///./src/locales sync [A-Za-z0-9-_,\\s]+\\.json$/","webpack:///./src/views/Home.vue?b3d3","webpack:///./src/components/NoAccessMessage.vue?58fa","webpack:///./src/components/ConfirmationDialog.vue?4f14","webpack:///./src/route-names.ts","webpack:///./src/assets/back_arrow.svg","webpack:///./src/mixins/blockie-mixin.ts","webpack:///./src/model/types.ts","webpack:///./src/components/ProgressOverlay.vue?bc21","webpack:///./src/assets/copy_icon.svg","webpack:///./src/components/AppHeader.vue?c425","webpack:///./src/assets/logo.svg","webpack:///./src/utils/balance-utils.ts","webpack:///./src/components/Tokens.vue?60fc","webpack:///./src/plugins/vuetify.ts","webpack:///./src/plugins/class-component.hooks.ts","webpack:///./src/App.vue?3db5","webpack:///./src/components/SplashScreen.vue?9228","webpack:///./src/components/NoAccessMessage.vue?e98e","webpack:///./src/components/NoAccessMessage.vue","webpack:///./src/components/NoAccessMessage.vue?cd93","webpack:///./src/components/NoAccessMessage.vue?71ea","webpack:///./src/components/SplashScreen.vue","webpack:///./src/components/SplashScreen.vue?10ae","webpack:///./src/components/SplashScreen.vue?1ffb","webpack:///./src/components/AppHeader.vue?eecd","webpack:///./src/components/AppHeader.vue","webpack:///./src/components/AppHeader.vue?1bd0","webpack:///./src/components/AppHeader.vue?4bd4","webpack:///./src/App.vue","webpack:///./src/App.vue?2594","webpack:///./src/App.vue?4f7e","webpack:///./src/views/Home.vue?f1d8","webpack:///./src/components/AppCore.vue?9774","webpack:///./src/components/Tokens.vue?a181","webpack:///./src/components/ConfirmationDialog.vue?7415","webpack:///./src/components/ConfirmationDialog.vue","webpack:///./src/components/ConfirmationDialog.vue?800c","webpack:///./src/components/ConfirmationDialog.vue?1a16","webpack:///./src/components/Tokens.vue","webpack:///./src/components/Tokens.vue?b132","webpack:///./src/components/Tokens.vue?8375","webpack:///./src/components/AppCore.vue","webpack:///./src/components/AppCore.vue?851c","webpack:///./src/components/AppCore.vue?48f8","webpack:///./src/views/Home.vue","webpack:///./src/views/Home.vue?54ed","webpack:///./src/views/Home.vue?2908","webpack:///./src/router.ts","webpack:///./src/store.ts","webpack:///./src/registerServiceWorker.ts","webpack:///./src/class-component-hooks.ts","webpack:///./src/plugins/raiden.ts","webpack:///./src/services/identicon-cache.ts","webpack:///./src/plugins/identicon-plugin.ts","webpack:///./src/i18n.ts","webpack:///./src/main.ts","webpack:///../../src/utils/types.ts","webpack:///../../src/utils/data.ts","webpack:///../../src/channels/types.ts","webpack:///../../src/messages/types.ts","webpack:///../../src/channels/state.ts","webpack:///../../src/transport/state.ts","webpack:///../../src/transfers/state.ts","webpack:///../../src/store/state.ts","webpack:///../src/constants.ts","webpack:///../../src/utils/redux.ts","webpack:///../../src/channels/actions.ts","webpack:///../../src/channels/reducer.ts","webpack:///../../src/transport/actions.ts","webpack:///../../src/transport/reducer.ts","webpack:///../../src/messages/utils.ts","webpack:///../../src/transfers/actions.ts","webpack:///../../src/transfers/utils.ts","webpack:///../../src/transfers/reducer.ts","webpack:///../src/reducer.ts","webpack:///../../src/store/actions.ts","webpack:///../../src/store/epics.ts","webpack:///../../src/utils/ethers.ts","webpack:///../../src/channels/epics.ts","webpack:///../../src/messages/actions.ts","webpack:///../../src/utils/matrix.ts","webpack:///../../src/utils/lru.ts","webpack:///../../src/transport/utils.ts","webpack:///../../src/transport/epics.ts","webpack:///../../src/utils/rxjs.ts","webpack:///../../src/transfers/epics.ts","webpack:///../src/epics.ts","webpack:///../src/actions.ts","webpack:///../src/raiden.ts","webpack:///../src/index.ts","webpack:///./src/components/ListHeader.vue?827b","webpack:///./src/components/ListHeader.vue","webpack:///./src/components/ListHeader.vue?ec8b","webpack:///./src/components/ListHeader.vue?0972","webpack:///./src/services/raiden-service.ts","webpack:///./src/services/web3-provider.ts","webpack:///./src/components/SplashScreen.vue?e8fd"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","installedCssChunks","app","jsonpScriptSrc","p","chunk-3d62e040","chunk-4a17ed5f","chunk-59360325","chunk-5f0c9ce9","chunk-bc5211e4","chunk-23295937","chunk-fe7e11c8","exports","module","l","e","promises","cssChunks","Promise","resolve","reject","href","fullhref","existingLinkTags","document","getElementsByTagName","tag","dataHref","getAttribute","rel","existingStyleTags","linkTag","createElement","type","onload","onerror","event","request","target","src","err","Error","code","parentNode","removeChild","head","appendChild","then","installedChunkData","promise","onScriptComplete","script","charset","timeout","nc","setAttribute","clearTimeout","chunk","errorType","realSrc","error","undefined","setTimeout","all","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","console","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_id_26f51c72_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_id_26f51c72_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","Filters","width","arguments","separator","substWidth","Math","floor","substr","_decimals","parseFloat","toFixed","toLocaleUpperCase","amount","decimals","units","_utils_balance_utils__WEBPACK_IMPORTED_MODULE_3__","toUnits","deposit","splitted","lodash_split__WEBPACK_IMPORTED_MODULE_4___default","indexOf","lodash_capitalize__WEBPACK_IMPORTED_MODULE_5___default","vue__WEBPACK_IMPORTED_MODULE_2__","filter","truncate","upper","displayFormat","capitalizeFirst","NavigationMixin","_Vue","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__","token","$router","_route_names__WEBPACK_IMPORTED_MODULE_8__","SELECT_HUB","params","HOME","partner","DEPOSIT","TRANSFER","SELECT_TOKEN","$route","CHANNELS","navigateToHome","navigateToTokenSelect","navigateToSelectHub","vue_property_decorator__WEBPACK_IMPORTED_MODULE_7__","tslib__WEBPACK_IMPORTED_MODULE_6__","__webpack_exports__","render","_vm","_h","$createElement","_c","_self","attrs","id","staticClass","_l","step","index","class","active","current","done","_v","_s","label","doneStep","title","steps","size","indeterminate","description","_e","staticRenderFns","ProgressOverlayvue_type_script_lang_ts_ProgressOverlay","ProgressOverlay","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","vue_property_decorator","tslib_es6","required","default","ProgressOverlayvue_type_script_lang_ts_","components_ProgressOverlayvue_type_script_lang_ts_","component","componentNormalizer","installComponents_default","VIcon","VProgressCircular","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ListHeader_vue_vue_type_style_index_0_id_023677a9_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ListHeader_vue_vue_type_style_index_0_id_023677a9_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","map","./en.json","webpackContext","req","webpackContextResolve","keys","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_16abdf63_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Home_vue_vue_type_style_index_0_id_16abdf63_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_NoAccessMessage_vue_vue_type_style_index_0_id_87e410e6_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_NoAccessMessage_vue_vue_type_style_index_0_id_87e410e6_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ConfirmationDialog_vue_vue_type_style_index_0_id_01da42d8_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ConfirmationDialog_vue_vue_type_style_index_0_id_01da42d8_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","RouteNames","BlockieMixin","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","address","$identicon","getIdenticon","vue_property_decorator__WEBPACK_IMPORTED_MODULE_6__","tslib__WEBPACK_IMPORTED_MODULE_5__","emptyDescription","emptyTokenModel","TokenPlaceholder","PlaceHolderNetwork","DeniedReason","ethers_constants__WEBPACK_IMPORTED_MODULE_0__","symbol","opening","open","closing","closed","settling","settled","balance","chainId","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ProgressOverlay_vue_vue_type_style_index_0_id_c5f3bc54_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_ProgressOverlay_vue_vue_type_style_index_0_id_c5f3bc54_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AppHeader_vue_vue_type_style_index_0_id_010deea9_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_AppHeader_vue_vue_type_style_index_0_id_010deea9_scoped_true_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","BalanceUtils","wei","ethers__WEBPACK_IMPORTED_MODULE_3__","formatEther","formatUnits","depositTokens","parse","lte","decimalPart","split","parseUnits","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Tokens_vue_vue_type_style_index_0_id_fcb7959e_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Tokens_vue_vue_type_style_index_0_id_fcb7959e_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","vue_runtime_esm","use","lib","iconfont","theme","primary","secondary","vue_class_component_esm","registerHooks","Appvue_type_template_id_26f51c72_scoped_true_render","dark","on","connect","$event","fluid","fill-height","$t","SplashScreenvue_type_template_id_796a8ef9_scoped_true_render","align-center","justify-center","row","lg4","md6","xs8","aspect-ratio","contain","click","reason","accessDenied","SplashScreenvue_type_template_id_796a8ef9_scoped_true_staticRenderFns","NoAccessMessagevue_type_template_id_87e410e6_scoped_true_render","color","icon","outline","NoAccessMessagevue_type_template_id_87e410e6_scoped_true_staticRenderFns","NoAccessMessagevue_type_script_lang_ts_NoAccessMessage","NoAccessMessage","createClass","types","UNSUPPORTED_NETWORK","INITIALIZATION_FAILED","NoAccessMessagevue_type_script_lang_ts_","components_NoAccessMessagevue_type_script_lang_ts_","components_NoAccessMessage","VAlert","SplashScreenvue_type_script_lang_ts_Loading","Loading","_this","web3_provider","injectedWeb3Available","components","computed","vuex_esm","SplashScreenvue_type_script_lang_ts_","components_SplashScreenvue_type_script_lang_ts_","SplashScreen_component","SplashScreen","VBtn","VContainer","VFlex","VImg","VLayout","AppHeadervue_type_template_id_010deea9_scoped_true_render","loading","defaultAccount","column","xs12","flat","onBackClicked","meta","network","$blockie","height","xs6","bottom","scopedSlots","_u","fn","ref","_g","_f","copy","model","callback","$$v","copied","expression","accountBalance","directives","rawName","domProps","input","composing","AppHeadervue_type_template_id_010deea9_scoped_true_staticRenderFns","AppHeadervue_type_script_lang_ts_AppHeader","_Mixins","AppHeader","_this2","copyArea","$refs","focus","select","execCommand","route_names","blockie_mixin","navigation_mixin","_objectSpread","AppHeadervue_type_script_lang_ts_","components_AppHeadervue_type_script_lang_ts_","AppHeader_component","components_AppHeader","VSpacer","VGrid","VTooltip","Appvue_type_script_lang_ts_App","App","initialized","_connect","asyncToGenerator","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","$store","commit","$raiden","fetchTokens","stop","disconnect","UNDEFINED","Appvue_type_script_lang_ts_","src_Appvue_type_script_lang_ts_","App_component","src_App","VApp","VContent","Homevue_type_template_id_16abdf63_scoped_true_render","Homevue_type_template_id_16abdf63_scoped_true_staticRenderFns","AppCorevue_type_template_id_fabb8be6_render","AppCorevue_type_template_id_fabb8be6_staticRenderFns","Tokensvue_type_template_id_fcb7959e_scoped_true_render","justify-space-between","header","no-action","alt","proxy","to","leaveNetwork","xs10","large","depressed","display","leaveModalVisible","confirm","leaveConfirmed","cancel","leaveCancelled","path","place","selectedToken","Tokensvue_type_template_id_fcb7959e_scoped_true_staticRenderFns","ConfirmationDialogvue_type_template_id_01da42d8_scoped_true_render","persistent","max-width","_t","ConfirmationDialogvue_type_template_id_01da42d8_scoped_true_staticRenderFns","ConfirmationDialogvue_type_script_lang_ts_ConfirmationDialog","ConfirmationDialog","$emit","ConfirmationDialogvue_type_script_lang_ts_","components_ConfirmationDialogvue_type_script_lang_ts_","ConfirmationDialog_component","components_ConfirmationDialog","VCard","VCardActions","components_VCard","VCardText","VCardTitle","VDialog","Tokensvue_type_script_lang_ts_Tokens","Tokens","_leaveConfirmed","dismissModal","ListHeader","Tokensvue_type_script_lang_ts_","components_Tokensvue_type_script_lang_ts_","Tokens_component","components_Tokens","VList","VListGroup","VListTile","VListTileAvatar","VListTileContent","components_VList","VListTileSubTitle","VListTileTitle","AppCorevue_type_script_lang_ts_AppCore","AppCore","TokenNetworks","AppCorevue_type_script_lang_ts_","components_AppCorevue_type_script_lang_ts_","AppCore_component","components_AppCore","Homevue_type_script_lang_ts_Home","Home","Homevue_type_script_lang_ts_","views_Homevue_type_script_lang_ts_","Home_component","views_Home","vue_router_esm","router","base","routes","redirect","_defaultState","providerDetected","channels","tokens","defaultState","clone_default","store","state","mutations","noProvider","account","_account","loadComplete","_balance","updateChannels","updateTokens","assign","_network","reset","actions","getters","reducer","acc","channel","map_default","flatMap_default","tokenChannels","reduce_default","tokenInfo","allTokens","tokenAddress","concat","src_store","Store","register_service_worker","ready","log","registered","cached","updatefound","updated","offline","_error","RaidenPlugin","Vue","options","raiden_service","identicon_cache_IdenticonCache","IdenticonCache","cache","generated","main_default","IdenticonPlugin","loadLocaleMessages","locales","messages","forEach","matched","match","locale","vue_i18n_esm","i18n","fallbackLocale","config","productionTip","created","sessionStorage","h","$mount","isStringifiable","u","isBigNumber","BigNumberC","es6","utils","toString","message","a","lossless_json","types_EnumType","_t$Type","EnumType","values","enumObject","some","v","is","_tag","HexString","lodash","UInt","max","constants","pow","gte","lt","Signature","Hash","Secret","PrivateKey","Address","encode","hex","bytes","str","isLosslessNumber","losslessParse","text","_ref","objectDestructuringEmpty","valueOf","MessageType","Lock","expiration","secrethash","SignedBalanceProof","tokenNetworkAddress","channelId","nonce","transferredAmount","lockedAmount","locksroot","messageHash","signature","sender","ChannelState","MessageTypeC","Message","RetrieableMessage","message_identifier","Delivered","DELIVERED","delivered_message_identifier","Processed","PROCESSED","SecretRequest","SECRET_REQUEST","payment_identifier","SecretReveal","SECRET_REVEAL","secret","EnvelopeMessage","chain_id","token_network_address","channel_identifier","transferred_amount","locked_amount","LockedTransferBase","recipient","lock","initiator","fee","LockedTransfer","LOCKED_TRANSFER","RefundTransfer","REFUND_TRANSFER","Unlock","UNLOCK","LockExpired","LOCK_EXPIRED","Signed","codec","SignedMessageCodecs","_SignedMessageCodecs","ChannelEnd","locks","balanceProof","history","Channel","own","settleTimeout","openBlock","settleable","closeBlock","Channels","RaidenMatrixSetup","userId","accessToken","deviceId","displayName","SentTransfer","transfer","transferProcessed","secretReveal","unlock","lockExpired","SentTransfers","RaidenState","blockNumber","transport","matrix","server","setup","rooms","secrets","registerBlock","sent","encodeRaidenState","decodeRaidenState","validationResult","decode","ThrowReporter","report","ShutdownReason","state_initialState","SignatureZero","MATRIX_KNOWN_SERVERS_URL","REVEAL_TIMEOUT","partialCombineReducers","reducers","initialState","action","subState","newSubState","newBlock","typesafe_actions_umd_production","tokenMonitored","tokenNetwork","_ref$first","first","payload","channelOpen","channelOpened","channelOpenFailed","channelMonitored","channelDeposit","channelDeposited","channelDepositFailed","channelClose","channelClosed","channelCloseFailed","channelSettleable","channelSettle","channelSettled","channelSettleFailed","reducer_blockNumber","fp","_path","_channel","_path2","_path3","_channel2","participant","totalDeposit","_path4","_channel3","_path5","_channel4","_path6","_channel5","_path7","_channel6","_path8","_channel7","includes","channelsReducer","matrixSetup","matrixRequestMonitorPresence","matrixPresenceUpdate","available","ts","Date","now","matrixRequestMonitorPresenceFailed","matrixRoom","matrixRoomLeave","roomId","toConsumableArray","room","transportReducer","CMDIDs","_CMDIDs","createMessageHash","packMessage","balanceHash","isZero","isSigned","getMessageSigner","getBalanceProofFromEnvelopeMessage","encodeJsonMessage","decodeJsonMessage","parsed","decoded","isLeft","signMessage","signer","actions_transfer","transferSigned","transferSecret","transferSecretRequest","transferUnlock","transferUnlocked","transferUnlockProcessed","transferred","transferFailed","lockhash","getLocksroot","leaves","makeSecret","makePaymentId","makeMessageId","transfersReducer","channelPath","eq","add","sentTransfer","_secrethash","_transfer","_lock","_channelPath","_locks","_locksroot","sub","_sentTransfer","raidenReducers","reducer_raidenReducer","reduce","raidenInit","raidenShutdown","epics_stateOutputEpic","state$","_ref2","stateOutput$","subscribe","empty","epics_actionOutputEpic","action$","_ref3","_ref4","actionOutput$","fromEthersEvent","resultSelector","fromEventPattern","handler","removeListener","getEventsStream","contract","filters","fromBlock$","lastSeenBlock$","provider","newEvents$","from","pipe","mergeMap","_len","args","Array","_key","pastEvents$","withLatestFrom","defer","of","switchMap","slicedToArray","fromBlock","toBlock","ethers_awaiter","logs","getLogs","abrupt","mergeAll","interface","parseLog","getBlock","blockHash","getTransaction","transactionHash","getTransactionReceipt","merge","getNetwork","networks","parseInt","send","epics_initNewBlockEpic","epics_initMonitorRegistryEpic","registryContract","contractsInfo","_ref5","TokenNetworkCreated","TokenNetworkRegistry","block_number","startWith","_ref6","_ref7","_ref7$","entries","_ref8","_ref9","epics_initMonitorChannelsEpic","_ref10","_ref11","_i","_Object$entries","_Object$entries$_i","obj","_i2","_Object$entries2","_Object$entries2$_i","epics_initMonitorProviderEpic","_ref12","_ref13","listAccounts","accounts","isProviderAccount","interval","pollingInterval","ACCOUNT_CHANGED","curNetwork","NETWORK_CHANGED","epics_tokenMonitoredEpic","_ref14","getTokenNetworkContract","multicast","ReplaySubject","blockNumber$","groupBy","grouped$","exhaustMap","tokenNetworkContract","ChannelOpened","_ref15","_ref16","p1","p2","_ref17","_ref18","toNumber","txHash","epics_channelMonitoredEpic","_ref19","depositFilter","ChannelNewDeposit","closedFilter","ChannelClosed","settledFilter","ChannelSettled","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","settleBlock","takeWhile","epics_channelOpenEpic","_ref26","_ref27","_ref28","channelState","functions","openChannel","tx","epics_awaiter","epics_this","_callee2","_context2","wait","t0","t1","receipt","_ref29","status","hash","mergeMapTo","catchError","epics_channelOpenedEpic","_ref30","_ref31","_ref32","_ref33","epics_channelDepositEpic","_ref34","getTokenContract","_ref35","_ref36","tn","tokenContract","approve","tap","_callee3","_context3","_ref37","_ref38","_ref39","setTotalDeposit","gasLimit","_callee4","_context4","_ref40","epics_channelCloseEpic","_ref41","_ref42","_ref43","closeChannel","_callee5","_context5","_ref44","epics_channelSettleEpic","_ref45","_ref46","_ref47","settleChannel","_callee6","_context6","_ref48","epics_channelSettleableEpic","_callee7","_ref49","_ref50","_context7","t2","t3","settleableBlock","messageSend","messageReceived","yamlListToArray","yml","reg","results","exec","matrixRTT","url","start","browser_ponyfill_default","resp","NaN","rtt","getServerName","getUserPresence","lib_utils","$userId","_http","authedRequest","lru_LruCache","LruCache","Map","entry","delete","set","keyToDelete","utils_getPresences$","scan","presences","update","AVAILABLE","userRe","epics_initMatrixEpic","matrix$","knownServersUrl","response","ok","throwError","toArray","rtts","isNaN","JSON","stringify","browser_index","baseUrl","serverName","_matrix","userName","toLowerCase","password","loginWithPassword","register","device_id","opts","access_token","credentials","user_id","signedUserId","setDisplayName","joinRoom","mapTo","complete","epics_matrixStartEpic","startClient","initialSyncLimit","ignoreElements","epics_matrixShutdownEpic","finalize","stopClient","epics_matrixMonitorPresenceEpic","_ref16$","validUsers","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","getUsers","iterator","_user2","presence","recovered","return","user","searchUserDirectory","term","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_user","display_name","userIds","epics_matrixPresenceUpdateEpic","fromEvent","getType","getUser","getSender","peerAddress","toMonitor","Set","has","_ref27$","displayName$","getProfileInfo","profile","displayname","lastPresenceTs","epics_matrixCreateRoomEpic","combineLatest","presencesStateReplay$","concatMap","take","createRoom","visibility","invite","room_id","epics_matrixInviteEpic","_ref39$","getRoom","member","getMember","epics_matrixHandleInvitesEpic","getUserId","membership","_ref44$","cachedPresence","senderPresence$","takeUntil","timer","senderPresence","syncRoom","epics_matrixLeaveExcessRoomsEpic","_ref48$","THRESHOLD","leave","epics_matrixLeaveUnknownRoomsEpic","_ref51","delay","_ref52","_ref53","_ref53$","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_roomId","_ref54","_ref55","_ref55$","epics_matrixCleanLeftRoomsEpic","_ref56","_ref57","_ref58","_ref59","_ref60","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","finish","epics_matrixMessageSendEpic","_ref61","_ref62","_ref63","_ref64","_ref65","_ref66","_ref67","distinctUntilChanged","_ref68","_ref69","_ref69$","_ref70","_ref71","_ref72","_ref72$","_ref73","_ref74","body","sendEvent","msgtype","epics_matrixMessageReceivedEpic","_ref75","_ref76","content","_ref77","_ref78","_ref79","_ref80","_ref81","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_iterator5","_step5","line","warn","origin_server_ts","epics_matrixMessageReceivedUpdateRoomEpic","_ref82","_ref83","_ref84","_ref85","epics_matrixMonitorChannelPresenceEpic","epics_deliveredEpic","_ref86","_ref87","msgId","delivered","signed","put","splitCombined","tuple$","makeAndSignTransfer","presences$","signed$","capacity","paymentId","makeAndSignUnlock","epics_transferGenerateAndSignEnvelopeMessageEpic","deps","_splitCombined","_splitCombined2","epics_transferProcessedReceivedEpic","epics_transferSecretRequestedEpic","epics_transferRevealSecretEpic","epics_transferSecretRevealedEpic","epics_transferUnlockProcessedReceivedEpic","_i3","_Object$entries3","_Object$entries3$_i","epics_transferSuccessEpic","RaidenEpics","epics_namespaceObject","channels_epics_namespaceObject","transport_epics_namespaceObject","transfers_epics_namespaceObject","epics_raidenRootEpic","shutdownNotification","limitedAction$","limitedState$","epic","RaidenActions","store_actions_namespaceObject","actions_namespaceObject","transport_actions_namespaceObject","messages_actions_namespaceObject","transfers_actions_namespaceObject","RaidenEvents","raiden_Raiden","Raiden","contracts","registry","ethers_min","tokenNetworks","middlewares","BehaviorSubject","Subject","AsyncSubject","channels$","partner2channel","partner2raidenChannel","ownDeposit","partnerDeposit","events$","epicMiddleware","createEpicMiddleware","dependencies","redux","run","getState","resetEventsBlock","resolveName","dispatch","STOP","getBlockNumber","getBalance","balanceOf","totalSupply","catch","toPromise","TokenNetwork","Token","_secret","connection","storageOrState","isStorage","getItem","providers","deployment_rinkeby","deployment_ropsten","deployment_kovan","deployment_goerli","getSigner","getAddress","loadedState","onState","onStateComplete","loaded","debouncedState","setItem","maxWait","flush","raiden","ListHeadervue_type_script_lang_ts_ListHeader","ListHeadervue_type_script_lang_ts_","components_ListHeadervue_type_script_lang_ts_","RaidenService","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_10__","_raiden","cachedTokens","getTokenBalance","_utils_balance_utils__WEBPACK_IMPORTED_MODULE_14__","raiden__WEBPACK_IMPORTED_MODULE_12__","localStorage","RaidenInitializationFailed","EnsResolveFailed","_services_web3_provider__WEBPACK_IMPORTED_MODULE_13__","createRaiden","getAccount","setupEventListeners","t4","deniedReason","_model_types__WEBPACK_IMPORTED_MODULE_15__","NO_ACCOUNT","rxjs_internal_operators__WEBPACK_IMPORTED_MODULE_17__","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_9__","updateTokenBalances","toEth","getTokenInfo","_context8","progress","progressUpdater","total","ChannelOpenFailed","_context9","gt","ethers_constants__WEBPACK_IMPORTED_MODULE_16__","failed","ChannelCloseFailed","_context11","depositChannel","ChannelDepositFailed","_context12","ChannelSettleFailed","_context13","updateEntries","getTokenList","getToken","retrievedToken","getAvailability","TransferFailed","_context15","_Error","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_0__","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_1__","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_3__","_Error2","_Error3","_Error4","_Error5","_Error6","_Error7","Web3Provider","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","_provider","_home_circleci_src_raiden_dapp_node_modules_babel_runtime_corejs2_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","ethereum","enable","web3","currentProvider","isMetaMask","autoRefreshOnNetworkChange","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SplashScreen_vue_vue_type_style_index_0_id_796a8ef9_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_vuetify_loader_lib_loader_js_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SplashScreen_vue_vue_type_style_index_0_id_796a8ef9_lang_scss_scoped_true___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/app.d4a4c900.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded CSS chunks\n \tvar installedCssChunks = {\n \t\t\"app\": 0\n \t}\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-3d62e040\":\"b39388d7\",\"chunk-4a17ed5f\":\"409f1ae8\",\"chunk-59360325\":\"32ca9841\",\"chunk-5f0c9ce9\":\"8efea8d7\",\"chunk-bc5211e4\":\"054c1bd9\",\"chunk-23295937\":\"e44a043b\",\"chunk-fe7e11c8\":\"a4a12470\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// mini-css-extract-plugin CSS loading\n \t\tvar cssChunks = {\"chunk-3d62e040\":1,\"chunk-4a17ed5f\":1,\"chunk-59360325\":1,\"chunk-5f0c9ce9\":1,\"chunk-bc5211e4\":1,\"chunk-23295937\":1,\"chunk-fe7e11c8\":1};\n \t\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n \t\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n \t\t\tpromises.push(installedCssChunks[chunkId] = new Promise(function(resolve, reject) {\n \t\t\t\tvar href = \"css/\" + ({}[chunkId]||chunkId) + \".\" + {\"chunk-3d62e040\":\"aadb164d\",\"chunk-4a17ed5f\":\"77969d5d\",\"chunk-59360325\":\"e2850fef\",\"chunk-5f0c9ce9\":\"0105a6cd\",\"chunk-bc5211e4\":\"0b795037\",\"chunk-23295937\":\"1243e6ad\",\"chunk-fe7e11c8\":\"470348e7\"}[chunkId] + \".css\";\n \t\t\t\tvar fullhref = __webpack_require__.p + href;\n \t\t\t\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n \t\t\t\tfor(var i = 0; i < existingLinkTags.length; i++) {\n \t\t\t\t\tvar tag = existingLinkTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n \t\t\t\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return resolve();\n \t\t\t\t}\n \t\t\t\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n \t\t\t\tfor(var i = 0; i < existingStyleTags.length; i++) {\n \t\t\t\t\tvar tag = existingStyleTags[i];\n \t\t\t\t\tvar dataHref = tag.getAttribute(\"data-href\");\n \t\t\t\t\tif(dataHref === href || dataHref === fullhref) return resolve();\n \t\t\t\t}\n \t\t\t\tvar linkTag = document.createElement(\"link\");\n \t\t\t\tlinkTag.rel = \"stylesheet\";\n \t\t\t\tlinkTag.type = \"text/css\";\n \t\t\t\tlinkTag.onload = resolve;\n \t\t\t\tlinkTag.onerror = function(event) {\n \t\t\t\t\tvar request = event && event.target && event.target.src || fullhref;\n \t\t\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + request + \")\");\n \t\t\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n \t\t\t\t\terr.request = request;\n \t\t\t\t\tdelete installedCssChunks[chunkId]\n \t\t\t\t\tlinkTag.parentNode.removeChild(linkTag)\n \t\t\t\t\treject(err);\n \t\t\t\t};\n \t\t\t\tlinkTag.href = fullhref;\n\n \t\t\t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\t\t\thead.appendChild(linkTag);\n \t\t\t}).then(function() {\n \t\t\t\tinstalledCssChunks[chunkId] = 0;\n \t\t\t}));\n \t\t}\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=26f51c72&lang=scss&scoped=true&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&id=26f51c72&lang=scss&scoped=true&\"","import Vue from 'vue';\nimport { BigNumber } from 'ethers/utils';\nimport { BalanceUtils } from '@/utils/balance-utils';\nimport split from 'lodash/split';\nimport capitalize from 'lodash/capitalize';\n\nexport default class Filters {\n  static truncate(value: string, width: number = 12) {\n    const separator = '...';\n    if (value.length <= width) {\n      return value;\n    } else {\n      const substWidth = Math.floor(width / 2);\n      return (\n        value.substr(0, substWidth) +\n        separator +\n        value.substr(value.length - substWidth)\n      );\n    }\n  }\n\n  static decimals(value: string, decimals: number = 3) {\n    return parseFloat(value).toFixed(decimals);\n  }\n\n  static upper(value: string) {\n    if (!value) {\n      return '';\n    }\n    return value.toLocaleUpperCase();\n  }\n\n  static displayFormat(amount: BigNumber, decimals: number): string {\n    const units = BalanceUtils.toUnits(amount, decimals);\n    const deposit = parseFloat(units);\n    if (deposit === 0) {\n      return '0.0';\n    } else if (deposit < 0.00001) {\n      return '<0.00001';\n    } else {\n      const splitted = split(units, '.');\n      if (splitted[1] && splitted[1].length > 5) {\n        return units.substr(0, units.indexOf('.') + 6);\n      } else {\n        return units;\n      }\n    }\n  }\n\n  static capitalizeFirst(value: string): string {\n    return capitalize(value);\n  }\n}\n\nVue.filter('truncate', Filters.truncate);\nVue.filter('decimals', Filters.decimals);\nVue.filter('upper', Filters.upper);\nVue.filter('displayFormat', Filters.displayFormat);\nVue.filter('capitalizeFirst', Filters.capitalizeFirst);\n","import { Component, Vue } from 'vue-property-decorator';\nimport { RouteNames } from '@/route-names';\n\n@Component\nexport default class NavigationMixin extends Vue {\n  navigateToSelectHub(token: string) {\n    this.$router.push({\n      name: RouteNames.SELECT_HUB,\n      params: {\n        token: token\n      }\n    });\n  }\n\n  navigateToHome() {\n    this.$router.push({\n      name: RouteNames.HOME\n    });\n  }\n\n  navigateToDeposit(token: string, partner: string) {\n    this.$router.push({\n      name: RouteNames.DEPOSIT,\n      params: {\n        token: token,\n        partner: partner\n      }\n    });\n  }\n\n  navigateToSelectPaymentTarget(token: string) {\n    this.$router.push({\n      name: RouteNames.TRANSFER,\n      params: { token: token }\n    });\n  }\n\n  navigateToTokenSelect() {\n    this.$router.push({\n      name: RouteNames.SELECT_TOKEN\n    });\n  }\n\n  onBackClicked() {\n    switch (this.$route.name) {\n      case RouteNames.TRANSFER:\n      case RouteNames.CHANNELS:\n      case RouteNames.SELECT_TOKEN:\n        this.navigateToHome();\n        break;\n      case RouteNames.SELECT_HUB:\n        this.navigateToTokenSelect();\n        break;\n      case RouteNames.DEPOSIT:\n        this.navigateToSelectHub(this.$route.params.token);\n        break;\n    }\n  }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.display)?_c('div',{attrs:{\"id\":\"overlay\"}},[_c('div',{attrs:{\"id\":\"card\"}},[_c('div',{staticClass:\"steps\"},[_vm._l((_vm.steps),function(step,index){return _c('div',{key:index,staticClass:\"step\",class:{\n          active: _vm.current === index && !_vm.done\n        }},[_c('span',{staticClass:\"label\"},[_vm._v(_vm._s(step.label))])])}),_c('div',{staticClass:\"step\",class:{ active: _vm.done }},[_vm._v(_vm._s(_vm.doneStep.label))])],2),_c('div',{staticClass:\"card-content\"},[_c('div',{staticClass:\"step-title\"},[(_vm.done)?_c('span',[_vm._v(\"\\n          \"+_vm._s(_vm.doneStep.title)+\"\\n        \")]):_c('span',[_vm._v(_vm._s(_vm.steps[_vm.current].title))])]),(_vm.done)?_c('div',[_c('v-icon',{staticClass:\"success-icon\"},[_vm._v(\"check_circle\")])],1):_c('v-progress-circular',{staticClass:\"progress\",attrs:{\"size\":120,\"width\":7,\"indeterminate\":\"\"}}),_c('p',{staticClass:\"step-description\",attrs:{\"id\":\"message\"}},[(_vm.done)?_c('span',[_vm._v(\"\\n          \"+_vm._s(_vm.doneStep.description)+\"\\n        \")]):_c('span',[_vm._v(\"\\n          \"+_vm._s(_vm.steps[_vm.current].description)+\"\\n        \")])])],1)])]):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { StepDescription } from '@/model/types';\n\n@Component({})\nexport default class ProgressOverlay extends Vue {\n  @Prop({ required: true })\n  display!: boolean;\n\n  @Prop({ required: false, default: 0 })\n  current!: number;\n\n  @Prop({ required: true })\n  steps!: StepDescription[];\n\n  @Prop({ required: true })\n  doneStep!: StepDescription;\n\n  @Prop({})\n  done?: boolean;\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProgressOverlay.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProgressOverlay.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ProgressOverlay.vue?vue&type=template&id=c5f3bc54&scoped=true&\"\nimport script from \"./ProgressOverlay.vue?vue&type=script&lang=ts&\"\nexport * from \"./ProgressOverlay.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ProgressOverlay.vue?vue&type=style&index=0&id=c5f3bc54&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"c5f3bc54\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/home/circleci/src/raiden-dapp/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VIcon } from 'vuetify/lib'\nimport { VProgressCircular } from 'vuetify/lib'\ninstallComponents(component, {VIcon,VProgressCircular})\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListHeader.vue?vue&type=style&index=0&id=023677a9&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListHeader.vue?vue&type=style&index=0&id=023677a9&scoped=true&lang=scss&\"","var map = {\n\t\"./en.json\": \"edd4\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"49f8\";","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=16abdf63&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=style&index=0&id=16abdf63&scoped=true&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoAccessMessage.vue?vue&type=style&index=0&id=87e410e6&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoAccessMessage.vue?vue&type=style&index=0&id=87e410e6&scoped=true&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfirmationDialog.vue?vue&type=style&index=0&id=01da42d8&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfirmationDialog.vue?vue&type=style&index=0&id=01da42d8&scoped=true&lang=scss&\"","export enum RouteNames {\n  TRANSFER = 'transfer',\n  SELECT_TOKEN = 'select-token',\n  SELECT_HUB = 'select-hub',\n  HOME = 'home',\n  CHANNELS = 'channels',\n  DEPOSIT = 'deposit'\n}\n","module.exports = __webpack_public_path__ + \"img/back_arrow.268247fb.svg\";","import { Component, Vue } from 'vue-property-decorator';\n\n@Component\nexport default class BlockieMixin extends Vue {\n  $blockie(address: string) {\n    return this.$identicon.getIdenticon(address);\n  }\n}\n","import { BigNumberish, Network } from 'ethers/utils';\nimport { Zero } from 'ethers/constants';\n\nexport interface Token {\n  readonly balance: BigNumberish;\n  readonly decimals: number;\n  readonly units: string;\n  readonly address: string;\n  readonly symbol?: string;\n  readonly name?: string;\n}\n\nexport interface AccTokenModel {\n  name: string;\n  symbol: string;\n  address: string;\n  opening: number;\n  open: number;\n  closing: number;\n  closed: number;\n  settling: number;\n  settled: number;\n\n  [index: string]: number | string;\n}\n\nexport interface TokenModel extends AccTokenModel {\n  readonly name: string;\n  readonly symbol: string;\n  readonly address: string;\n  readonly opening: number;\n  readonly open: number;\n  readonly closing: number;\n  readonly closed: number;\n  readonly settling: number;\n  readonly settled: number;\n}\n\nexport interface LeaveNetworkResult {\n  readonly closed: number;\n  readonly failed: number;\n}\n\nexport interface Progress {\n  readonly current: number;\n  readonly total: number;\n}\n\nexport interface StepDescription {\n  readonly label: string;\n  readonly title: string;\n  readonly description: string;\n}\n\nexport const emptyDescription = (): StepDescription => ({\n  label: '',\n  title: '',\n  description: ''\n});\n\nexport const emptyTokenModel = (): AccTokenModel => ({\n  name: '',\n  symbol: '',\n  address: '',\n  opening: 0,\n  open: 0,\n  closing: 0,\n  closed: 0,\n  settling: 0,\n  settled: 0\n});\n\n/**\n * A placeholder token used on the views while awaiting for the actual\n * token information to load.\n */\nexport const TokenPlaceholder: Token = {\n  balance: Zero,\n  decimals: 18,\n  units: '0.0',\n  address: ''\n};\n\nexport const PlaceHolderNetwork: Network = {\n  name: '',\n  chainId: -1\n};\n\nexport enum DeniedReason {\n  UNDEFINED,\n  NO_ACCOUNT,\n  UNSUPPORTED_NETWORK,\n  INITIALIZATION_FAILED\n}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProgressOverlay.vue?vue&type=style&index=0&id=c5f3bc54&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ProgressOverlay.vue?vue&type=style&index=0&id=c5f3bc54&lang=scss&scoped=true&\"","module.exports = __webpack_public_path__ + \"img/copy_icon.80d12304.svg\";","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppHeader.vue?vue&type=style&index=0&id=010deea9&scoped=true&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppHeader.vue?vue&type=style&index=0&id=010deea9&scoped=true&lang=scss&\"","module.exports = __webpack_public_path__ + \"img/logo.5c4b022d.svg\";","import { BigNumber } from 'ethers/utils';\nimport { utils } from 'ethers';\nimport { Token } from '@/model/types';\n\nexport class BalanceUtils {\n  static toEth(wei: BigNumber): string {\n    return utils.formatEther(wei);\n  }\n\n  static toUnits(wei: BigNumber, decimals: number): string {\n    return utils.formatUnits(wei, decimals);\n  }\n\n  static hasBalance(depositTokens: string, token: Token): boolean {\n    const deposit = BalanceUtils.parse(depositTokens, token.decimals);\n    const balance = BalanceUtils.parse(token.units, token.decimals);\n    return deposit.lte(balance);\n  }\n\n  static decimalsOverflow(depositTokens: string, token: Token): boolean {\n    let decimalPart: string;\n    if (depositTokens.indexOf('.') > 0) {\n      decimalPart = depositTokens.split('.')[1];\n    } else if (depositTokens.indexOf(',') > 0) {\n      decimalPart = depositTokens.split(',')[1];\n    } else {\n      decimalPart = '';\n    }\n    return decimalPart.length > token.decimals;\n  }\n\n  static parse(deposit: string, decimals: number) {\n    return utils.parseUnits(deposit, decimals);\n  }\n}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tokens.vue?vue&type=style&index=0&id=fcb7959e&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tokens.vue?vue&type=style&index=0&id=fcb7959e&lang=scss&scoped=true&\"","/* istanbul ignore file */\nimport Vue from 'vue';\nimport Vuetify from 'vuetify/lib';\nimport 'vuetify/src/stylus/app.styl';\n\nVue.use(Vuetify, {\n  iconfont: 'md',\n  theme: {\n    primary: '#28A5C8',\n    secondary: '#0A6E87'\n  }\n});\n","/* istanbul ignore file */\nimport Component from 'vue-class-component';\n\n// Register the router hooks with their names\nComponent.registerHooks([\n  'beforeRouteEnter',\n  'beforeRouteLeave',\n  'beforeRouteUpdate' // for vue-router 2.2+\n]);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',{attrs:{\"dark\":\"\"}},[(_vm.inaccessible)?_c('splash-screen',{on:{\"connect\":function($event){return _vm.connect()}}}):_c('div',{attrs:{\"id\":\"application-wrapper\"}},[_c('div',{attrs:{\"id\":\"application-content\"}},[_c('app-header'),_c('v-content',[_c('v-container',{staticClass:\"application__container\",attrs:{\"fluid\":\"\",\"fill-height\":\"\"}},[_c('router-view')],1)],1)],1)]),_c('div',{staticClass:\"policy\"},[_c('a',{attrs:{\"href\":\"https://raiden.network/privacy.html\",\"target\":\"_blank\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.$t('application.privacy-policy'))+\"\\n    \")])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fluid\":\"\",\"fill-height\":\"\"}},[_c('v-layout',{attrs:{\"align-center\":\"\",\"justify-center\":\"\",\"row\":\"\"}},[_c('v-flex',{attrs:{\"lg4\":\"\",\"md6\":\"\",\"xs8\":\"\"}},[_c('div',{staticClass:\"loading-wrapper display-3\"},[_c('div',{staticClass:\"img-container\"},[_c('v-img',{attrs:{\"id\":\"logo\",\"src\":require('../assets/logo.svg'),\"aspect-ratio\":\"1\",\"contain\":\"\"}})],1),_c('div',{attrs:{\"id\":\"text-information\"}},[_c('div',[_vm._v(\"\\n            \"+_vm._s(_vm.name)+\"\\n          \")])])]),_c('div',{staticClass:\"font-weight-light text-xs-center disclaimer\"},[_vm._v(\"\\n        \"+_vm._s(_vm.$t('splash-screen.disclaimer'))+\"\\n      \")]),_c('div',{staticClass:\"font-weight-light text-xs-center splash-screen__matrix_sign\"},[_vm._v(\"\\n        \"+_vm._s(_vm.$t('splash-screen.matrix-sign'))+\"\\n      \")]),_c('div',{staticClass:\"connect-button\"},[(_vm.injectedProvider)?_c('v-btn',{on:{\"click\":function($event){return _vm.connect()}}},[_vm._v(\"\\n          \"+_vm._s(_vm.$t('splash-screen.connect-button'))+\"\\n        \")]):_c('span',{staticClass:\"no-provider\"},[_vm._v(\"\\n          \"+_vm._s(_vm.$t('splash-screen.no-provider'))+\"\\n        \")])],1),_c('div',{staticClass:\"message-container\"},[(_vm.accessDenied)?_c('no-access-message',{staticClass:\"error-message\",attrs:{\"reason\":_vm.accessDenied}}):_vm._e()],1)])],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-alert',{attrs:{\"value\":true,\"color\":\"error\",\"icon\":\"warning\",\"outline\":\"\"}},[_c('div',{staticClass:\"font-weight-light message\"},[(_vm.networkUnsupported)?_c('span',[_vm._v(\"\\n      \"+_vm._s(_vm.$t('no-access.unsupported-network'))+\"\\n    \")]):(_vm.initializationFailed)?_c('span',[_vm._v(\"\\n      \"+_vm._s(_vm.$t('no-access.sdk-initialization-failure'))+\"\\n    \")]):_c('span',[_vm._v(\"\\n      \"+_vm._s(_vm.$t('no-access.generic-error'))+\"\\n    \")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\nimport { DeniedReason } from '@/model/types';\n\n@Component({})\nexport default class NoAccessMessage extends Vue {\n  @Prop({ required: true })\n  reason!: DeniedReason;\n\n  get networkUnsupported(): boolean {\n    return this.reason === DeniedReason.UNSUPPORTED_NETWORK;\n  }\n\n  get initializationFailed(): boolean {\n    return this.reason === DeniedReason.INITIALIZATION_FAILED;\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoAccessMessage.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NoAccessMessage.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./NoAccessMessage.vue?vue&type=template&id=87e410e6&scoped=true&\"\nimport script from \"./NoAccessMessage.vue?vue&type=script&lang=ts&\"\nexport * from \"./NoAccessMessage.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./NoAccessMessage.vue?vue&type=style&index=0&id=87e410e6&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"87e410e6\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/home/circleci/src/raiden-dapp/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAlert } from 'vuetify/lib'\ninstallComponents(component, {VAlert})\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Emit, Vue } from 'vue-property-decorator';\nimport { Web3Provider } from '@/services/web3-provider';\nimport { DeniedReason } from '@/model/types';\nimport { mapState } from 'vuex';\nimport NoAccessMessage from '@/components/NoAccessMessage.vue';\n\n@Component({\n  components: {\n    NoAccessMessage\n  },\n  computed: mapState(['accessDenied'])\n})\nexport default class Loading extends Vue {\n  accessDenied!: DeniedReason;\n  name: string = 'Raiden dApp';\n\n  get injectedProvider(): boolean {\n    return Web3Provider.injectedWeb3Available();\n  }\n\n  @Emit()\n  connect() {}\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SplashScreen.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SplashScreen.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./SplashScreen.vue?vue&type=template&id=796a8ef9&scoped=true&\"\nimport script from \"./SplashScreen.vue?vue&type=script&lang=ts&\"\nexport * from \"./SplashScreen.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./SplashScreen.vue?vue&type=style&index=0&id=796a8ef9&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"796a8ef9\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/home/circleci/src/raiden-dapp/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib'\nimport { VContainer } from 'vuetify/lib'\nimport { VFlex } from 'vuetify/lib'\nimport { VImg } from 'vuetify/lib'\nimport { VLayout } from 'vuetify/lib'\ninstallComponents(component, {VBtn,VContainer,VFlex,VImg,VLayout})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (!_vm.loading && _vm.defaultAccount)?_c('v-layout',{staticClass:\"app-header\",attrs:{\"column\":\"\"}},[_c('v-layout',{staticClass:\"app-header__top\",attrs:{\"justify-center\":\"\",\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('div',{staticClass:\"app-header__top__content\"},[_c('div',{staticClass:\"app-header__top__content__back\"},[(_vm.canGoBack)?_c('v-btn',{attrs:{\"flat\":\"\",\"icon\":\"\"},on:{\"click\":function($event){return _vm.onBackClicked()}}},[_c('v-img',{attrs:{\"src\":require('../assets/back_arrow.svg')}})],1):_vm._e()],1),_c('v-spacer'),_c('v-layout',{attrs:{\"column\":\"\",\"align-center\":\"\",\"justify-center\":\"\"}},[_c('div',{staticClass:\"app-header__top__content__title\"},[_vm._v(\"\\n            \"+_vm._s(_vm.$route.meta.title)+\"\\n          \")]),_c('div',{staticClass:\"app-header__top__content__network\"},[_vm._v(\"\\n            \"+_vm._s(_vm.network)+\"\\n          \")])]),_c('v-spacer'),_c('div',[_c('v-img',{staticClass:\"app-header__top__content__blockie\",attrs:{\"src\":_vm.$blockie(_vm.defaultAccount),\"height\":\"36\",\"width\":\"36\",\"contain\":\"\",\"aspect-ratio\":\"1\"}})],1)],1)])],1),_c('v-layout',{staticClass:\"app-header__bottom\",attrs:{\"align-center\":\"\"}},[_c('v-flex',{attrs:{\"xs6\":\"\"}},[_c('div',{staticClass:\"app-header__bottom__address text-xs-left\"},[_c('v-tooltip',{attrs:{\"bottom\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('span',_vm._g({},on),[_vm._v(\"\\n              \"+_vm._s(_vm._f(\"truncate\")(_vm.defaultAccount,8))+\"\\n            \")])]}}],null,false,3329657142)},[_c('span',[_vm._v(_vm._s(_vm.defaultAccount))])]),_c('v-tooltip',{attrs:{\"bottom\":\"\",\"dark\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('v-btn',_vm._g({attrs:{\"flat\":\"\",\"icon\":\"\"},on:{\"click\":function($event){return _vm.copy()}}},on),[_c('v-img',{staticClass:\"app-header__bottom__address__copy\",attrs:{\"src\":require('../assets/copy_icon.svg'),\"contain\":\"\"}})],1)]}}],null,false,1205151322),model:{value:(_vm.copied),callback:function ($$v) {_vm.copied=$$v},expression:\"copied\"}},[_c('span',[_vm._v(\"\\n            \"+_vm._s(_vm.$t('app-header.copy-success'))+\"\\n          \")])])],1)]),_c('v-flex',{attrs:{\"xs6\":\"\"}},[_c('div',{staticClass:\"app-header__bottom__balance text-xs-right\"},[_vm._v(\"\\n        \"+_vm._s(_vm._f(\"decimals\")(_vm.accountBalance))+\"\\n        \"),_c('span',{staticClass:\"app-header__bottom__balance__currency\"},[_vm._v(\"\\n          \"+_vm._s(_vm.$t('app-header.currency'))+\"\\n        \")])])])],1),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.defaultAccount),expression:\"defaultAccount\"}],ref:\"copy\",staticClass:\"app-header__copy-area\",domProps:{\"value\":(_vm.defaultAccount)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.defaultAccount=$event.target.value}}})],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Mixins } from 'vue-property-decorator';\nimport { mapGetters, mapState } from 'vuex';\nimport BlockieMixin from '@/mixins/blockie-mixin';\nimport { RouteNames } from '@/route-names';\nimport NavigationMixin from '@/mixins/navigation-mixin';\n\n@Component({\n  computed: {\n    ...mapState(['loading', 'defaultAccount', 'accountBalance']),\n    ...mapGetters(['network'])\n  }\n})\nexport default class AppHeader extends Mixins(BlockieMixin, NavigationMixin) {\n  defaultAccount!: string;\n  loading!: boolean;\n  accountBalance!: string;\n  network!: string;\n\n  copied: boolean = false;\n  private timeout: number = 0;\n\n  get canGoBack(): boolean {\n    return this.$route.name !== RouteNames.HOME;\n  }\n\n  copy() {\n    const copyArea = this.$refs.copy as HTMLTextAreaElement;\n    copyArea.focus();\n    copyArea.select();\n    this.copied = document.execCommand('copy');\n\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n\n    this.timeout = (setTimeout(() => {\n      this.copied = false;\n    }, 2000) as unknown) as number;\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppHeader.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppHeader.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./AppHeader.vue?vue&type=template&id=010deea9&scoped=true&\"\nimport script from \"./AppHeader.vue?vue&type=script&lang=ts&\"\nexport * from \"./AppHeader.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./AppHeader.vue?vue&type=style&index=0&id=010deea9&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"010deea9\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/home/circleci/src/raiden-dapp/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib'\nimport { VFlex } from 'vuetify/lib'\nimport { VImg } from 'vuetify/lib'\nimport { VLayout } from 'vuetify/lib'\nimport { VSpacer } from 'vuetify/lib'\nimport { VTooltip } from 'vuetify/lib'\ninstallComponents(component, {VBtn,VFlex,VImg,VLayout,VSpacer,VTooltip})\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport SplashScreen from '@/components/SplashScreen.vue';\nimport AppHeader from '@/components/AppHeader.vue';\nimport { mapState } from 'vuex';\nimport { DeniedReason } from '@/model/types';\n\n@Component({\n  computed: mapState(['loading', 'accessDenied']),\n  components: { AppHeader, SplashScreen }\n})\nexport default class App extends Vue {\n  name: string;\n  initialized: boolean = false;\n  accessDenied!: DeniedReason;\n  loading!: boolean;\n\n  constructor() {\n    super();\n    this.name = 'Raiden dApp';\n  }\n\n  get inaccessible() {\n    return (\n      !this.initialized ||\n      this.loading ||\n      this.accessDenied !== DeniedReason.UNDEFINED\n    );\n  }\n\n  async connect() {\n    this.initialized = false;\n    this.$store.commit('reset');\n    await this.$raiden.connect();\n    await this.$raiden.fetchTokens();\n    this.initialized = true;\n  }\n\n  destroyed() {\n    this.$raiden.disconnect();\n  }\n}\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--14-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/ts-loader/index.js??ref--14-3!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=26f51c72&scoped=true&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=26f51c72&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"26f51c72\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/home/circleci/src/raiden-dapp/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VApp } from 'vuetify/lib'\nimport { VContainer } from 'vuetify/lib'\nimport { VContent } from 'vuetify/lib'\ninstallComponents(component, {VApp,VContainer,VContent})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"content-host\"},[_c('app-core')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('TokenNetworks')}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"column\":\"\",\"justify-space-between\":\"\",\"fill-height\":\"\"}},[_c('list-header',{staticClass:\"connected-tokens__header\",attrs:{\"header\":_vm.$t('tokens.connected.header')}}),_c('v-layout',{attrs:{\"justify-center\":\"\",\"row\":\"\",\"fill-height\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('v-list',{staticClass:\"connected-tokens__tokens\"},_vm._l((_vm.tokens),function(token,index){return _c('v-list-group',{key:token.token,staticClass:\"connected-tokens__tokens__token\",attrs:{\"id\":(\"token-\" + index),\"no-action\":\"\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(){return [_c('v-list-tile',[_c('v-list-tile-avatar',{staticClass:\"list-blockie\"},[_c('img',{attrs:{\"src\":_vm.$blockie(token.address),\"alt\":_vm.$t('tokens.connected.token.blockie-alt')}})]),_c('v-list-tile-content',[_c('v-list-tile-title',{staticClass:\"connected-tokens__tokens__token__info\"},[_vm._v(\"\\n                  \"+_vm._s(_vm.$t('tokens.connected.token.token-info', {\n                      symbol: token.symbol,\n                      name: token.name\n                    }))+\"\\n                \")]),_c('v-list-tile-sub-title',{staticClass:\"connected-tokens__tokens__token__address\"},[_vm._v(\"\\n                  \"+_vm._s(token.address)+\"\\n                \")])],1)],1)]},proxy:true}],null,true)},[_c('div',{staticClass:\"connected-tokens__tokens__token__expanded\",attrs:{\"id\":(\"expanded-area-\" + index)}},[_c('v-layout',{attrs:{\"justify-center\":\"\",\"row\":\"\"}},[_c('v-btn',{staticClass:\"text-capitalize connected-tokens__tokens__token__button\",attrs:{\"id\":(\"pay-\" + index),\"to\":(\"/transfer/\" + (token.address))}},[_vm._v(\"\\n                \"+_vm._s(_vm.$t('tokens.connected.token.buttons.pay'))+\"\\n              \")]),_c('v-btn',{staticClass:\"text-capitalize connected-tokens__tokens__token__button leave\",attrs:{\"id\":(\"leave-\" + index)},on:{\"click\":function($event){return _vm.leaveNetwork(token)}}},[_vm._v(\"\\n                \"+_vm._s(_vm.$t('tokens.connected.token.buttons.disconnect'))+\"\\n              \")]),_c('v-btn',{staticClass:\"text-capitalize connected-tokens__tokens__token__button\",attrs:{\"to\":(\"/channels/\" + (token.address))}},[_vm._v(\"\\n                \"+_vm._s(_vm.$t('tokens.connected.token.buttons.view-channels'))+\"\\n              \")])],1)],1)])}),1)],1)],1),_c('v-layout',{staticClass:\"connected-tokens__button\",attrs:{\"align-center\":\"\",\"justify-center\":\"\",\"row\":\"\"}},[_c('v-flex',{staticClass:\"text-xs-center\",attrs:{\"xs10\":\"\"}},[_c('v-btn',{staticClass:\"text-capitalize confirm-button\",attrs:{\"to\":\"/connect\",\"large\":\"\",\"depressed\":\"\"}},[_vm._v(\"\\n        \"+_vm._s(_vm.$t('tokens.connect-new'))+\"\\n      \")])],1)],1),_c('confirmation-dialog',{attrs:{\"display\":_vm.leaveModalVisible},on:{\"confirm\":function($event){return _vm.leaveConfirmed()},\"cancel\":function($event){return _vm.leaveCancelled()}},scopedSlots:_vm._u([{key:\"header\",fn:function(){return [_vm._v(\"\\n      \"+_vm._s(_vm.$t('tokens.disconnect-dialog.header'))+\"\\n    \")]},proxy:true}])},[(_vm.selectedToken)?_c('i18n',{attrs:{\"path\":\"tokens.disconnect-dialog.confirmation-message\",\"tag\":\"div\"}},[_c('b',{attrs:{\"place\":\"symbol\"}},[_vm._v(_vm._s(_vm.selectedToken.symbol))]),_c('span',{staticClass:\"connected-tokens__tokens__token__leave__address\",attrs:{\"place\":\"address\"}},[_vm._v(\"\\n        \"+_vm._s(_vm.selectedToken.address)+\"\\n      \")])]):_vm._e()],1),_c('progress-overlay',{attrs:{\"display\":_vm.loading,\"steps\":_vm.steps}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\",\"justify-center\":\"\"}},[_c('v-dialog',{attrs:{\"persistent\":\"\",\"max-width\":\"625\"},model:{value:(_vm.display),callback:function ($$v) {_vm.display=$$v},expression:\"display\"}},[_c('v-card',[_c('v-card-title',[_c('v-flex',[_c('h1',{staticClass:\"confirmation-dialog__header\"},[_vm._t(\"header\")],2)])],1),_c('v-card-text',[_c('p',{staticClass:\"confirmation-dialog__message\"},[_vm._t(\"default\")],2)]),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{staticClass:\"confirmation-dialog__button\",attrs:{\"flat\":\"\"},on:{\"click\":function($event){return _vm.cancel()}}},[_vm._v(\"\\n          \"+_vm._s(_vm.$t('confirmation-dialog.buttons.cancel'))+\"\\n        \")]),_c('v-btn',{staticClass:\"confirmation-dialog__button confirmation-dialog__button__primary\",attrs:{\"flat\":\"\"},on:{\"click\":function($event){return _vm.confirm()}}},[_vm._v(\"\\n          \"+_vm._s(_vm.$t('confirmation-dialog.buttons.confirm'))+\"\\n        \")]),_c('v-spacer')],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\n\n@Component({})\nexport default class ConfirmationDialog extends Vue {\n  @Prop({ required: true })\n  display!: boolean;\n\n  confirm() {\n    this.$emit('confirm');\n  }\n\n  cancel() {\n    this.$emit('cancel');\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfirmationDialog.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ConfirmationDialog.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ConfirmationDialog.vue?vue&type=template&id=01da42d8&scoped=true&\"\nimport script from \"./ConfirmationDialog.vue?vue&type=script&lang=ts&\"\nexport * from \"./ConfirmationDialog.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ConfirmationDialog.vue?vue&type=style&index=0&id=01da42d8&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"01da42d8\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/home/circleci/src/raiden-dapp/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib'\nimport { VCard } from 'vuetify/lib'\nimport { VCardActions } from 'vuetify/lib'\nimport { VCardText } from 'vuetify/lib'\nimport { VCardTitle } from 'vuetify/lib'\nimport { VDialog } from 'vuetify/lib'\nimport { VFlex } from 'vuetify/lib'\nimport { VLayout } from 'vuetify/lib'\nimport { VSpacer } from 'vuetify/lib'\ninstallComponents(component, {VBtn,VCard,VCardActions,VCardText,VCardTitle,VDialog,VFlex,VLayout,VSpacer})\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Mixins } from 'vue-property-decorator';\nimport { mapGetters } from 'vuex';\nimport ConfirmationDialog from '@/components/ConfirmationDialog.vue';\nimport { StepDescription, TokenModel } from '@/model/types';\nimport ProgressOverlay from '@/components/ProgressOverlay.vue';\nimport BlockieMixin from '@/mixins/blockie-mixin';\nimport ListHeader from '@/components/ListHeader.vue';\n\n@Component({\n  components: { ListHeader, ProgressOverlay, ConfirmationDialog },\n  computed: mapGetters(['tokens'])\n})\nexport default class Tokens extends Mixins(BlockieMixin) {\n  tokens!: TokenModel[];\n  selectedToken: TokenModel | null = null;\n  leaveModalVisible: boolean = false;\n\n  loading: boolean = false;\n  steps: StepDescription[] = [];\n\n  created() {\n    this.steps = [(this.$t('tokens.leave-progress') as any) as StepDescription];\n  }\n\n  private dismissModal() {\n    this.leaveModalVisible = false;\n    this.selectedToken = null;\n  }\n\n  leaveNetwork(token: TokenModel) {\n    this.selectedToken = token;\n    this.leaveModalVisible = true;\n  }\n\n  async leaveConfirmed() {\n    const address = this.selectedToken!.address;\n    this.dismissModal();\n    this.loading = true;\n    await this.$raiden.leaveNetwork(address);\n    this.loading = false;\n  }\n\n  leaveCancelled() {\n    this.dismissModal();\n  }\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tokens.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tokens.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Tokens.vue?vue&type=template&id=fcb7959e&scoped=true&\"\nimport script from \"./Tokens.vue?vue&type=script&lang=ts&\"\nexport * from \"./Tokens.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Tokens.vue?vue&type=style&index=0&id=fcb7959e&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"fcb7959e\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/home/circleci/src/raiden-dapp/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib'\nimport { VFlex } from 'vuetify/lib'\nimport { VLayout } from 'vuetify/lib'\nimport { VList } from 'vuetify/lib'\nimport { VListGroup } from 'vuetify/lib'\nimport { VListTile } from 'vuetify/lib'\nimport { VListTileAvatar } from 'vuetify/lib'\nimport { VListTileContent } from 'vuetify/lib'\nimport { VListTileSubTitle } from 'vuetify/lib'\nimport { VListTileTitle } from 'vuetify/lib'\ninstallComponents(component, {VBtn,VFlex,VLayout,VList,VListGroup,VListTile,VListTileAvatar,VListTileContent,VListTileSubTitle,VListTileTitle})\n","\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport Tokens from '@/components/Tokens.vue';\n\n@Component({\n  components: { TokenNetworks: Tokens }\n})\nexport default class AppCore extends Vue {}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppCore.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AppCore.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./AppCore.vue?vue&type=template&id=fabb8be6&\"\nimport script from \"./AppCore.vue?vue&type=script&lang=ts&\"\nexport * from \"./AppCore.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","\n\n\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport AppCore from '@/components/AppCore.vue';\n\n@Component({\n  components: {\n    AppCore\n  }\n})\nexport default class Home extends Vue {}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Home.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./Home.vue?vue&type=template&id=16abdf63&scoped=true&\"\nimport script from \"./Home.vue?vue&type=script&lang=ts&\"\nexport * from \"./Home.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./Home.vue?vue&type=style&index=0&id=16abdf63&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"16abdf63\",\n  null\n  \n)\n\nexport default component.exports","/* istanbul ignore file */\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport Home from './views/Home.vue';\nimport { RouteNames } from '@/route-names';\n\nVue.use(Router);\n\nexport default new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/',\n      name: RouteNames.HOME,\n      meta: {\n        title: 'Raiden dApp'\n      },\n      component: Home\n    },\n    {\n      path: '*',\n      redirect: '/'\n    },\n    {\n      path: '/transfer/:token',\n      name: RouteNames.TRANSFER,\n      meta: {\n        title: 'Send transaction'\n      },\n      component: () => import('./views/Transfer.vue')\n    },\n    {\n      path: '/connect',\n      name: RouteNames.SELECT_TOKEN,\n      meta: {\n        title: 'Select token'\n      },\n      component: () => import('./views/SelectToken.vue')\n    },\n    {\n      path: '/connect/:token',\n      name: RouteNames.SELECT_HUB,\n      meta: {\n        title: 'Select hub'\n      },\n      component: () => import('./views/SelectHub.vue')\n    },\n    {\n      path: '/connect/:token/:partner',\n      name: RouteNames.DEPOSIT,\n      meta: {\n        title: 'Open channel'\n      },\n      component: () => import('./views/OpenChannel.vue')\n    },\n    {\n      path: '/channels/:token',\n      name: RouteNames.CHANNELS,\n      meta: {\n        title: 'Channels'\n      },\n      component: () => import('./views/Channels.vue')\n    }\n  ]\n});\n","import Vue from 'vue';\nimport Vuex, { StoreOptions } from 'vuex';\nimport { RootState, Tokens } from '@/types';\nimport { RaidenChannel, RaidenChannels } from 'raiden';\nimport {\n  DeniedReason,\n  AccTokenModel,\n  emptyTokenModel,\n  PlaceHolderNetwork,\n  Token,\n  TokenModel\n} from '@/model/types';\nimport map from 'lodash/map';\nimport flatMap from 'lodash/flatMap';\nimport clone from 'lodash/clone';\nimport reduce from 'lodash/reduce';\nimport { Network } from 'ethers/utils';\n\nVue.use(Vuex);\n\nconst _defaultState: RootState = {\n  loading: true,\n  defaultAccount: '',\n  accountBalance: '0.0',\n  providerDetected: true,\n  accessDenied: DeniedReason.UNDEFINED,\n  channels: {},\n  tokens: {},\n  network: PlaceHolderNetwork\n};\n\nexport function defaultState(): RootState {\n  return clone(_defaultState);\n}\n\nconst store: StoreOptions<RootState> = {\n  state: defaultState(),\n  mutations: {\n    noProvider(state: RootState) {\n      state.providerDetected = false;\n    },\n    accessDenied(state: RootState, reason: DeniedReason) {\n      state.accessDenied = reason;\n    },\n    account(state: RootState, account: string) {\n      state.defaultAccount = account;\n    },\n    loadComplete(state: RootState) {\n      state.loading = false;\n    },\n    balance(state: RootState, balance: string) {\n      state.accountBalance = balance;\n    },\n    updateChannels(state: RootState, channels: RaidenChannels) {\n      state.channels = channels;\n    },\n    updateTokens(state: RootState, tokens: Tokens) {\n      state.tokens = Object.assign({}, tokens);\n    },\n    network(state: RootState, network: Network) {\n      state.network = network;\n    },\n    reset(state: RootState) {\n      Object.assign(state, defaultState());\n    }\n  },\n  actions: {},\n  getters: {\n    tokens: function(state: RootState): TokenModel[] {\n      const reducer = (\n        acc: AccTokenModel,\n        channel: RaidenChannel\n      ): AccTokenModel => {\n        acc.address = channel.token;\n        (acc[channel.state] as number) += 1;\n        return acc;\n      };\n\n      return map(flatMap(state.channels), tokenChannels => {\n        const model = reduce(tokenChannels, reducer, emptyTokenModel());\n        const tokenInfo = state.tokens[model.address];\n        if (tokenInfo) {\n          model.name = tokenInfo.name || '';\n          model.symbol = tokenInfo.symbol || '';\n        }\n\n        return model;\n      });\n    },\n    allTokens: (state: RootState): Token[] => {\n      return reduce(\n        state.tokens,\n        (result: Token[], value: Token, key: string) => {\n          const model: Token = {\n            address: key,\n            balance: value.balance,\n            decimals: value.decimals,\n            units: value.units,\n            symbol: value.symbol,\n            name: value.name\n          };\n          result.push(model);\n          return result;\n        },\n        []\n      );\n    },\n    channels: (state: RootState) => (tokenAddress: string) => {\n      let channels: RaidenChannel[] = [];\n      const tokenChannels = state.channels[tokenAddress];\n      if (tokenChannels) {\n        channels = flatMap(tokenChannels);\n      }\n      return channels;\n    },\n    token: (state: RootState) => (tokenAddress: string) => {\n      if (tokenAddress in state.tokens) {\n        return state.tokens[tokenAddress];\n      } else {\n        return null;\n      }\n    },\n    network: (state: RootState) => {\n      return state.network.name || `Chain ${state.network.chainId}`;\n    }\n  }\n};\n\nexport default new Vuex.Store(store);\n","/* eslint-disable no-console */\n/* istanbul ignore file */\n\nimport { register } from 'register-service-worker';\n\nif (process.env.NODE_ENV === 'production') {\n  register(`${process.env.BASE_URL}service-worker.js`, {\n    ready() {\n      console.log(\n        'App is being served from cache by a service worker.\\n' +\n          'For more details, visit https://goo.gl/AFskqB'\n      );\n    },\n    registered() {\n      console.log('Service worker has been registered.');\n    },\n    cached() {\n      console.log('Content has been cached for offline use.');\n    },\n    updatefound() {\n      console.log('New content is downloading.');\n    },\n    updated() {\n      console.log('New content is available; please refresh.');\n    },\n    offline() {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    },\n    error(error) {\n      console.error('Error during service worker registration:', error);\n    }\n  });\n}\n","/* istanbul ignore file */\nimport Component from 'vue-class-component';\n\n// Register the router hooks with their names\nComponent.registerHooks([\n  'beforeRouteEnter',\n  'beforeRouteLeave',\n  'beforeRouteUpdate'\n]);\n","import _Vue from 'vue';\nimport RaidenService from '@/services/raiden-service';\nimport store from '@/store';\n\nexport function RaidenPlugin(Vue: typeof _Vue, options?: any): void {\n  Vue.prototype.$raiden = new RaidenService(store);\n}\n\ndeclare module 'vue/types/vue' {\n  // 3. Declare augmentation for Vue\n  interface Vue {\n    $raiden: RaidenService;\n  }\n}\n","import makeBlockie from 'ethereum-blockies-base64';\n\nexport class IdenticonCache {\n  private cache: { [id: string]: string } = {};\n\n  constructor() {}\n\n  public getIdenticon(address: string): string {\n    const cached = this.cache[address];\n\n    if (!cached) {\n      const generated = makeBlockie(address);\n      this.cache[address] = generated;\n      return generated;\n    } else {\n      return cached;\n    }\n  }\n}\n","import _Vue from 'vue';\nimport { IdenticonCache } from '@/services/identicon-cache';\n\nexport function IdenticonPlugin(Vue: typeof _Vue, options?: any): void {\n  Vue.prototype.$identicon = new IdenticonCache();\n}\n\ndeclare module 'vue/types/vue' {\n  // 3. Declare augmentation for Vue\n  interface Vue {\n    $identicon: IdenticonCache;\n  }\n}\n","/* istanbul ignore file */\nimport Vue from 'vue';\nimport VueI18n, { LocaleMessages } from 'vue-i18n';\n\nVue.use(VueI18n);\n\nfunction loadLocaleMessages(): LocaleMessages {\n  const locales = require.context(\n    './locales',\n    true,\n    /[A-Za-z0-9-_,\\s]+\\.json$/i\n  );\n  const messages: LocaleMessages = {};\n  locales.keys().forEach(key => {\n    const matched = key.match(/([A-Za-z0-9-_]+)\\./i);\n    if (matched && matched.length > 1) {\n      const locale = matched[1];\n      messages[locale] = locales(key);\n    }\n  });\n  return messages;\n}\n\nexport default new VueI18n({\n  locale: process.env.VUE_APP_I18N_LOCALE || 'en',\n  fallbackLocale: process.env.VUE_APP_I18N_FALLBACK_LOCALE || 'en',\n  messages: loadLocaleMessages()\n});\n","/* istanbul ignore file */\nimport Vue from 'vue';\nimport '@/plugins/vuetify';\nimport '@/plugins/class-component.hooks';\nimport '@/filters';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport './registerServiceWorker';\nimport './class-component-hooks';\nimport { RaidenPlugin } from '@/plugins/raiden';\nimport { IdenticonPlugin } from '@/plugins/identicon-plugin';\nimport i18n from './i18n';\n\nVue.config.productionTip = false;\n\nVue.use(RaidenPlugin);\nVue.use(IdenticonPlugin);\n\nnew Vue({\n  router,\n  store,\n\n  created() {\n    if (sessionStorage.redirect) {\n      const redirect = sessionStorage.redirect;\n      delete sessionStorage.redirect;\n      this.$router.push(redirect);\n    }\n  },\n\n  i18n,\n  render: h => h(App)\n}).$mount('#app');\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport * as t from 'io-ts';\nimport { bigNumberify, getAddress, isHexString, hexDataLength } from 'ethers/utils';\nimport { Two } from 'ethers/constants';\nimport { LosslessNumber } from 'lossless-json';\nimport { memoize } from 'lodash';\nconst isStringifiable = (u) => \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nu !== null && u !== undefined && typeof u['toString'] === 'function';\nconst isBigNumber = (u) => u && u['_ethersType'] === 'BigNumber';\n/**\n * Codec of ethers.utils.BigNumber objects\n * Input can be anything bigNumberify-able: number, string, LosslessNumber or BigNumber\n * Output is LosslessNumber, so we can JSON-serialize with 'number' types bigger than JS VM limits\n * of ±2^53, as Raiden full-client/python stdlib json encode/decode longs as json number.\n */\nexport const BigNumberC = new t.Type('BigNumber', isBigNumber, (u, c) => {\n    if (isBigNumber(u))\n        return t.success(u);\n    try {\n        if (isStringifiable(u))\n            return t.success(bigNumberify(u.toString()));\n    }\n    catch (err) {\n        return t.failure(u, c, err.message);\n    }\n    return t.failure(u, c);\n}, a => new LosslessNumber(a.toString()));\n/**\n * Creates a NEW codec for a specific [non-const] enum object\n */\nexport class EnumType extends t.Type {\n    constructor(e, name) {\n        super(name || 'enum', (u) => Object.values(this.enumObject).some(v => v === u), (u, c) => (this.is(u) ? t.success(u) : t.failure(u, c)), t.identity);\n        this._tag = 'EnumType';\n        this.enumObject = e;\n    }\n}\n/**\n * Helper function to create codecs to validate an arbitrary or variable-sized hex bytestring\n * A branded codec to indicate validated hex-strings\n *\n * @param size  Required number of bytes. Pass undefined or zero to have a variable-sized type\n * @returns branded  codec for hex-encoded bytestrings\n */\nexport const HexString = memoize(function (size) {\n    return t.brand(t.string, (n) => typeof n === 'string' && (size ? hexDataLength(n) === size : isHexString(n)), 'HexString');\n});\n/**\n * Helper function to create codecs to validate an arbitrary or variable-sized BigNumbers\n * A branded codec/type to indicate size-validated BigNumbers\n *\n * @param size  Required number of bytes. Pass undefined or zero to have a variable-sized type\n * @returns branded  codec for hex-encoded bytestrings\n */\nexport const UInt = memoize(function (size) {\n    const max = size ? Two.pow(size * 8) : undefined;\n    return t.brand(BigNumberC, (n) => BigNumberC.is(n) && n.gte(0) && (max === undefined || n.lt(max)), 'UInt');\n});\n// specific types\n// strig brand: ECDSA signature as an hex-string\nexport const Signature = HexString(65);\n// string brand: 256-bit hash, usually keccak256 or sha256\nexport const Hash = HexString(32);\n// string brand: a secret bytearray, non-sized\nexport const Secret = HexString();\n// string brand: ECDSA private key, 32 bytes\nexport const PrivateKey = HexString(32);\n// string brand: checksummed address, 20 bytes\nexport const Address = t.brand(HexString(20), (u) => {\n    try {\n        return typeof u === 'string' && getAddress(u) === u;\n    }\n    catch (e) { }\n    return false;\n}, // type guard for branded values\n'Address');\n//# sourceMappingURL=types.js.map","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Two } from 'ethers/constants';\nimport { bigNumberify } from 'ethers/utils';\nimport { hexlify, isArrayish, hexZeroPad, hexDataLength } from 'ethers/utils/bytes';\nimport { parse } from 'lossless-json';\nimport { BigNumberC } from './types';\n/**\n * Encode data to hex string of exactly length size (in bytes)\n * Throw if data can't be made to fit in length.\n *\n * @param data May be of multiple types:\n *      - number|BigNumber: Encoded in the big-endian byte-order and left-zero-padded to length\n *      - string: Must be hex-encoded string of length bytes\n *      - number[] Must be of exactly of length size (left/right-pad it before if needed)\n * @param length The expected length of the hex string, in bytes\n * @returns HexString byte-array of length\n */\nexport function encode(data, length) {\n    let hex;\n    if (typeof data === 'number')\n        data = bigNumberify(data);\n    if (BigNumberC.is(data)) {\n        if (data.lt(0))\n            throw new Error('Number is negative');\n        if (data.gte(Two.pow(length * 8)))\n            throw new Error('Number too large');\n        hex = hexZeroPad(hexlify(data), length);\n    }\n    else if (typeof data === 'string' || isArrayish(data)) {\n        const str = hexlify(data);\n        if (hexDataLength(str) !== length)\n            throw new Error('Uint8Array or hex string must be of exact length');\n        hex = str;\n    }\n    else {\n        throw new Error('data is not a HexString or Uint8Array');\n    }\n    return hex;\n}\nconst isLosslessNumber = (u) => \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nu && u['isLosslessNumber'] === true;\n/**\n * Opportunistic JSON.parse regarding numbers\n * If possible to decode a JSON number as JS number (i.e. value < 2^53) and return 'number',\n * otherwise returns LosslessNumber object, which can be decoded as BigNumber by BigNumberC\n * Throws if handled invalid JSON\n *\n * @param text JSON string to parse\n * @returns Decoded object\n */\nexport function losslessParse(text) {\n    return parse(text, ({}, value) => {\n        if (isLosslessNumber(value)) {\n            try {\n                return value.valueOf(); // return number, if possible, or throw if > 2^53\n            }\n            catch (e) { } // else, pass to return LosslessNumber, which can be decoded by BigNumberC\n        }\n        return value;\n    });\n}\nexport { stringify as losslessStringify } from 'lossless-json';\n//# sourceMappingURL=data.js.map","import * as t from 'io-ts';\nimport { Address, Hash, Signature, UInt } from '../utils/types';\n// Represents a HashTime-Locked amount in a channel\nexport const Lock = t.type({\n    type: t.literal('Lock'),\n    amount: UInt(32),\n    expiration: UInt(32),\n    secrethash: Hash,\n}, 'Lock');\n/**\n * Balance Proof constructed from an EnvelopeMessage\n * Either produced by us or received from the partner, the BPs are generated from the messages\n * because BP signature requires the hash of the message, for authentication of data not included\n * nor relevant for the smartcontract/BP itself, but so for the peers (e.g. payment_id)\n */\nexport const SignedBalanceProof = t.type({\n    // channel data\n    chainId: UInt(32),\n    tokenNetworkAddress: Address,\n    channelId: UInt(32),\n    // balance proof data\n    nonce: UInt(8),\n    transferredAmount: UInt(32),\n    lockedAmount: UInt(32),\n    locksroot: Hash,\n    messageHash: Hash,\n    signature: Signature,\n    sender: Address,\n});\n//# sourceMappingURL=types.js.map","/* istanbul ignore file */\n/* eslint-disable @typescript-eslint/camelcase */\n/**\n * These io-ts codecs validate and decode JSON Raiden messages\n * They include BigNumber strings validation, enum validation (if needed), Address checksum\n * validation, etc, and converting everything to its respective object, where needed.\n */\nimport * as t from 'io-ts';\nimport { memoize } from 'lodash';\n// import { ThrowReporter } from 'io-ts/lib/ThrowReporter';\nimport { Address, EnumType, Hash, Secret, Signature, UInt } from '../utils/types';\nimport { Lock } from '../channels/types';\n// types\nexport var MessageType;\n(function (MessageType) {\n    MessageType[\"DELIVERED\"] = \"Delivered\";\n    MessageType[\"PROCESSED\"] = \"Processed\";\n    MessageType[\"SECRET_REQUEST\"] = \"SecretRequest\";\n    MessageType[\"SECRET_REVEAL\"] = \"RevealSecret\";\n    MessageType[\"LOCKED_TRANSFER\"] = \"LockedTransfer\";\n    MessageType[\"REFUND_TRANSFER\"] = \"RefundTransfer\";\n    MessageType[\"UNLOCK\"] = \"Secret\";\n    MessageType[\"LOCK_EXPIRED\"] = \"LockExpired\";\n})(MessageType || (MessageType = {}));\nexport const MessageTypeC = new EnumType(MessageType, 'MessageType');\n// Mixin for all tagged messages\nexport const Message = t.type({ type: MessageTypeC });\n// Mixin of a message that contains an identifier and should be ack'ed with a respective Delivered\nconst RetrieableMessage = t.intersection([\n    t.type({\n        message_identifier: UInt(8),\n    }),\n    Message,\n]);\n// Acknowledges to the sender that a RetrieableMessage was received\nexport const Delivered = t.intersection([\n    t.type({\n        type: t.literal(MessageType.DELIVERED),\n        delivered_message_identifier: UInt(8),\n    }),\n    Message,\n]);\n// Confirms some message that required state validation was successfuly processed\nexport const Processed = t.intersection([\n    t.type({\n        type: t.literal(MessageType.PROCESSED),\n    }),\n    RetrieableMessage,\n]);\n// Requests the initiator to reveal the secret for a LockedTransfer targeted to us\nexport const SecretRequest = t.intersection([\n    t.type({\n        type: t.literal(MessageType.SECRET_REQUEST),\n        payment_identifier: UInt(8),\n        secrethash: Hash,\n        amount: UInt(32),\n        expiration: UInt(32),\n    }),\n    RetrieableMessage,\n]);\n// Reveal to the target or the previous hop a secret we just learned off-chain\nexport const SecretReveal = t.intersection([\n    t.type({\n        type: t.literal(MessageType.SECRET_REVEAL),\n        secret: Secret,\n    }),\n    RetrieableMessage,\n]);\n// Mixin for messages containing a balance proof\nexport const EnvelopeMessage = t.intersection([\n    t.type({\n        chain_id: UInt(32),\n        token_network_address: Address,\n        channel_identifier: UInt(32),\n        nonce: UInt(8),\n        transferred_amount: UInt(32),\n        locked_amount: UInt(32),\n        locksroot: Hash,\n    }),\n    RetrieableMessage,\n]);\n// base for locked and refund transfer, they differentiate only on the type tag\nconst LockedTransferBase = t.intersection([\n    t.type({\n        payment_identifier: UInt(8),\n        token: Address,\n        recipient: Address,\n        lock: Lock,\n        target: Address,\n        initiator: Address,\n        fee: UInt(32),\n    }),\n    EnvelopeMessage,\n]);\n// a mediated transfer containing a locked amount\nexport const LockedTransfer = t.intersection([\n    t.type({\n        type: t.literal(MessageType.LOCKED_TRANSFER),\n    }),\n    LockedTransferBase,\n]);\n// if a mediated transfer didn't succeed, mediator can refund the amount with the same secrethash\n// so the previous hop can retry it with another neighbor\nexport const RefundTransfer = t.intersection([\n    t.type({\n        type: t.literal(MessageType.REFUND_TRANSFER),\n    }),\n    LockedTransferBase,\n]);\n// when the secret is revealed, unlock sends a new balance proof without the lock and increasing\n// the total transfered to finish the offchain transfer\nexport const Unlock = t.intersection([\n    t.type({\n        type: t.literal(MessageType.UNLOCK),\n        payment_identifier: UInt(8),\n        secret: Secret,\n    }),\n    EnvelopeMessage,\n]);\n// after mediated transfer fails and the lock expire, clean it from the locks tree\nexport const LockExpired = t.intersection([\n    t.type({\n        type: t.literal(MessageType.LOCK_EXPIRED),\n        recipient: Address,\n        secrethash: Hash,\n    }),\n    EnvelopeMessage,\n]);\n// type to require a message to be signed!\n// generic type codec for messages that must be signed\n// use it like: Codec = Signed(Message)\n// The t.TypeOf<typeof codec> will be Signed<Message>, defined later\nexport const Signed = memoize((codec) => t.intersection([codec, t.type({ signature: Signature })]));\nexport const SignedMessageCodecs = {\n    [MessageType.DELIVERED]: Signed(Delivered),\n    [MessageType.PROCESSED]: Signed(Processed),\n    [MessageType.SECRET_REQUEST]: Signed(SecretRequest),\n    [MessageType.SECRET_REVEAL]: Signed(SecretReveal),\n    [MessageType.LOCKED_TRANSFER]: Signed(LockedTransfer),\n    [MessageType.REFUND_TRANSFER]: Signed(RefundTransfer),\n    [MessageType.UNLOCK]: Signed(Unlock),\n    [MessageType.LOCK_EXPIRED]: Signed(LockExpired),\n};\n//# sourceMappingURL=types.js.map","import * as t from 'io-ts';\nimport { EnumType, UInt } from '../utils/types';\nimport { Signed, LockedTransfer, Unlock, LockExpired } from '../messages/types';\nimport { Lock, SignedBalanceProof } from './types';\nexport var ChannelState;\n(function (ChannelState) {\n    ChannelState[\"opening\"] = \"opening\";\n    ChannelState[\"open\"] = \"open\";\n    ChannelState[\"closing\"] = \"closing\";\n    ChannelState[\"closed\"] = \"closed\";\n    ChannelState[\"settleable\"] = \"settleable\";\n    ChannelState[\"settling\"] = \"settling\";\n    ChannelState[\"settled\"] = \"settled\";\n})(ChannelState || (ChannelState = {}));\nexport const ChannelStateC = new EnumType(ChannelState, 'ChannelState');\n/**\n * Contains info of each side of a channel\n */\nexport const ChannelEnd = t.intersection([\n    t.type({\n        deposit: UInt(32),\n    }),\n    t.partial({\n        locks: t.array(Lock),\n        balanceProof: SignedBalanceProof,\n        history: t.record(t.string /* timestamp */, t.union([\n            Signed(LockedTransfer),\n            Signed(Unlock),\n            Signed(LockExpired),\n        ]) /* sent by this end */),\n    }),\n]);\nexport const Channel = t.intersection([\n    t.type({\n        own: ChannelEnd,\n        partner: ChannelEnd,\n    }),\n    t.union([\n        /* union of types with literals intersection allows narrowing other props presence. e.g.:\n         * if (channel.state === ChannelState.open) {\n         *   id = channel.id; // <- id can't be undefined\n         *   closeBlock = channel.closeBlock; // error: closeBlock only exist on states closed|settling\n         * }\n         */\n        t.type({ state: t.literal(ChannelState.opening) }),\n        t.type({\n            state: t.union([t.literal(ChannelState.open), t.literal(ChannelState.closing)]),\n            id: t.number,\n            settleTimeout: t.number,\n            openBlock: t.number,\n        }),\n        t.type({\n            state: t.union([\n                t.literal(ChannelState.closed),\n                t.literal(ChannelState.settleable),\n                t.literal(ChannelState.settling),\n            ]),\n            id: t.number,\n            settleTimeout: t.number,\n            openBlock: t.number,\n            closeBlock: t.number,\n        }),\n    ]),\n]);\n/**\n * Channels is a mapping from tokenNetwork -> partner -> Channel\n * As in: { [tokenNetwork: Address]: { [partner: Address]: Channel } }\n * It's used as codec and type for 'channels' key in RaidenState\n * We use t.string instead of the Address branded codecs because specialized types can't be used\n * as index mapping keys.\n */\nexport const Channels = t.record(t.string /* tokenNetwork: Address */, t.record(t.string /* partner: Address */, Channel));\n//# sourceMappingURL=state.js.map","import * as t from 'io-ts';\nexport const RaidenMatrixSetup = t.type({\n    userId: t.string,\n    accessToken: t.string,\n    deviceId: t.string,\n    displayName: t.string,\n});\n//# sourceMappingURL=state.js.map","import * as t from 'io-ts';\nimport { Signed, LockedTransfer, Processed, SecretReveal, Unlock, LockExpired, } from '../messages/types';\n/**\n * This struct holds the relevant messages exchanged in a transfer\n * The transfer state is defined by the exchanged messages\n */\nexport const SentTransfer = t.intersection([\n    t.type({\n        transfer: Signed(LockedTransfer),\n    }),\n    t.partial({\n        transferProcessed: Signed(Processed),\n        secretReveal: Signed(SecretReveal),\n        unlock: Signed(Unlock),\n        lockExpired: Signed(LockExpired),\n    }),\n]);\n/**\n * Mapping of outgoing transfers, indexed by the secrethash\n */\nexport const SentTransfers = t.record(t.string /* secrethash: Hash */, SentTransfer);\n//# sourceMappingURL=state.js.map","import * as t from 'io-ts';\nimport { ThrowReporter } from 'io-ts/lib/ThrowReporter';\nimport { AddressZero } from 'ethers/constants';\nimport { losslessParse, losslessStringify } from '../utils/data';\nimport { Address, Secret } from '../utils/types';\nimport { Channels } from '../channels';\nimport { RaidenMatrixSetup } from '../transport/state';\nimport { SentTransfers } from '../transfers/state';\n// types\nexport const RaidenState = t.type({\n    address: Address,\n    blockNumber: t.number,\n    channels: Channels,\n    tokens: t.record(t.string /* token: Address */, Address),\n    transport: t.partial({\n        matrix: t.intersection([\n            t.type({\n                server: t.string,\n            }),\n            t.partial({\n                setup: RaidenMatrixSetup,\n                rooms: t.record(t.string /* partner: Address */, t.array(t.string)),\n            }),\n        ]),\n    }),\n    secrets: t.record(t.string /* secrethash: Hash */, t.intersection([t.type({ secret: Secret }), t.partial({ registerBlock: t.number })])),\n    sent: SentTransfers,\n});\n// helpers, utils & constants\n/**\n * Encode RaidenState to a JSON string\n * For Raiden client compliance, this JSON encodes BigNumbers as 'number' (using lossless-json lib)\n * which is valid json though not very common as common JS implementations lose precision when\n * decoding through JSON.parse. This is solved in SDK by both encoding and decoding BigNumbers\n * using lossless-json, without going through the intermediary JS-number form.\n *\n * @param state RaidenState object\n * @returns JSON encoded string\n */\nexport function encodeRaidenState(state) {\n    return losslessStringify(RaidenState.encode(state), undefined, 2);\n}\n/**\n * Try to decode any data as a RaidenState.\n * If handled a string, will parse it with lossless-json, to preserve BigNumbers encoded as JSON\n * 'number'.\n *\n * @param data string | any which may be decoded as RaidenState\n * @returns RaidenState parsed and validated\n */\nexport function decodeRaidenState(data) {\n    if (typeof data === 'string')\n        data = losslessParse(data);\n    const validationResult = RaidenState.decode(data);\n    ThrowReporter.report(validationResult); // throws if decode failed\n    return validationResult.value;\n}\nexport const initialState = {\n    address: AddressZero,\n    blockNumber: 0,\n    channels: {},\n    tokens: {},\n    transport: {},\n    secrets: {},\n    sent: {},\n};\n//# sourceMappingURL=state.js.map","import { padZeros } from 'ethers/utils';\nexport const SignatureZero = padZeros([], 65);\nexport const MATRIX_KNOWN_SERVERS_URL = {\n    default: 'https://raw.githubusercontent.com/raiden-network/raiden-transport/master/known_servers.test.yaml',\n};\nexport var ShutdownReason;\n(function (ShutdownReason) {\n    ShutdownReason[\"STOP\"] = \"raidenStopped\";\n    ShutdownReason[\"ACCOUNT_CHANGED\"] = \"providerAccountChanged\";\n    ShutdownReason[\"NETWORK_CHANGED\"] = \"providerNetworkChanged\";\n})(ShutdownReason || (ShutdownReason = {}));\nexport const REVEAL_TIMEOUT = 50;\n//# sourceMappingURL=constants.js.map","/**\n * Like redux's combineReducers, but allows passing only a partial reducer mapping\n * redux's combineReducers output state must be exactly the mapping passed as parameter,\n * which doesn't allow to only provide a partial set of reducers and passthrough the other state's\n * keys. This function allows that, also preserving state/object reference when reducers doesn't\n * change state value.\n *\n * @param reducers  A mapping of a subset of state's key to nested reducers functions\n * @param initialState  global initial state, required when initializing first object with partial\n *                      reducers\n * @returns Full reducer for state S and actions A\n */\nexport function partialCombineReducers(reducers, initialState) {\n    return function (state = initialState, action) {\n        for (const key in reducers) {\n            const reducer = reducers[key];\n            if (!reducer)\n                continue; // shouldn't happen, only here for type safety below\n            const subState = state[key] || initialState[key];\n            const newSubState = reducer(subState, action);\n            if (newSubState !== subState) {\n                state = Object.assign({}, state, { [key]: newSubState });\n            }\n        }\n        return state;\n    };\n}\n//# sourceMappingURL=redux.js.map","import { createStandardAction } from 'typesafe-actions';\n/* A new head in the blockchain is detected by provider */\nexport const newBlock = createStandardAction('newBlock')();\n/* A new token network is detected in the TokenNetworkRegistry instance */\nexport const tokenMonitored = createStandardAction('tokenMonitored').map(({ token, tokenNetwork, first = false, }) => ({\n    payload: { token, tokenNetwork, first },\n}));\n/**\n * Channel actions receive ChannelId as 'meta' action property\n * This way, 'meta' can be used equally for request, success and error actions\n */\n/* Request a channel to be opened with meta={ tokenNetwork, partner } and payload.settleTimeout */\nexport const channelOpen = createStandardAction('channelOpen')();\n/* A channel is detected on-chain. Also works as 'success' for channelOpen action */\nexport const channelOpened = createStandardAction('channelOpened')();\n/* A channelOpen request action (with meta: ChannelId) failed with payload=Error */\nexport const channelOpenFailed = createStandardAction('channelOpenFailed').map((payload, meta) => ({ payload, error: true, meta }));\n/* Channel with meta:ChannelId + payload.id should be monitored */\nexport const channelMonitored = createStandardAction('channelMonitored')();\n/* Request a payload.deposit to be made to channel meta:ChannelId */\nexport const channelDeposit = createStandardAction('channelDeposit')();\n/* A deposit is detected on-chain. Also works as 'success' for channelDeposit action */\nexport const channelDeposited = createStandardAction('channelDeposited')();\n/* A channelDeposit request action (with meta: ChannelId) failed with payload=Error */\nexport const channelDepositFailed = createStandardAction('channelDepositFailed').map((payload, meta) => ({ payload, error: true, meta }));\n/* Request channel meta:ChannelId to be closed */\nexport const channelClose = createStandardAction('channelClose')();\n/* A close channel event is detected on-chain. Also works as 'success' for channelClose action */\nexport const channelClosed = createStandardAction('channelClosed')();\n/* A channelClose request action (with meta: ChannelId) failed with payload=Error */\nexport const channelCloseFailed = createStandardAction('channelCloseFailed').map((payload, meta) => ({ payload, error: true, meta }));\n/* A channel meta:ChannelId becomes settleable, starting from payload.settleableBlock */\nexport const channelSettleable = createStandardAction('channelSettleable')();\n/* Request channel meta:ChannelId to be settled */\nexport const channelSettle = createStandardAction('channelSettle')();\n/* A settle channel event is detected on-chain. Also works as 'success' for channelSettle action */\nexport const channelSettled = createStandardAction('channelSettled')();\n/* A channelSettle request action (with meta: ChannelId) failed with payload=Error */\nexport const channelSettleFailed = createStandardAction('channelSettleFailed').map((payload, meta) => ({ payload, error: true, meta }));\n//# sourceMappingURL=actions.js.map","import { isActionOf } from 'typesafe-actions';\nimport { get, set, unset } from 'lodash/fp';\nimport { Zero } from 'ethers/constants';\nimport { partialCombineReducers } from '../utils/redux';\nimport { channelClose, channelClosed, channelDeposited, channelOpen, channelOpened, channelOpenFailed, channelSettle, channelSettleable, channelSettled, newBlock, tokenMonitored, } from './actions';\nimport { ChannelState } from './state';\nimport { initialState } from '../store/state';\n// state.blockNumber specific reducer, handles only newBlock action\nfunction blockNumber(state = initialState.blockNumber, action) {\n    if (isActionOf(newBlock, action))\n        return action.payload.blockNumber;\n    else\n        return state;\n}\n// state.tokens specific reducer, handles only tokenMonitored action\nfunction tokens(state = initialState.tokens, action) {\n    if (isActionOf(tokenMonitored, action))\n        return set([action.payload.token], action.payload.tokenNetwork, state);\n    else\n        return state;\n}\n// handles all channel actions and requests\nfunction channels(state = initialState.channels, action) {\n    if (isActionOf(channelOpen, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        if (get(path, state))\n            return state; // there's already a channel with partner\n        const channel = {\n            state: ChannelState.opening,\n            own: { deposit: Zero },\n            partner: { deposit: Zero },\n        };\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelOpened, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner], channel = {\n            state: ChannelState.open,\n            own: { deposit: Zero },\n            partner: { deposit: Zero },\n            id: action.payload.id,\n            settleTimeout: action.payload.settleTimeout,\n            openBlock: action.payload.openBlock,\n        };\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelOpenFailed, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        if (get([...path, 'state'], state) !== ChannelState.opening)\n            return state;\n        return unset(path, state);\n    }\n    else if (isActionOf(channelDeposited, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel || channel.state !== ChannelState.open || channel.id !== action.payload.id)\n            return state;\n        if (action.payload.participant === action.meta.partner)\n            channel = set(['partner', 'deposit'], action.payload.totalDeposit, channel);\n        else\n            channel = set(['own', 'deposit'], action.payload.totalDeposit, channel);\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelClose, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel || channel.state !== ChannelState.open)\n            return state;\n        channel = Object.assign({}, channel, { state: ChannelState.closing });\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelClosed, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel ||\n            !(channel.state === ChannelState.open || channel.state === ChannelState.closing) ||\n            channel.id !== action.payload.id)\n            return state;\n        channel = Object.assign({}, channel, { state: ChannelState.closed, closeBlock: action.payload.closeBlock });\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelSettleable, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel || channel.state !== ChannelState.closed)\n            return state;\n        channel = Object.assign({}, channel, { state: ChannelState.settleable });\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelSettle, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel || channel.state !== ChannelState.settleable)\n            return state;\n        channel = Object.assign({}, channel, { state: ChannelState.settling });\n        return set(path, channel, state);\n    }\n    else if (isActionOf(channelSettled, action)) {\n        const path = [action.meta.tokenNetwork, action.meta.partner];\n        let channel = get(path, state);\n        if (!channel ||\n            ![ChannelState.closed, ChannelState.settleable, ChannelState.settling].includes(channel.state))\n            return state;\n        return unset(path, state);\n    }\n    else\n        return state;\n}\n/**\n * Nested/combined reducer for channels\n * blockNumber, tokens & channels reducers get its own slice of the state, corresponding to the\n * name of the reducer. channels root reducer instead must be handled the complete state instead,\n * so it compose the output with each key/nested/combined state.\n */\nexport const channelsReducer = partialCombineReducers({ blockNumber, tokens, channels }, initialState);\n//# sourceMappingURL=reducer.js.map","import { createStandardAction } from 'typesafe-actions';\n/* MatrixClient instance is ready and logged in to payload.server with credentials payload.setup */\nexport const matrixSetup = createStandardAction('matrixSetup')();\n/* Request matrix to start monitoring presence updates for meta.address */\nexport const matrixRequestMonitorPresence = createStandardAction('matrixRequestMonitorPresence')();\n/**\n * Monitored user meta.address presence updated.\n * First event for this address also works as 'success' for matrixRequestMonitorPresence\n */\nexport const matrixPresenceUpdate = createStandardAction('matrixPresenceUpdate').map(({ userId, available, ts }, meta) => ({ payload: { userId, available, ts: ts || Date.now() }, meta }));\n/* A matrixRequestMonitorPresence request action (with meta.address) failed with payload=Error */\nexport const matrixRequestMonitorPresenceFailed = createStandardAction('matrixRequestMonitorPresenceFailed').map((payload, meta) => ({ payload, error: true, meta }));\n/* payload.roomId must go front on meta.address's room queue */\nexport const matrixRoom = createStandardAction('matrixRoom')();\n/* payload.roomId must be excluded from meta.address room queue, if present */\nexport const matrixRoomLeave = createStandardAction('matrixRoomLeave')();\n//# sourceMappingURL=actions.js.map","import { isActionOf } from 'typesafe-actions';\nimport { get, getOr, isEmpty, set, unset } from 'lodash/fp';\nimport { partialCombineReducers } from '../utils/redux';\nimport { initialState } from '../store/state';\nimport { matrixSetup, matrixRoom, matrixRoomLeave } from './actions';\n/**\n * state.transport reducer\n * Handles all transport actions and requests\n *\n * @param state  Current RaidenState['transport'] slice\n * @param action  RaidenAction to handle\n * @returns New RaidenState['transport'] slice\n */\nfunction transport(state = initialState.transport, action) {\n    if (isActionOf(matrixSetup, action)) {\n        return Object.assign({}, state, { matrix: Object.assign({}, state.matrix, action.payload) });\n    }\n    else if (isActionOf(matrixRoom, action)) {\n        const path = ['matrix', 'rooms', action.meta.address];\n        return set(path, [\n            action.payload.roomId,\n            ...getOr([], path, state).filter(room => room !== action.payload.roomId),\n        ], state);\n    }\n    else if (isActionOf(matrixRoomLeave, action)) {\n        const path = ['matrix', 'rooms', action.meta.address];\n        state = set(path, getOr([], path, state).filter(r => r !== action.payload.roomId), state);\n        if (isEmpty(get(path, state)))\n            state = unset(path, state);\n        return state;\n    }\n    else\n        return state;\n}\n/**\n * Nested/combined reducer for transport\n * Currently only handles 'transport' substate\n */\nexport const transportReducer = partialCombineReducers({ transport }, initialState);\n//# sourceMappingURL=reducer.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// import * as t from 'io-ts';\nimport { ThrowReporter } from 'io-ts/lib/ThrowReporter';\nimport { keccak256, verifyMessage } from 'ethers/utils';\nimport { concat, hexlify, arrayify } from 'ethers/utils/bytes';\nimport { HashZero } from 'ethers/constants';\nimport { Signature } from '../utils/types';\nimport { encode, losslessParse, losslessStringify } from '../utils/data';\nimport { Message, MessageType, SignedMessageCodecs } from './types';\nconst CMDIDs = {\n    [MessageType.DELIVERED]: 12,\n    [MessageType.PROCESSED]: 0,\n    [MessageType.SECRET_REQUEST]: 3,\n    [MessageType.SECRET_REVEAL]: 11,\n    [MessageType.LOCKED_TRANSFER]: 7,\n    [MessageType.REFUND_TRANSFER]: 8,\n    [MessageType.UNLOCK]: 4,\n    [MessageType.LOCK_EXPIRED]: 13,\n};\n/**\n * Create the messageHash for a given EnvelopeMessage\n *\n * @param message EnvelopeMessage to pack\n * @returns Hash of the message pack\n */\nexport function createMessageHash(message) {\n    switch (message.type) {\n        case MessageType.LOCKED_TRANSFER:\n        case MessageType.REFUND_TRANSFER:\n            // hash of packed representation of the whole message\n            return keccak256(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.nonce, 8),\n                encode(message.chain_id, 32),\n                encode(message.message_identifier, 8),\n                encode(message.payment_identifier, 8),\n                encode(message.lock.expiration, 32),\n                encode(message.token_network_address, 20),\n                encode(message.token, 20),\n                encode(message.channel_identifier, 32),\n                encode(message.recipient, 20),\n                encode(message.target, 20),\n                encode(message.initiator, 20),\n                encode(message.locksroot, 32),\n                encode(message.lock.secrethash, 32),\n                encode(message.transferred_amount, 32),\n                encode(message.locked_amount, 32),\n                encode(message.lock.amount, 32),\n                encode(message.fee, 32),\n            ]));\n        case MessageType.UNLOCK:\n            return keccak256(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.chain_id, 32),\n                encode(message.message_identifier, 8),\n                encode(message.payment_identifier, 8),\n                encode(message.token_network_address, 20),\n                encode(message.secret, 32),\n                encode(message.nonce, 8),\n                encode(message.channel_identifier, 32),\n                encode(message.transferred_amount, 32),\n                encode(message.locked_amount, 32),\n                encode(message.locksroot, 32),\n            ]));\n        case MessageType.LOCK_EXPIRED:\n            return keccak256(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.nonce, 8),\n                encode(message.chain_id, 32),\n                encode(message.message_identifier, 8),\n                encode(message.token_network_address, 20),\n                encode(message.channel_identifier, 32),\n                encode(message.recipient, 20),\n                encode(message.locksroot, 32),\n                encode(message.secrethash, 32),\n                encode(message.transferred_amount, 32),\n                encode(message.locked_amount, 32),\n            ]));\n    }\n}\n/**\n * Pack a message in a hex-string format, **without** signature\n * This packed hex-byte-array can then be used for signing.\n * On Raiden python client, this is the output of `_data_to_sign` method of the messages, as the\n * actual packed encoding was once used for binary transport protocols, but nowadays is used only\n * for generating data to be signed, which is the purpose of our implementation.\n *\n * @param message Message to be packed\n * @returns HexBytes hex-encoded string data representing message in binary format\n */\nexport function packMessage(message) {\n    switch (message.type) {\n        case MessageType.DELIVERED:\n            return hexlify(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.delivered_message_identifier, 8),\n            ]));\n        case MessageType.PROCESSED:\n            return hexlify(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.message_identifier, 8),\n            ]));\n        case MessageType.LOCKED_TRANSFER:\n        case MessageType.REFUND_TRANSFER:\n        case MessageType.UNLOCK:\n        case MessageType.LOCK_EXPIRED: {\n            const messageHash = createMessageHash(message), balanceHash = (message.transferred_amount.isZero() &&\n                message.locked_amount.isZero() &&\n                message.locksroot === HashZero\n                ? HashZero\n                : keccak256(concat([\n                    encode(message.transferred_amount, 32),\n                    encode(message.locked_amount, 32),\n                    encode(message.locksroot, 32),\n                ])));\n            return hexlify(concat([\n                encode(message.token_network_address, 20),\n                encode(message.chain_id, 32),\n                encode(1, 32),\n                encode(message.channel_identifier, 32),\n                encode(balanceHash, 32),\n                encode(message.nonce, 32),\n                encode(messageHash, 32),\n            ]));\n        }\n        case MessageType.SECRET_REQUEST:\n            return hexlify(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.message_identifier, 8),\n                encode(message.payment_identifier, 8),\n                encode(message.secrethash, 32),\n                encode(message.amount, 32),\n                encode(message.expiration, 32),\n            ]));\n        case MessageType.SECRET_REVEAL:\n            return hexlify(concat([\n                encode(CMDIDs[message.type], 1),\n                encode(0, 3),\n                encode(message.message_identifier, 8),\n                encode(message.secret, 32),\n            ]));\n    }\n}\n/**\n * Typeguard to check if a message contains a valid signature\n *\n * @param message  May or may not be a signed message\n * @returns  Boolean if message is signed\n */\nexport function isSigned(message) {\n    return Signature.is(message.signature);\n}\n/**\n * Requires a signed message and returns its signer address\n *\n * @param message  Signed message to retrieve signer address\n * @returns  Address which signed message\n */\nexport function getMessageSigner(message) {\n    return verifyMessage(arrayify(packMessage(message)), message.signature);\n}\n/**\n * Get the SignedBalanceProof associated with an EnvelopeMessage\n *\n * @param message  Signed EnvelopeMessage\n * @returns SignedBalanceProof object for message\n */\nexport function getBalanceProofFromEnvelopeMessage(message) {\n    return {\n        chainId: message.chain_id,\n        tokenNetworkAddress: message.token_network_address,\n        channelId: message.channel_identifier,\n        nonce: message.nonce,\n        transferredAmount: message.transferred_amount,\n        lockedAmount: message.locked_amount,\n        locksroot: message.locksroot,\n        messageHash: createMessageHash(message),\n        signature: message.signature,\n        sender: getMessageSigner(message),\n    };\n}\n/**\n * Encode a Message as a JSON string\n * Uses lossless-json to encode BigNumbers as JSON 'number' type, as Raiden\n *\n * @param message Message object to be serialized\n * @returns JSON string\n */\nexport function encodeJsonMessage(message) {\n    const codec = SignedMessageCodecs[message.type];\n    return losslessStringify(codec.encode(message));\n}\n/**\n * Try to decode text as a Message, using lossless-json to decode BigNumbers\n * Throws if can't decode, or message is invalid regarding any of the encoded constraints\n *\n * @param text JSON string to try to decode\n * @returns Message object\n */\nexport function decodeJsonMessage(text) {\n    const parsed = losslessParse(text);\n    if (!Message.is(parsed))\n        throw new Error(`Could not find Message \"type\" in ${text}`);\n    const decoded = SignedMessageCodecs[parsed.type].decode(parsed);\n    if (decoded.isLeft())\n        throw ThrowReporter.report(decoded); // throws if decode failed\n    return decoded.value;\n}\n/**\n * Pack message and request signer to sign it, and returns signed message\n *\n * @param signer  Signer instance\n * @param message Unsigned message to pack and sign\n * @returns  Promise to signed message\n */\nexport function signMessage(signer, message) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (isSigned(message))\n            return message;\n        const signature = (yield signer.signMessage(arrayify(packMessage(message))));\n        return Object.assign({}, message, { signature });\n    });\n}\n//# sourceMappingURL=utils.js.map","import { createStandardAction } from 'typesafe-actions';\nexport const transfer = createStandardAction('transfer')();\nexport const transferSigned = createStandardAction('transferSigned')();\nexport const transferProcessed = createStandardAction('transferProcessed')();\nexport const transferSecret = createStandardAction('transferSecret')();\nexport const transferSecretRequest = createStandardAction('transferSecretRequest')();\nexport const transferUnlock = createStandardAction('transferUnlock')();\nexport const transferUnlocked = createStandardAction('transferUnlocked')();\nexport const transferUnlockProcessed = createStandardAction('transferUnlockProcessed')();\nexport const transferred = createStandardAction('transferred')();\nexport const transferFailed = createStandardAction('transferFailed').map((payload, meta) => ({ payload, error: true, meta }));\n//# sourceMappingURL=actions.js.map","import { concat, hexlify } from 'ethers/utils/bytes';\nimport { keccak256, randomBytes, bigNumberify } from 'ethers/utils';\nimport { HashZero } from 'ethers/constants';\nimport { isEmpty } from 'lodash';\nimport { encode } from '../utils/data';\n/**\n * Return the hash of a lock\n *\n * @param lock The lock to have the hash calculated from\n * @returns hash of lock\n */\nexport function lockhash(lock) {\n    return keccak256(concat([encode(lock.expiration, 32), encode(lock.amount, 32), lock.secrethash]));\n}\n/**\n * Get the locksroot of a given locks array using keccak256\n * On Red-Eyes, locksroot is the root of the merkle tree of the hashes of the locks\n * TODO: replace by list concat hash instead, after moving to raiden-contracts@^0.25\n *\n * @param locks Lock array to calculate the locksroot from\n * @returns hash of the locks array\n */\nexport function getLocksroot(locks) {\n    if (isEmpty(locks))\n        return HashZero;\n    const leaves = locks.map(lockhash);\n    while (leaves.length > 1) {\n        for (let i = 0; i < leaves.length - 1; i++) {\n            leaves.splice(i, 2, keccak256(leaves[i] + leaves[i + 1].substr(2)));\n        }\n    }\n    return leaves[0]; // merkle tree root\n}\n/**\n * Generates a random secret of given length, as an HexString<32>\n *\n * @param length of the secret to generate\n * @returns HexString<32>\n */\nexport function makeSecret(length = 32) {\n    return hexlify(randomBytes(length));\n}\n/**\n * Generates a random payment identifier, as an UInt<8> (64 bits)\n *\n * @returns UInt<8>\n */\nexport function makePaymentId() {\n    return bigNumberify(randomBytes(8));\n}\n/**\n * Generates a message identifier, as an UInt<8> (64 bits)\n *\n * @returns UInt<8>\n */\nexport function makeMessageId() {\n    return bigNumberify(Date.now());\n}\n//# sourceMappingURL=utils.js.map","import { isActionOf } from 'typesafe-actions';\nimport { get, set, unset } from 'lodash/fp';\nimport { Zero } from 'ethers/constants';\nimport { getBalanceProofFromEnvelopeMessage } from '../messages/utils';\nimport { initialState } from '../store/state';\nimport { transferSigned, transferSecret, transferProcessed, transferUnlock, transferUnlocked, transferred, } from './actions';\nimport { getLocksroot } from './utils';\n/**\n * Handles all transfers actions and requests\n *\n * @param state  Current RaidenState\n * @param action  RaidenAction to handle\n * @returns New RaidenState (or current, if action didn't change anything)\n */\nexport function transfersReducer(state = initialState, action) {\n    if (isActionOf(transferSecret, action)) {\n        if (action.meta.secrethash in state.secrets &&\n            state.secrets[action.meta.secrethash].registerBlock)\n            return state; // avoid storing without registerBlock if we already got with\n        return Object.assign({}, state, { secrets: Object.assign({}, state.secrets, { [action.meta.secrethash]: action.payload }) });\n    }\n    else if (isActionOf(transferSigned, action)) {\n        const transfer = action.payload.message, lock = transfer.lock, secrethash = lock.secrethash;\n        // transferSigned must be the first action, to init SentTransfer state\n        if (secrethash in state.sent)\n            return state;\n        const channelPath = ['channels', transfer.token_network_address, transfer.recipient];\n        let channel = get(channelPath, state);\n        if (!channel)\n            return state;\n        const locks = [...(channel.own.locks || []), lock], // append lock\n        locksroot = getLocksroot(locks);\n        if (transfer.locksroot !== locksroot ||\n            !transfer.nonce.eq((channel.own.balanceProof ? channel.own.balanceProof.nonce : Zero).add(1)) || // nonce must be next\n            !transfer.transferred_amount.eq(channel.own.balanceProof ? channel.own.balanceProof.transferredAmount : Zero) ||\n            !transfer.locked_amount.eq((channel.own.balanceProof ? channel.own.balanceProof.lockedAmount : Zero).add(lock.amount)))\n            return state;\n        channel = Object.assign({}, channel, { own: Object.assign({}, channel.own, { locks, \n                // set current/latest channel.own.balanceProof to LockedTransfer's\n                balanceProof: getBalanceProofFromEnvelopeMessage(transfer), history: Object.assign({}, channel.own.history, { [Date.now().toString()]: transfer }) }) });\n        const sentTransfer = { transfer };\n        state = set(channelPath, channel, state);\n        state = set(['sent', secrethash], sentTransfer, state);\n        return state;\n    }\n    else if (isActionOf(transferProcessed, action)) {\n        if (!(action.meta.secrethash in state.sent))\n            return state;\n        return Object.assign({}, state, { sent: Object.assign({}, state.sent, { [action.meta.secrethash]: Object.assign({}, state.sent[action.meta.secrethash], { transferProcessed: action.payload.message }) }) });\n    }\n    else if (isActionOf(transferUnlock, action)) {\n        if (!(action.meta.secrethash in state.sent))\n            return state;\n        return Object.assign({}, state, { sent: Object.assign({}, state.sent, { [action.meta.secrethash]: Object.assign({}, state.sent[action.meta.secrethash], { secretReveal: action.payload.message }) }) });\n    }\n    else if (isActionOf(transferUnlocked, action)) {\n        const unlock = action.payload.message, secrethash = action.meta.secrethash;\n        if (!(secrethash in state.sent) || state.sent[secrethash].unlock)\n            return state;\n        const transfer = state.sent[secrethash].transfer, lock = transfer.lock;\n        const channelPath = ['channels', transfer.token_network_address, transfer.recipient];\n        let channel = get(channelPath, state);\n        if (!channel || !channel.own.locks || !channel.own.balanceProof)\n            return state;\n        const locks = channel.own.locks.filter(l => l.secrethash !== secrethash), locksroot = getLocksroot(locks);\n        if (unlock.locksroot !== locksroot ||\n            !channel.own.balanceProof.nonce.add(1).eq(unlock.nonce) || // nonce must be next\n            !unlock.transferred_amount.eq(channel.own.balanceProof.transferredAmount.add(lock.amount)) ||\n            !unlock.locked_amount.eq(channel.own.balanceProof.lockedAmount.sub(lock.amount)))\n            return state;\n        channel = Object.assign({}, channel, { own: Object.assign({}, channel.own, { locks, \n                // set current/latest channel.own.balanceProof to LockedTransfer's\n                balanceProof: getBalanceProofFromEnvelopeMessage(unlock), history: Object.assign({}, channel.own.history, { [Date.now().toString()]: unlock }) }) });\n        const sentTransfer = Object.assign({}, state.sent[secrethash], { unlock });\n        state = set(channelPath, channel, state);\n        state = set(['sent', secrethash], sentTransfer, state);\n        return state;\n    }\n    else if (isActionOf(transferred, action)) {\n        if (!(action.meta.secrethash in state.sent))\n            return state;\n        state = unset(['sent', action.meta.secrethash], state);\n        state = unset(['secrets', action.meta.secrethash], state);\n        return state;\n    }\n    else\n        return state;\n}\n//# sourceMappingURL=reducer.js.map","import { channelsReducer } from './channels/reducer';\nimport { transportReducer } from './transport/reducer';\nimport { transfersReducer } from './transfers/reducer';\nimport { initialState } from './store/state';\nconst raidenReducers = {\n    channelsReducer,\n    transportReducer,\n    transfersReducer,\n};\n/**\n * Raiden root reducer\n * Apply action over each submodule root reducer in a flattened manner (iteratively).\n * Notice the submodules reducers aren't handled only a partial/deep property of the state\n * (as combineReducers), but instead receive the whole state, so they can act on any part of the\n * state. This approach is similar to `reduce-reducers` util.\n * Each submodule root reducer may then choose to split its concerns into nested or flattened\n * reducers (like this one).\n */\nexport const raidenReducer = (state = initialState, action) => Object.values(raidenReducers).reduce((s, reducer) => reducer(s, action), state);\n//# sourceMappingURL=reducer.js.map","import { createStandardAction } from 'typesafe-actions';\nexport const raidenInit = createStandardAction('raidenInit')();\nexport const raidenShutdown = createStandardAction('raidenShutdown')();\n//# sourceMappingURL=actions.js.map","import { EMPTY } from 'rxjs';\n/**\n * This epic simply pipes all states to stateOutput$ subject injected as dependency\n * As the observable output is passed directly to a subject, the subject will mirror obervable's\n * behavior, including automatically completing or erroring the subscription according to the\n * observable.\n *\n * @param action$  Observable of RaidenActions\n * @param state$  Observable of RaidenStates\n * @param stateOutput$  Subject of RaidenStates\n * @returns  Empty observable\n */\nexport const stateOutputEpic = ({}, state$, { stateOutput$ }) => (state$.subscribe(stateOutput$), EMPTY);\n/**\n * This epic simply pipes all actions to actionOutput$ subject injected as dependency\n * The same as state, but with actions\n *\n * @param action$  Observable of RaidenActions\n * @param state$  Observable of RaidenStates\n * @param actionOutput$  Subject of RaidenStates\n * @returns  Empty observable\n */\nexport const actionOutputEpic = (action$, {}, { actionOutput$ }) => (action$.subscribe(actionOutput$), EMPTY);\n//# sourceMappingURL=epics.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getNetwork as parseNetwork } from 'ethers/utils/networks';\nimport { flatten, sortBy } from 'lodash';\nimport { fromEventPattern, merge, from, of, defer, EMPTY } from 'rxjs';\nimport { filter, first, map, mergeAll, switchMap, withLatestFrom, mergeMap } from 'rxjs/operators';\n/**\n * Like rxjs' fromEvent, but event can be an EventFilter\n *\n * @param target  Object to hook event listener, maybe a Provider or Contract\n * @param event  EventFilter or string representing the event to listen to\n * @param resultSelector  A map of events arguments to output parameters\n *      Default is to pass only first parameter\n * @returns Observable of target.on(event) events\n */\nexport function fromEthersEvent(target, event, resultSelector) {\n    return fromEventPattern((handler) => target.on(event, handler), (handler) => target.removeListener(event, handler), resultSelector);\n}\n/**\n * getEventsStream returns a stream of T-type tuples (arrays) from Contract's\n * events from filters. These events are polled since provider's [re]setEventsBlock to newest\n * polled block. If both 'fromBlock$' and 'lastSeenBlock$' are specified, also fetch past events\n * since fromBlock up to lastSeenBlock$ === provider.resetEventsBlock - 1\n * T must be a tuple-like type receiving all filters arguments plus the respective Event in the end\n *\n * @param contract  Contract source instance for filters, connected to a provider\n * @param filters  array of OR filters from tokenNetwork\n * @param fromBlock$  Observable of a past blockNumber since when to fetch past events\n * @param lastSeenBlock$  Observable of latest seen block, to be used as toBlock of pastEvents.\n *      lastSeenBlock + 1 is supposed to be first one fetched by contract.on newEvents$\n *      Both fromBlock$ and lastSeenBlock$ need to be set to fetch pastEvents$\n * @returns Observable of contract's events\n */\nexport function getEventsStream(contract, filters, fromBlock$, lastSeenBlock$) {\n    const provider = contract.provider;\n    // filters for channels opened by and with us\n    const newEvents$ = from(filters).pipe(mergeMap(filter => fromEthersEvent(contract, filter, (...args) => args)));\n    let pastEvents$ = EMPTY;\n    if (fromBlock$ && lastSeenBlock$) {\n        pastEvents$ = fromBlock$.pipe(withLatestFrom(defer(() => (provider.blockNumber ? of(provider.blockNumber) : lastSeenBlock$))), first(), switchMap(([fromBlock, toBlock]) => __awaiter(this, void 0, void 0, function* () {\n            const logs = yield Promise.all(filters.map(filter => provider.getLogs(Object.assign({}, filter, { fromBlock, toBlock }))));\n            // flatten array of each getLogs query response and sort them\n            // emit log array elements as separate logs into stream\n            return from(sortBy(flatten(logs), ['blockNumber']));\n        })), mergeAll(), // async return above will be a Promise of an Observable, so unpack inner$\n        map(log => {\n            // parse log into [...args, event: Event] array,\n            // the same that contract.on events/callbacks\n            const parsed = contract.interface.parseLog(log);\n            if (!parsed)\n                return;\n            const args = Array.prototype.slice.call(parsed.values);\n            // not all parameters quite needed right now, but let's comply with the interface\n            const event = Object.assign({}, log, parsed, { args, removeListener: () => { }, getBlock: () => provider.getBlock(log.blockHash), getTransaction: () => provider.getTransaction(log.transactionHash), getTransactionReceipt: () => provider.getTransactionReceipt(log.transactionHash), decode: undefined });\n            return [...args, event];\n        }), filter((event) => !!event));\n    }\n    return merge(pastEvents$, newEvents$);\n}\n/**\n * Like Provider.getNetwork, but fetches every time instead of using cached property\n *\n * @param provider Provider to fetch data from\n * @returns Promise of Network info\n */\nexport function getNetwork(provider) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return parseNetwork(parseInt(yield provider.send('net_version', [])));\n    });\n}\n//# sourceMappingURL=ethers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { from, of, EMPTY, merge, interval, ReplaySubject } from 'rxjs';\nimport { catchError, filter, map, mergeMap, mergeMapTo, startWith, tap, takeWhile, withLatestFrom, groupBy, exhaustMap, multicast, } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { findKey, get, isEmpty, negate } from 'lodash';\nimport { HashZero, Zero } from 'ethers/constants';\nimport { ChannelState } from '../channels';\nimport { channelOpenFailed, channelMonitored, channelDepositFailed, channelCloseFailed, channelSettleFailed, channelOpen, channelOpened, channelDeposit, channelClose, channelSettle, channelSettleable, newBlock, tokenMonitored, channelDeposited, channelClosed, channelSettled, } from './actions';\nimport { raidenInit, raidenShutdown } from '../store/actions';\nimport { SignatureZero, ShutdownReason } from '../constants';\nimport { fromEthersEvent, getEventsStream, getNetwork } from '../utils/ethers';\n/**\n * Register for new block events and emit newBlock actions for new blocks\n *\n * @param action$  Observable of raidenInit actions\n * @param state$  Observable of RaidenStates\n * @param provider  RaidenEpicDeps members\n * @returns  Observable of newBlock actions\n */\nexport const initNewBlockEpic = (action$, {}, { provider }) => action$.pipe(filter(isActionOf(raidenInit)), mergeMap(() => fromEthersEvent(provider, 'block')), map(blockNumber => newBlock({ blockNumber })));\n/**\n * Monitor registry for new token networks and monitor them\n *\n * @param action$  Observable of raidenInit actions\n * @param state$  Observable of RaidenStates\n * @param registryContract,contractsInfo  RaidenEpicDeps members\n * @returns  Observable of tokenMonitored actions\n */\nexport const initMonitorRegistryEpic = (action$, state$, { registryContract, contractsInfo }) => action$.pipe(filter(isActionOf(raidenInit)), withLatestFrom(state$), mergeMap(([, state]) => merge(\n// monitor old (in case of empty tokens) and new registered tokens\n// and starts monitoring every registered token\ngetEventsStream(registryContract, [registryContract.filters.TokenNetworkCreated(null, null)], isEmpty(state.tokens) ? of(contractsInfo.TokenNetworkRegistry.block_number) : undefined, isEmpty(state.tokens) ? of(state.blockNumber) : undefined).pipe(withLatestFrom(state$.pipe(startWith(state))), map(([[token, tokenNetwork], state]) => tokenMonitored({\n    token,\n    tokenNetwork,\n    first: !(token in state.tokens),\n}))), \n// monitor previously monitored tokens\nfrom(Object.entries(state.tokens)).pipe(map(([token, tokenNetwork]) => tokenMonitored({ token: token, tokenNetwork: tokenNetwork }))))));\n/**\n * Monitor channels previously already on state\n *\n * @param action$  Observable of raidenInit actions\n * @param state$  Observable of RaidenStates\n * @returns  Observable of channelMonitored actions\n */\nexport const initMonitorChannelsEpic = (action$, state$) => action$.pipe(filter(isActionOf(raidenInit)), withLatestFrom(state$), mergeMap(function* ([, state]) {\n    for (const [tokenNetwork, obj] of Object.entries(state.channels)) {\n        for (const [partner, channel] of Object.entries(obj)) {\n            if (channel.state === ChannelState.opening)\n                continue;\n            yield channelMonitored({ id: channel.id }, { tokenNetwork: tokenNetwork, partner: partner });\n        }\n    }\n}));\n/**\n * Monitor provider to ensure account continues to be available and network stays the same\n *\n * @param action$  Observable of raidenInit actions\n * @param state$  Observable of RaidenStates\n * @param address,network,provider  RaidenEpicDeps members\n * @returns  Observable of raidenShutdown actions\n */\nexport const initMonitorProviderEpic = (action$, {}, { address, network, provider }) => action$.pipe(filter(isActionOf(raidenInit)), mergeMap(() => provider.listAccounts()), \n// at init time, check if our address is in provider's accounts list\n// if not, it means Signer is a local Wallet or another non-provider-side account\n// if yes, poll accounts every 1s and monitors if address is still there\n// also, every 1s poll current provider network and monitors if it's the same\n// if any check fails, emits RaidenShutdownAction, nothing otherwise\n// Poll reason from: https://github.com/MetaMask/faq/blob/master/DEVELOPERS.md\n// first/init-time check\nmap(accounts => accounts.includes(address)), mergeMap(isProviderAccount => interval(provider.pollingInterval).pipe(mergeMap(() => merge(\n// if isProviderAccount, also polls and monitors accounts list\nisProviderAccount\n    ? from(provider.listAccounts()).pipe(mergeMap(accounts => !accounts.includes(address)\n        ? of(raidenShutdown({ reason: ShutdownReason.ACCOUNT_CHANGED }))\n        : EMPTY))\n    : EMPTY, \n// unconditionally monitors network changes\nfrom(getNetwork(provider)).pipe(mergeMap(curNetwork => curNetwork.chainId !== network.chainId\n    ? of(raidenShutdown({ reason: ShutdownReason.NETWORK_CHANGED }))\n    : EMPTY)))))));\n/**\n * Starts monitoring a token network for events\n * When this action goes through (because a former or new token registry event was deteceted),\n * subscribe to events and emit respective actions to the stream. Currently:\n * - ChannelOpened events with us or by us\n *\n * @param action$  Observable of tokenMonitored actions\n * @param state$  Observable of RaidenStates\n * @param matrix$  RaidenEpicDeps members\n * @returns  Observable of channelOpened actions\n */\nexport const tokenMonitoredEpic = (action$, state$, { address, getTokenNetworkContract, contractsInfo }) => state$.pipe(map(state => state.blockNumber), multicast(new ReplaySubject(1), blockNumber$ => action$.pipe(filter(isActionOf(tokenMonitored)), groupBy(action => action.payload.tokenNetwork), mergeMap(grouped$ => grouped$.pipe(exhaustMap(action => {\n    const tokenNetworkContract = getTokenNetworkContract(action.payload.tokenNetwork);\n    const filters = [\n        tokenNetworkContract.filters.ChannelOpened(null, address, null, null),\n        tokenNetworkContract.filters.ChannelOpened(null, null, address, null),\n    ];\n    console.log('getEventsStream', action, blockNumber$);\n    return getEventsStream(tokenNetworkContract, filters, \n    // if first time monitoring this token network,\n    // fetch TokenNetwork's pastEvents since registry deployment as fromBlock$\n    action.payload.first\n        ? of(contractsInfo.TokenNetworkRegistry.block_number)\n        : undefined, action.payload.first ? blockNumber$ : undefined).pipe(filter(([, p1, p2]) => p1 === address || p2 === address), map(([id, p1, p2, settleTimeout, event]) => channelOpened({\n        id: id.toNumber(),\n        settleTimeout: settleTimeout.toNumber(),\n        openBlock: event.blockNumber,\n        txHash: event.transactionHash,\n    }, {\n        tokenNetwork: tokenNetworkContract.address,\n        partner: address === p1 ? p2 : p1,\n    })));\n}))))));\n/**\n * Monitors a channel for channel Events\n * Can be called either at initialization time (for previously known channels on previously\n * monitored TokenNetwork) or by a new detected ChannelOpenedAction. On the later case,\n * also fetches events since Channel.openBlock.\n * Currently monitored events:\n * - ChannelNewDeposit, fires a channelDeposited action\n * - ChannelClosedEvent, fires a channelClosed action\n * - ChannelSettledEvent, fires a channelSettled action and completes that channel observable\n *\n * @param action$  Observable of channelMonitored actions\n * @param state$  Observable of RaidenStates\n * @param matrix$  RaidenEpicDeps members\n * @returns  Observable of channelDeposited,channelClosed,channelSettled actions\n */\nexport const channelMonitoredEpic = (action$, state$, { getTokenNetworkContract }) => state$.pipe(map(state => state.blockNumber), multicast(new ReplaySubject(1), blockNumber$ => action$.pipe(filter(isActionOf(channelMonitored)), groupBy(action => `${action.payload.id}#${action.meta.partner}@${action.meta.tokenNetwork}`), mergeMap(grouped$ => grouped$.pipe(exhaustMap(action => {\n    const tokenNetworkContract = getTokenNetworkContract(action.meta.tokenNetwork);\n    // TODO: instead of one filter for each event, optimize to one filter per channel\n    // it requires ethers to support OR filters for topics:\n    // https://github.com/ethers-io/ethers.js/issues/437\n    // can we hook to provider.on directly and decoding the events ourselves?\n    const depositFilter = tokenNetworkContract.filters.ChannelNewDeposit(action.payload.id, null, null), closedFilter = tokenNetworkContract.filters.ChannelClosed(action.payload.id, null, null), settledFilter = tokenNetworkContract.filters.ChannelSettled(action.payload.id, null, null);\n    return merge(getEventsStream(tokenNetworkContract, [depositFilter], \n    // if channelMonitored triggered by ChannelOpenedAction,\n    // fetch Channel's pastEvents since channelOpened blockNumber as fromBlock$\n    action.payload.fromBlock ? of(action.payload.fromBlock) : undefined, action.payload.fromBlock ? blockNumber$ : undefined).pipe(map(([id, participant, totalDeposit, event]) => channelDeposited({\n        id: id.toNumber(),\n        participant,\n        totalDeposit,\n        txHash: event.transactionHash,\n    }, action.meta))), getEventsStream(tokenNetworkContract, [closedFilter], action.payload.fromBlock ? of(action.payload.fromBlock) : undefined, action.payload.fromBlock ? blockNumber$ : undefined).pipe(map(([id, participant, , event]) => channelClosed({\n        id: id.toNumber(),\n        participant,\n        closeBlock: event.blockNumber,\n        txHash: event.transactionHash,\n    }, action.meta))), getEventsStream(tokenNetworkContract, [settledFilter], action.payload.fromBlock ? of(action.payload.fromBlock) : undefined, action.payload.fromBlock ? blockNumber$ : undefined).pipe(map(([id, , , event]) => channelSettled({\n        id: id.toNumber(),\n        settleBlock: event.blockNumber,\n        txHash: event.transactionHash,\n    }, action.meta)))).pipe(\n    // takeWhile tends to broad input to generic Action. We need to narrow it by hand\n    takeWhile(negate(isActionOf(channelSettled)), true));\n}))))));\n/**\n * A channelOpen action requested by user\n * Needs to be called on a previously monitored tokenNetwork. Calls TokenNetwork.openChannel\n * with given parameters. If tx goes through successfuly, stop as ChannelOpened success action\n * will instead be detected and fired by tokenMonitoredEpic. If anything detectable goes wrong,\n * fires a ChannnelOpenActionFailed instead\n *\n * @param action$  Observable of channelOpen actions\n * @param state$  Observable of RaidenStates\n * @param getTokenNetworkContract  RaidenEpicDeps members\n * @returns  Observable of channelOpenFailed actions\n */\nexport const channelOpenEpic = (action$, state$, { getTokenNetworkContract }) => action$.pipe(filter(isActionOf(channelOpen)), withLatestFrom(state$), mergeMap(([action, state]) => {\n    const tokenNetwork = getTokenNetworkContract(action.meta.tokenNetwork);\n    const channelState = get(state.channels, [\n        action.meta.tokenNetwork,\n        action.meta.partner,\n        'state',\n    ]);\n    // proceed only if channel is in 'opening' state, set by this action\n    if (channelState !== ChannelState.opening)\n        return of(channelOpenFailed(new Error(`Invalid channel state: ${channelState}`), action.meta));\n    // send openChannel transaction !!!\n    return from(tokenNetwork.functions.openChannel(state.address, action.meta.partner, action.payload.settleTimeout)).pipe(mergeMap((tx) => __awaiter(this, void 0, void 0, function* () { return ({ receipt: yield tx.wait(), tx }); })), map(({ receipt, tx }) => {\n        if (!receipt.status)\n            throw new Error(`openChannel transaction \"${tx.hash}\" failed`);\n        return tx.hash;\n    }), \n    // if succeeded, return a empty/completed observable\n    // actual ChannelOpenedAction will be detected and handled by tokenMonitoredEpic\n    // if any error happened on tx call/pipeline, mergeMap below won't be hit, and catchError\n    // will then emit the channelOpenFailed action instead\n    mergeMapTo(EMPTY), catchError(error => of(channelOpenFailed(error, action.meta))));\n}));\n/**\n * When we see a new ChannelOpenedAction event, starts monitoring channel\n *\n * @param action$  Observable of channelOpened actions\n * @param state$  Observable of RaidenStates\n * @returns  Observable of channelMonitored actions\n */\nexport const channelOpenedEpic = (action$, state$) => action$.pipe(filter(isActionOf(channelOpened)), withLatestFrom(state$), \n// proceed only if channel is in 'open' state and a deposit is required\nfilter(([action, state]) => {\n    const channel = get(state.channels, [\n        action.meta.tokenNetwork,\n        action.meta.partner,\n    ]);\n    return !!channel && channel.state === ChannelState.open;\n}), map(([action]) => channelMonitored({\n    id: action.payload.id,\n    fromBlock: action.payload.openBlock,\n}, action.meta)));\n/**\n * A ChannelDeposit action requested by user\n * Needs to be called on a previously monitored channel. Calls Token.approve for TokenNetwork\n * and then set respective setTotalDeposit. If all tx go through successfuly, stop as\n * ChannelDeposited success action will instead be detected and reacted by\n * channelMonitoredEpic. If anything detectable goes wrong, fires a ChannelDepositActionFailed\n * instead\n *\n * @param action$  Observable of channelDeposit actions\n * @param state$  Observable of RaidenStates\n * @param address,getTokenContract,getTokenNetworkContract  RaidenEpicDeps members\n * @returns  Observable of channelDepositFailed actions\n */\nexport const channelDepositEpic = (action$, state$, { address, getTokenContract, getTokenNetworkContract }) => action$.pipe(filter(isActionOf(channelDeposit)), withLatestFrom(state$), mergeMap(([action, state]) => {\n    const token = findKey(state.tokens, tn => tn === action.meta.tokenNetwork);\n    if (!token) {\n        const error = new Error(`token for tokenNetwork \"${action.meta.tokenNetwork}\" not found`);\n        return of(channelDepositFailed(error, action.meta));\n    }\n    const tokenContract = getTokenContract(token);\n    const tokenNetworkContract = getTokenNetworkContract(action.meta.tokenNetwork);\n    const channel = get(state.channels, [\n        action.meta.tokenNetwork,\n        action.meta.partner,\n    ]);\n    if (!channel || channel.state !== ChannelState.open || channel.id === undefined) {\n        const error = new Error(`channel for \"${action.meta.tokenNetwork}\" and \"${action.meta.partner}\" not found or not in 'open' state`);\n        return of(channelDepositFailed(error, action.meta));\n    }\n    const channelId = channel.id;\n    // send approve transaction\n    return from(tokenContract.functions.approve(action.meta.tokenNetwork, action.payload.deposit))\n        .pipe(tap(tx => console.log(`sent approve tx \"${tx.hash}\" to \"${token}\"`)), mergeMap((tx) => __awaiter(this, void 0, void 0, function* () { return ({ receipt: yield tx.wait(), tx }); })), map(({ receipt, tx }) => {\n        if (!receipt.status)\n            throw new Error(`token \"${token}\" approve transaction \"${tx.hash}\" failed`);\n        return tx.hash;\n    }), tap(txHash => console.log(`approve tx \"${txHash}\" successfuly mined!`)))\n        .pipe(withLatestFrom(state$), mergeMap(([, state]) => \n    // send setTotalDeposit transaction\n    tokenNetworkContract.functions.setTotalDeposit(channelId, address, state.channels[action.meta.tokenNetwork][action.meta.partner].own.deposit.add(action.payload.deposit), action.meta.partner, { gasLimit: 100e3 })), tap(tx => console.log(`sent setTotalDeposit tx \"${tx.hash}\" to \"${action.meta.tokenNetwork}\"`)), mergeMap((tx) => __awaiter(this, void 0, void 0, function* () { return ({ receipt: yield tx.wait(), tx }); })), map(({ receipt, tx }) => {\n        if (!receipt.status)\n            throw new Error(`tokenNetwork \"${action.meta.tokenNetwork}\" setTotalDeposit transaction \"${tx.hash}\" failed`);\n        return tx.hash;\n    }), tap(txHash => console.log(`setTotalDeposit tx \"${txHash}\" successfuly mined!`)), \n    // if succeeded, return a empty/completed observable\n    // actual ChannelDepositedAction will be detected and handled by channelMonitoredEpic\n    // if any error happened on tx call/pipeline, mergeMap below won't be hit, and catchError\n    // will then emit the channelDepositFailed action instead\n    mergeMapTo(EMPTY), catchError(error => of(channelDepositFailed(error, action.meta))));\n}));\n/**\n * A ChannelClose action requested by user\n * Needs to be called on an opened or closing (for retries) channel.\n * If tx goes through successfuly, stop as ChannelClosed success action will instead be\n * detected and reacted by channelMonitoredEpic. If anything detectable goes wrong, fires a\n * ChannelCloseActionFailed instead\n *\n * @param action$  Observable of channelClose actions\n * @param state$  Observable of RaidenStates\n * @param getTokenNetworkContract  RaidenEpicDeps members\n * @returns  Observable of channelCloseFailed actions\n */\nexport const channelCloseEpic = (action$, state$, { getTokenNetworkContract }) => action$.pipe(filter(isActionOf(channelClose)), withLatestFrom(state$), mergeMap(([action, state]) => {\n    const tokenNetworkContract = getTokenNetworkContract(action.meta.tokenNetwork);\n    const channel = get(state.channels, [\n        action.meta.tokenNetwork,\n        action.meta.partner,\n    ]);\n    if (!channel ||\n        !(channel.state === ChannelState.open || channel.state === ChannelState.closing) ||\n        !channel.id) {\n        const error = new Error(`channel for \"${action.meta.tokenNetwork}\" and \"${action.meta.partner}\" not found or not in 'open' or 'closing' state`);\n        return of(channelCloseFailed(error, action.meta));\n    }\n    const channelId = channel.id;\n    // send closeChannel transaction\n    return from(tokenNetworkContract.functions.closeChannel(channelId, action.meta.partner, HashZero, 0, HashZero, SignatureZero)).pipe(tap(tx => console.log(`sent closeChannel tx \"${tx.hash}\" to \"${action.meta.tokenNetwork}\"`)), mergeMap((tx) => __awaiter(this, void 0, void 0, function* () { return ({ receipt: yield tx.wait(), tx }); })), map(({ receipt, tx }) => {\n        if (!receipt.status)\n            throw new Error(`tokenNetwork \"${action.meta.tokenNetwork}\" closeChannel transaction \"${tx.hash}\" failed`);\n        console.log(`closeChannel tx \"${tx.hash}\" successfuly mined!`);\n        return tx.hash;\n    }), \n    // if succeeded, return a empty/completed observable\n    // actual ChannelClosedAction will be detected and handled by channelMonitoredEpic\n    // if any error happened on tx call/pipeline, mergeMap below won't be hit, and catchError\n    // will then emit the channelCloseFailed action instead\n    mergeMapTo(EMPTY), catchError(error => of(channelCloseFailed(error, action.meta))));\n}));\n/**\n * A ChannelSettle action requested by user\n * Needs to be called on an settleable or settling (for retries) channel.\n * If tx goes through successfuly, stop as ChannelSettled success action will instead be\n * detected and reacted by channelMonitoredEpic. If anything detectable goes wrong, fires a\n * ChannelSettleActionFailed instead\n *\n * @param action$  Observable of channelSettle actions\n * @param state$  Observable of RaidenStates\n * @param address,getTokenNetworkContract  RaidenEpicDeps members\n * @returns  Observable of channelSettleFailed actions\n */\nexport const channelSettleEpic = (action$, state$, { address, getTokenNetworkContract }) => action$.pipe(filter(isActionOf(channelSettle)), withLatestFrom(state$), mergeMap(([action, state]) => {\n    const tokenNetworkContract = getTokenNetworkContract(action.meta.tokenNetwork);\n    const channel = get(state.channels, [\n        action.meta.tokenNetwork,\n        action.meta.partner,\n    ]);\n    if (!channel ||\n        !(channel.state === ChannelState.settleable || channel.state === ChannelState.settling) ||\n        !channel.id) {\n        const error = new Error(`channel for \"${action.meta.tokenNetwork}\" and \"${action.meta.partner}\" not found or not in 'settleable' or 'settling' state`);\n        return of(channelSettleFailed(error, action.meta));\n    }\n    const channelId = channel.id;\n    // send settleChannel transaction\n    return from(tokenNetworkContract.functions.settleChannel(channelId, address, Zero, Zero, HashZero, action.meta.partner, Zero, Zero, HashZero)).pipe(tap(tx => console.log(`sent settleChannel tx \"${tx.hash}\" to \"${action.meta.tokenNetwork}\"`)), mergeMap((tx) => __awaiter(this, void 0, void 0, function* () { return ({ receipt: yield tx.wait(), tx }); })), map(({ receipt, tx }) => {\n        if (!receipt.status)\n            throw new Error(`tokenNetwork \"${action.meta.tokenNetwork}\" settleChannel transaction \"${tx.hash}\" failed`);\n        console.log(`settleChannel tx \"${tx.hash}\" successfuly mined!`);\n        return tx.hash;\n    }), \n    // if succeeded, return a empty/completed observable\n    // actual ChannelSettledAction will be detected and handled by channelMonitoredEpic\n    // if any error happened on tx call/pipeline, mergeMap below won't be hit, and catchError\n    // will then emit the channelSettleFailed action instead\n    mergeMapTo(EMPTY), catchError(error => of(channelSettleFailed(error, action.meta))));\n}));\n/**\n * Process newBlocks, emits ChannelSettleableAction if any closed channel is now settleable\n *\n * @param action$  Observable of newBlock actions\n * @param state$  Observable of RaidenStates\n * @returns  Observable of channelSettleable actions\n */\nexport const channelSettleableEpic = (action$, state$) => action$.pipe(filter(isActionOf(newBlock)), withLatestFrom(state$), mergeMap(function* ([{ payload: { blockNumber }, }, state,]) {\n    for (const tokenNetwork in state.channels) {\n        for (const partner in state.channels[tokenNetwork]) {\n            const channel = state.channels[tokenNetwork][partner];\n            if (channel.state === ChannelState.closed &&\n                channel.settleTimeout && // closed channels always have settleTimeout & closeBlock set\n                channel.closeBlock &&\n                blockNumber > channel.closeBlock + channel.settleTimeout) {\n                yield channelSettleable({ settleableBlock: blockNumber }, { tokenNetwork: tokenNetwork, partner: partner });\n            }\n        }\n    }\n}));\n//# sourceMappingURL=epics.js.map","import { createStandardAction } from 'typesafe-actions';\n/* One-shot send payload.message to meta.address user in transport */\nexport const messageSend = createStandardAction('messageSend')();\n/**\n * payload.message was received on payload.ts (timestamp) from meta.address\n * payload.userId and payload.roomId are optional and specific to matrix transport, as sender info\n */\nexport const messageReceived = createStandardAction('messageReceived').map(({ text, message, ts, userId, roomId, }, meta) => ({ payload: { text, message, ts: ts || Date.now(), userId, roomId }, meta }));\n//# sourceMappingURL=actions.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport fetch from 'cross-fetch';\nimport { encodeUri } from 'matrix-js-sdk/lib/utils';\n/**\n * From a yaml list string, return as Array\n * E.g. yamlListToArray(`\n * # comment\n *   - test1\n *   - test2\n *   - test3\n * `) === ['test1', 'test2', 'test3']\n *\n * @param yml  String containing only YAML list\n * @returns  List of strings inside yml-encoded text\n */\nexport function yamlListToArray(yml) {\n    // match all strings starting with optional spaces followed by a dash + space\n    // capturing only the content of the list item, trimming spaces\n    const reg = /^\\s*-\\s*(.+?)\\s*$/gm;\n    const results = [];\n    let match;\n    while ((match = reg.exec(yml))) {\n        results.push(match[1]);\n    }\n    return results;\n}\n/**\n * Given a server name (with or without schema and port), return HTTP GET round trip time\n *\n * @param server Server name with or without schema\n * @returns Promise to a { server, rtt } object, where `rtt` may be NaN\n */\nexport function matrixRTT(server) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let url = server;\n        if (!url.includes('://')) {\n            url = `https://${url}`;\n        }\n        url += `/_matrix/client/versions`;\n        let start = Date.now();\n        try {\n            const resp = yield fetch(url);\n            if (resp.status < 200 || resp.status >= 300)\n                throw NaN;\n        }\n        catch (e) {\n            start = NaN; // return will also be NaN\n        }\n        return { server, rtt: Date.now() - start };\n    });\n}\n/**\n * Return server name without schema or path\n *\n * @param server any URL\n * @returns server URL with domain and port (if present), without schema, paths or query params\n */\nexport function getServerName(server) {\n    const match = /^(?:\\w*:?\\/\\/)?([^/#?&]+)/.exec(server);\n    return match && match[1];\n}\n/**\n * MatrixClient doesn't expose this API, but it does exist, so we create it here\n *\n * @param matrix an already setup and started MatrixClient\n * @param userId to fetch status/presence from\n * @returns Promise to object containing status data\n */\nexport function getUserPresence(matrix, userId) {\n    const path = encodeUri('/presence/$userId/status', { $userId: userId });\n    return matrix._http.authedRequest(undefined, 'GET', path);\n}\n//# sourceMappingURL=matrix.js.map","/**\n * Simple Map-based LRU cache\n *\n * @param max Maximum size of cache\n */\nexport class LruCache {\n    constructor(max) {\n        this.values = new Map();\n        this.max = max;\n    }\n    get(key) {\n        const entry = this.values.get(key);\n        if (entry) {\n            // peek the entry, re-insert for LRU strategy\n            this.values.delete(key);\n            this.values.set(key, entry);\n        }\n        return entry;\n    }\n    put(key, value) {\n        if (this.values.size >= this.max) {\n            // least-recently used cache eviction strategy\n            const keyToDelete = this.values.keys().next().value;\n            this.values.delete(keyToDelete);\n        }\n        this.values.set(key, value);\n    }\n}\n//# sourceMappingURL=lru.js.map","import { filter, scan, startWith } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { matrixPresenceUpdate } from './actions';\n/**\n * Helper to map/get an aggregated Presences observable from action$ bus\n * Known presences as { address: <last seen MatrixPresenceUpdateAction> } mapping\n * As this helper is basically a scan/reduce, you can't simply startWith the first/initial value,\n * as it needs to also be the initial mapping for the scan itself, so instead of pipe+startWith,\n * as we usually do with state$, we need to get the initial value as parameter when it's used in\n * withLatestFrom in some inner observable\n *\n * @param action$ Observable\n * @returns Observable of aggregated Presences from subscription to now\n */\nexport const getPresences$ = (action$) => action$.pipe(filter(isActionOf(matrixPresenceUpdate)), scan(\n// scan all presence update actions and populate/output a per-address mapping\n(presences, update) => (Object.assign({}, presences, { [update.meta.address]: update })), {}), startWith({}));\n//# sourceMappingURL=utils.js.map","import { combineLatest, from, of, EMPTY, fromEvent, timer, ReplaySubject, throwError, } from 'rxjs';\nimport { catchError, concatMap, delay, distinctUntilChanged, filter, groupBy, ignoreElements, map, mergeMap, multicast, withLatestFrom, scan, startWith, switchMap, take, takeUntil, tap, toArray, mapTo, finalize, } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { find, get, minBy, sortBy } from 'lodash';\nimport { getAddress, verifyMessage } from 'ethers/utils';\nimport { createClient } from 'matrix-js-sdk';\nimport fetch from 'cross-fetch';\nimport { MATRIX_KNOWN_SERVERS_URL } from '../constants';\nimport { channelMonitored } from '../channels/actions';\nimport { MessageType, Processed, SecretRequest, SecretReveal, Signed, } from '../messages/types';\nimport { decodeJsonMessage, encodeJsonMessage, getMessageSigner, signMessage, } from '../messages/utils';\nimport { messageSend, messageReceived } from '../messages/actions';\nimport { raidenInit } from '../store/actions';\nimport { getServerName, getUserPresence, matrixRTT, yamlListToArray } from '../utils/matrix';\nimport { LruCache } from '../utils/lru';\nimport { matrixPresenceUpdate, matrixRequestMonitorPresenceFailed, matrixRoom, matrixRoomLeave, matrixSetup, matrixRequestMonitorPresence, } from './actions';\nimport { getPresences$ } from './utils';\n// unavailable just means the user didn't do anything over a certain amount of time, but they're\n// still there, so we consider the user as available then\nconst AVAILABLE = ['online', 'unavailable'];\nconst userRe = /^@(0x[0-9a-f]{40})[.:]/i;\n/**\n * Initialize matrix transport\n * The matrix client instance will be outputed to RaidenEpicDeps.matrix$ AsyncSubject\n * The setup info (including credentials, for persistence) will be the matrixSetup output action\n *\n * @param action$  Observable of raidenInit actions\n * @param state$  Observable of RaidenStates\n * @param address,network,signer,matrix$  RaidenEpicDeps members\n * @returns  Observable of matrixSetup generated by initializing matrix client\n */\nexport const initMatrixEpic = (action$, state$, { address, network, signer, matrix$ }) => action$.pipe(filter(isActionOf(raidenInit)), withLatestFrom(state$), mergeMap(function ([, state]) {\n    const server = get(state, ['transport', 'matrix', 'server']), setup = get(state, ['transport', 'matrix', 'setup']);\n    if (server) {\n        // use server from state/settings\n        return of({ server, setup });\n    }\n    else {\n        const knownServersUrl = MATRIX_KNOWN_SERVERS_URL[network.name] || MATRIX_KNOWN_SERVERS_URL.default;\n        // fetch servers list and use the one with shortest http round trip time (rtt)\n        return from(fetch(knownServersUrl)).pipe(mergeMap(response => {\n            if (!response.ok)\n                return throwError(new Error(`Could not fetch server list from \"${knownServersUrl}\" => ${response.status}`));\n            return response.text();\n        }), mergeMap(text => from(yamlListToArray(text))), mergeMap(server => matrixRTT(server)), toArray(), map(rtts => sortBy(rtts, ['rtt'])), map(rtts => {\n            if (!rtts[0] || typeof rtts[0].rtt !== 'number' || isNaN(rtts[0].rtt))\n                throw new Error(`Could not contact any matrix servers: ${JSON.stringify(rtts)}`);\n            return rtts[0].server;\n        }), map(server => ({\n            server: server.includes('://') ? server : `https://${server}`,\n            setup: undefined,\n        })));\n    }\n}), mergeMap(function ({ server, setup, }) {\n    let { userId, accessToken, deviceId } = setup || {};\n    if (setup) {\n        // if matrixSetup was already issued before, and credentials are already in state\n        const matrix = createClient({\n            baseUrl: server,\n            userId,\n            accessToken,\n            deviceId,\n        });\n        return of({ matrix, server, setup });\n    }\n    else {\n        const serverName = getServerName(server);\n        if (!serverName)\n            return throwError(new Error(`Could not get serverName from \"${server}\"`));\n        const matrix = createClient({ baseUrl: server });\n        const userName = address.toLowerCase();\n        userId = `@${userName}:${serverName}`;\n        // create password as signature of serverName, then try login or register\n        return from(signer.signMessage(serverName)).pipe(mergeMap(password => from(matrix.loginWithPassword(userName, password)).pipe(catchError(() => from(matrix.register(userName, password))))), tap(result => {\n            // matrix.register implementation doesn't set returned credentials\n            // which would require an unnecessary additional login request if we didn't\n            // set it here, and login doesn't set deviceId, so we set all credential\n            // parameters again here after successful login or register\n            matrix.deviceId = result.device_id;\n            matrix._http.opts.accessToken = result.access_token;\n            matrix.credentials = {\n                userId: result.user_id,\n            };\n            // set vars for later MatrixSetupAction\n            accessToken = result.access_token;\n            deviceId = result.device_id;\n        }), \n        // displayName must be signature of full userId for our messages to be accepted\n        mergeMap(() => signer.signMessage(userId)), map(signedUserId => ({\n            matrix,\n            server,\n            setup: {\n                userId: userId,\n                accessToken: accessToken,\n                deviceId: deviceId,\n                displayName: signedUserId,\n            },\n        })));\n    }\n}), mergeMap(({ matrix, server, setup }) => \n// ensure displayName is set even on restarts\nfrom(matrix.setDisplayName(setup.displayName)).pipe(\n// ensure we joined discovery room\nmergeMap(() => matrix.joinRoom(`#raiden_${network.name || network.chainId}_discovery:${getServerName(server)}`)), mapTo({ matrix, server, setup }))), tap(({ matrix }) => {\n    // like Promise.resolve for AsyncSubjects\n    matrix$.next(matrix);\n    matrix$.complete();\n}), map(({ server, setup }) => matrixSetup({ server, setup })));\n/**\n * Start MatrixClient sync polling when detecting MatrixSetupAction, **after** init time fromEvents\n * were already registered.\n * This is required to ensure init-time events registering are done before initial sync, to avoid\n * losing one-shot events, like invitations.\n *\n * @param action$  Observable of matrixSetup actions\n * @param state$  Observable of RaidenStates\n * @param matrix$  RaidenEpicDeps members\n * @returns  Empty observable (whole side-effect on matrix instance)\n */\nexport const matrixStartEpic = (action$, {}, { matrix$ }) => action$.pipe(filter(isActionOf(matrixSetup)), switchMap(() => matrix$), tap(matrix => console.log('MATRIX client', matrix)), mergeMap(matrix => matrix.startClient({ initialSyncLimit: 0 })), ignoreElements());\n/**\n * Calls matrix.stopClient when raiden is shutting down, i.e. action$ completes\n *\n * @param action$  Observable of matrixSetup actions\n * @param state$  Observable of RaidenStates\n * @param matrix$  RaidenEpicDeps members\n * @returns  Empty observable (whole side-effect on matrix instance)\n */\nexport const matrixShutdownEpic = (action$, {}, { matrix$ }) => matrix$.pipe(mergeMap(matrix => action$.pipe(finalize(() => matrix.stopClient()))), ignoreElements());\n/**\n * Handles MatrixRequestMonitorPresenceAction and emits a MatrixPresenceUpdateAction\n * If presence is already known, emits it, else fetch from user profile\n * Even if the presence stays the same, we emit a MatrixPresenceUpdateAction, as this may be a\n * request being waited by a promise or something like that\n * IOW: every request should be followed by a presence update or a failed action, but presence\n * updates may happen later without new requests (e.g. when the user goes offline)\n *\n * @param action$  Observable of matrixRequestMonitorPresence actions\n * @param state$  Observable of RaidenStates\n * @param matrix$  RaidenEpicDeps members\n * @returns  Observable of presence updates or fail action\n */\nexport const matrixMonitorPresenceEpic = (action$, {}, { matrix$ }) => action$.pipe(filter(isActionOf(matrixRequestMonitorPresence)), \n// this mergeMap is like withLatestFrom, but waits until matrix$ emits its only value\nmergeMap(action => matrix$.pipe(map(matrix => ({ action, matrix })))), withLatestFrom(getPresences$(action$)), \n// TODO: groupBy(address)+concatMap serialize presence fetching\nmergeMap(([{ action, matrix }, presences]) => {\n    if (action.meta.address in presences)\n        // we already monitored/saw this user's presence\n        return of(presences[action.meta.address]);\n    const validUsers = [];\n    for (const user of matrix.getUsers()) {\n        if (!user.displayName)\n            continue;\n        if (!user.presence)\n            continue;\n        let recovered;\n        try {\n            const match = userRe.exec(user.userId);\n            if (!match || getAddress(match[1]) !== action.meta.address)\n                continue;\n            recovered = verifyMessage(user.userId, user.displayName);\n            if (!recovered || recovered !== action.meta.address)\n                continue;\n        }\n        catch (err) {\n            continue;\n        }\n        validUsers.push(user);\n    }\n    // IFF we see a cached/stored user (matrix.getUsers), with displayName and presence already\n    // populated, which displayName signature verifies to our address of interest,\n    // then construct and return the MatrixPresenceUpdateAction from the stored data\n    if (validUsers.length > 0) {\n        const user = minBy(validUsers, 'lastPresenceTs');\n        return of(matrixPresenceUpdate({ userId: user.userId, available: AVAILABLE.includes(user.presence) }, action.meta));\n    }\n    // if anything failed up to here, go the slow path: searchUserDirectory + getUserPresence\n    return from(\n    // search user directory for any user containing the address of interest in its userId\n    matrix.searchUserDirectory({ term: action.meta.address.toLowerCase() })).pipe(\n    // for every result matches, verify displayName signature is address of interest\n    map(({ results }) => {\n        const validUsers = [];\n        for (const user of results) {\n            if (!user.display_name)\n                continue;\n            try {\n                const match = userRe.exec(user.user_id);\n                if (!match || getAddress(match[1]) !== action.meta.address)\n                    continue;\n                const recovered = verifyMessage(user.user_id, user.display_name);\n                if (!recovered || recovered !== action.meta.address)\n                    continue;\n            }\n            catch (err) {\n                continue;\n            }\n            validUsers.push(user.user_id);\n        }\n        if (validUsers.length === 0)\n            // if no valid user could be found, throw an error to be handled below\n            throw new Error(`Could not find any user with valid signature for ${action.meta.address} in ${JSON.stringify(results)}`);\n        else\n            return validUsers;\n    }), mergeMap(userIds => from(userIds)), mergeMap(userId => getUserPresence(matrix, userId).then(presence => \n    // eslint-disable-next-line @typescript-eslint/camelcase\n    Object.assign(presence, { user_id: userId }))), toArray(), \n    // for all matched/verified users, get its presence through dedicated API\n    // it's required because, as the user events could already have been handled and\n    // filtered out by matrixPresenceUpdateEpic because it wasn't yet a user-of-interest,\n    // we could have missed presence updates, then we need to fetch it here directly,\n    // and from now on, that other epic will monitor its updates, and sort by most recently\n    // seen user\n    map(presences => minBy(presences, 'last_active_ago')), map(({ presence, user_id: userId }) => matrixPresenceUpdate({\n        userId,\n        available: AVAILABLE.includes(presence),\n    }, action.meta)), catchError(err => of(matrixRequestMonitorPresenceFailed(err, action.meta))));\n}));\n/**\n * Monitor peers matrix presence from User.presence events\n * We aggregate all users of interest (i.e. for which a monitor request was emitted at some point)\n * and emit presence updates for any presence change happening to a user validating to this address\n *\n * @param action$  Observable of RaidenActions\n * @param state$  Observable of RaidenStates\n * @param matrix$  RaidenEpicDeps members\n * @returns  Observable of presence updates\n */\nexport const matrixPresenceUpdateEpic = (action$, {}, { matrix$ }) => matrix$.pipe(\n// when matrix finishes initialization, register to matrix presence events\nswitchMap(matrix => \n// matrix's 'User.presence' sometimes fail to fire, but generic 'event' is always fired,\n// and User (retrieved via matrix.getUser) is up-to-date before 'event' emits\nfromEvent(matrix, 'event').pipe(map(event => ({ event, matrix })))), filter(({ event }) => event.getType() === 'm.presence'), \n// parse peer address from userId\nmap(({ event, matrix }) => {\n    // as 'event' is emitted after user is (created and) updated, getUser always returns it\n    const user = matrix.getUser(event.getSender()), match = userRe.exec(user.userId), peerAddress = match && match[1];\n    // getAddress will convert any valid address into checksummed-format\n    return {\n        user,\n        matrix,\n        peerAddress: (peerAddress && getAddress(peerAddress)),\n    };\n}), \n// filter out events without userId in the right format (startWith hex-address)\nfilter(({ user, peerAddress }) => !!(user.presence && peerAddress)), withLatestFrom(\n// observable of all addresses whose presence monitoring was requested since init\naction$.pipe(filter(isActionOf(matrixRequestMonitorPresence)), scan((toMonitor, request) => toMonitor.add(request.meta.address), new Set()), startWith(new Set())), \n// known presences as { address: <last seen MatrixPresenceUpdateAction> } mapping\ngetPresences$(action$)), \n// filter out events from users we don't care about\n// i.e.: presence monitoring never requested\nfilter(([{ peerAddress }, toMonitor]) => toMonitor.has(peerAddress)), mergeMap(([{ user, matrix, peerAddress }, , presences]) => {\n    // first filter can't tell typescript this property will always be set!\n    const userId = user.userId, address = peerAddress, presence = user.presence, available = AVAILABLE.includes(presence);\n    if (address in presences &&\n        presences[address].payload.userId === userId &&\n        presences[address].payload.available === available)\n        // even if signature verification passes, this wouldn't change presence, so return early\n        return EMPTY;\n    // fetch profile info if user doesn't contain a displayName\n    const displayName$ = user.displayName\n        ? of(user.displayName)\n        : from(matrix.getProfileInfo(userId, 'displayname')).pipe(map(profile => profile.displayname), catchError(() => of(undefined)));\n    return displayName$.pipe(map(displayName => {\n        // errors raised here will be logged and ignored on catchError below\n        if (!displayName)\n            throw new Error(`Could not get displayName of \"${userId}\"`);\n        // ecrecover address, validating displayName is the signature of the userId\n        const recovered = verifyMessage(userId, displayName);\n        if (!recovered || recovered !== peerAddress)\n            throw new Error(`Could not verify displayName signature of \"${userId}\": got \"${recovered}\"`);\n        return recovered;\n    }), map(address => matrixPresenceUpdate({ userId, available, ts: user.lastPresenceTs }, { address })));\n}), catchError(err => (console.log('Error validating presence event, ignoring', err), EMPTY)));\n/**\n * Upon receiving a MessageSendAction, ensure there's a room for the given address\n * Requires address to have its presence monitored.\n *\n * @param action$  Observable of messageSend actions\n * @param state$  Observable of RaidenStates\n * @param matrix$  RaidenEpicDeps members\n * @returns  Observable of matrixRoom actions\n */\nexport const matrixCreateRoomEpic = (action$, state$, { matrix$ }) => combineLatest(getPresences$(action$), state$).pipe(\n// multicasting combined presences+state with a ReplaySubject makes it act as withLatestFrom\n// but working inside concatMap, which is called only at outer next and subscribe delayed\nmulticast(new ReplaySubject(1), presencesStateReplay$ => \n// actual output observable, handles MessageSendAction serially and create room if needed\naction$.pipe(filter(isActionOf(messageSend)), \n// this mergeMap is like withLatestFrom, but waits until matrix$ emits its only value\nmergeMap(action => matrix$.pipe(map(matrix => ({ action, matrix })))), \n// concatMap is used to prevent bursts of messages for a given address (eg. on startup)\n// of creating multiple rooms for same address\nconcatMap(({ action, matrix }) => \n// presencesStateReplay$+take(1) acts like withLatestFrom with cached result\npresencesStateReplay$.pipe(\n// wait for user to be monitored\nfilter(([presences]) => action.meta.address in presences), take(1), \n// if there's already a room state for address and it's present in matrix, skip\nfilter(([, state]) => !get(state, ['transport', 'matrix', 'rooms', action.meta.address, 0])), \n// else, create a room, invite known user and dispatch the respective MatrixRoomAction\n// to store it in state\nmergeMap(([presences]) => matrix.createRoom({\n    visibility: 'private',\n    invite: [presences[action.meta.address].payload.userId],\n})), map(({ room_id: roomId }) => matrixRoom({ roomId }, action.meta)))))));\n/**\n * Invites users coming online to rooms we may have with them\n *\n * @param action$  Observable of matrixPresenceUpdate actions\n * @param state$  Observable of RaidenStates\n * @param matrix$  RaidenEpicDeps members\n * @returns  Empty observable (whole side-effect on matrix instance)\n */\nexport const matrixInviteEpic = (action$, state$, { matrix$ }) => action$.pipe(filter(isActionOf(matrixPresenceUpdate)), filter(action => action.payload.available), \n// this mergeMap is like withLatestFrom, but waits until matrix$ emits its only value\nmergeMap(action => matrix$.pipe(map(matrix => ({ action, matrix })))), withLatestFrom(state$), mergeMap(([{ action, matrix }, state]) => {\n    const roomId = get(state, [\n        'transport',\n        'matrix',\n        'rooms',\n        action.meta.address,\n        0,\n    ]);\n    if (roomId) {\n        const room = matrix.getRoom(roomId);\n        if (room) {\n            const member = room.getMember(action.payload.userId);\n            if (!member)\n                return from(matrix.invite(roomId, action.payload.userId));\n        }\n    }\n    return EMPTY;\n}), ignoreElements());\n/**\n * Handle invites sent to us and accepts them iff sent by a monitored user\n *\n * @param action$  Observable of RaidenActions\n * @param state$  Observable of RaidenStates\n * @param matrix$  RaidenEpicDeps members\n * @returns  Observable of matrixRoom actions\n */\nexport const matrixHandleInvitesEpic = (action$, {}, { matrix$ }) => matrix$.pipe(\n// when matrix finishes initialization, register to matrix invite events\nswitchMap(matrix => fromEvent(matrix, 'RoomMember.membership', (event, member) => ({ event, member, matrix }))), filter(\n// filter for invite events to us\n({ member, matrix }) => member.userId === matrix.getUserId() && member.membership === 'invite'), withLatestFrom(getPresences$(action$)), mergeMap(([{ event, member, matrix }, presences]) => {\n    const sender = event.getSender(), cachedPresence = find(presences, p => p.payload.userId === sender), senderPresence$ = cachedPresence\n        ? of(cachedPresence)\n        : action$.pipe(\n        // as these membership events can come up quite early, we delay continue processing\n        // them a while, to see if the sender is of interest to us (presence monitored)\n        filter(isActionOf(matrixPresenceUpdate)), filter(a => a.payload.userId === sender), take(1), \n        // Don't wait more than some arbitrary time for this sender presence update to show\n        // up; completes without emitting anything otherwise, ending this pipeline.\n        // This also works as a filter to continue processing invites only for monitored\n        // users, as it'll complete without emitting if no MatrixPresenceUpdateAction is\n        // found for sender in time\n        takeUntil(timer(30e3)));\n    return senderPresence$.pipe(map(senderPresence => ({ matrix, member, senderPresence })));\n}), mergeMap(({ matrix, member, senderPresence }) => \n// join room and emit MatrixRoomAction to make it default/first option for sender address\nfrom(matrix.joinRoom(member.roomId, { syncRoom: true })).pipe(map(() => matrixRoom({ roomId: member.roomId }, { address: senderPresence.meta.address })))));\n/**\n * Leave any excess room for a partner when creating or joining a new one.\n * Excess rooms are the ones behind a given threshold (currently 3) in the address's rooms queue\n *\n * @param action$  Observable of matrixRoom actions\n * @param state$  Observable of RaidenStates\n * @param matrix$  RaidenEpicDeps members\n * @returns  Observable of matrixRoomLeave actions\n */\nexport const matrixLeaveExcessRoomsEpic = (action$, state$, { matrix$ }) => action$.pipe(\n// act whenever a new room is added to the address queue in state\nfilter(isActionOf(matrixRoom)), \n// this mergeMap is like withLatestFrom, but waits until matrix$ emits its only value\nmergeMap(action => matrix$.pipe(map(matrix => ({ action, matrix })))), withLatestFrom(state$), mergeMap(([{ action, matrix }, state]) => {\n    const THRESHOLD = 3;\n    const rooms = state.transport.matrix.rooms[action.meta.address];\n    return from(rooms.filter(({}, i) => i >= THRESHOLD)).pipe(mergeMap(roomId => matrix.leave(roomId).then(() => roomId)), map(roomId => matrixRoomLeave({ roomId }, action.meta)));\n}));\n/**\n * Leave any room which is neither discovery/global nor known to state as a room for a user of\n * interest\n *\n * @param action$  Observable of RaidenActions\n * @param state$  Observable of RaidenStates\n * @param matrix$  RaidenEpicDeps members\n * @returns  Empty observable (whole side-effect on matrix instance)\n */\nexport const matrixLeaveUnknownRoomsEpic = ({}, state$, { matrix$, network }) => matrix$.pipe(\n// when matrix finishes initialization, register to matrix Room events\nswitchMap(matrix => fromEvent(matrix, 'Room').pipe(map(room => ({ matrix, roomId: room.roomId })))), delay(30e3), // this room may become known later for some reason, so wait a little\nwithLatestFrom(state$), \n// filter for leave events to us\nfilter(([{ matrix, roomId }, state]) => {\n    const room = matrix.getRoom(roomId);\n    if (!room)\n        return false; // room already gone while waiting\n    if (room.name && room.name.match(`#raiden_${network.name || network.chainId}_discovery:`))\n        return false;\n    const rooms = get(state, ['transport', 'matrix', 'rooms'], {});\n    for (const address in rooms) {\n        for (const roomId of rooms[address]) {\n            if (roomId === room.roomId)\n                return false;\n        }\n    }\n    return true;\n}), mergeMap(([{ matrix, roomId }]) => matrix.leave(roomId)), ignoreElements());\n/**\n * If we leave a room for any reason (eg. a kick event), purge it from state\n * Notice excess rooms left by matrixLeaveExcessRoomsEpic are cleaned before the matrix event is\n * detected, and then no MatrixRoomLeaveAction is emitted for them by this epic.\n *\n * @param action$  Observable of RaidenActions\n * @param state$  Observable of RaidenStates\n * @param matrix$  RaidenEpicDeps members\n * @returns  Observable of matrixRoomLeave actions\n */\nexport const matrixCleanLeftRoomsEpic = ({}, state$, { matrix$ }) => matrix$.pipe(\n// when matrix finishes initialization, register to matrix invite events\nswitchMap(matrix => fromEvent(matrix, 'Room.myMembership', (room, membership) => ({ room, membership, matrix }))), \n// filter for leave events to us\nfilter(({ membership }) => membership === 'leave'), withLatestFrom(state$), mergeMap(function* ([{ room }, state]) {\n    const rooms = get(state, ['transport', 'matrix', 'rooms'], {});\n    for (const address in rooms) {\n        for (const roomId of rooms[address]) {\n            if (roomId === room.roomId) {\n                yield matrixRoomLeave({ roomId }, { address: address });\n            }\n        }\n    }\n}));\n/**\n * Handles a MessageSendAction and send its message to the first room on queue for address\n *\n * @param action$  Observable of messageSend actions\n * @param state$  Observable of RaidenStates\n * @param matrix$  RaidenEpicDeps members\n * @returns  Empty observable (whole side-effect on matrix instance)\n */\nexport const matrixMessageSendEpic = (action$, state$, { matrix$ }) => combineLatest(getPresences$(action$), state$).pipe(\n// multicasting combined presences+state with a ReplaySubject makes it act as withLatestFrom\n// but working inside concatMap, called only at outer emit and subscription delayed\nmulticast(new ReplaySubject(1), presencesStateReplay$ => \n// actual output observable, gets/wait for the user to be in a room, and then sendMessage\naction$.pipe(filter(isActionOf(messageSend)), \n// this mergeMap is like withLatestFrom, but waits until matrix$ emits its only value\nmergeMap(action => matrix$.pipe(map(matrix => ({ action, matrix })))), groupBy(({ action }) => action.meta.address), \n// merge all inner/grouped observables, so different user's \"queues\" can be parallel\nmergeMap(grouped$ => \n// per-user \"queue\"\ngrouped$.pipe(\n// each per-user \"queue\" (observable) are processed serially (because concatMap)\n// TODO: batch all pending messages in a single send message request, with retry\nconcatMap(({ action, matrix }) => presencesStateReplay$.pipe(\n// wait for address to be monitored, online and roomId to be in state.\n// ReplaySubject ensures it happens immediatelly if all conditions are satisfied\nfilter(([presences, state]) => action.meta.address in presences &&\n    presences[action.meta.address].payload.available &&\n    get(state, ['transport', 'matrix', 'rooms', action.meta.address, 0])), map(([, state]) => state.transport.matrix.rooms[action.meta.address][0]), distinctUntilChanged(), \n// get/wait room object for roomId\nswitchMap(roomId => {\n    const room = matrix.getRoom(roomId);\n    // wait for the room state to be populated (happens after createRoom resolves)\n    return room\n        ? of(room)\n        : fromEvent(matrix, 'Room').pipe(filter(room => room.roomId === roomId), take(1));\n}), \n// get up-to-date/last presences at this point in time, which may have been updated\nwithLatestFrom(presencesStateReplay$), \n// get room member for partner userId\nmergeMap(([room, [presences]]) => {\n    // get latest known userId for address at this point in time\n    const userId = presences[action.meta.address].payload.userId;\n    const member = room.getMember(userId);\n    // if it's already present in room, return its membership\n    if (member && member.membership === 'join')\n        return of(member);\n    // else, wait for the user to join our newly created room\n    return fromEvent(matrix, 'RoomMember.membership', ({}, member) => member).pipe(\n    // use up-to-date presences again, which may have been updated while\n    // waiting for member join event (e.g. user roamed and was re-invited)\n    withLatestFrom(presencesStateReplay$), filter(([member, [presences]]) => member.roomId === room.roomId &&\n        member.userId === presences[action.meta.address].payload.userId &&\n        member.membership === 'join'), take(1), map(([member]) => member));\n}), take(1), // use first room/user which meets all requirements/filters so far\n// send message!\nmergeMap(member => {\n    const body = typeof action.payload.message === 'string'\n        ? action.payload.message\n        : encodeJsonMessage(action.payload.message);\n    return matrix.sendEvent(member.roomId, 'm.room.message', { body, msgtype: 'm.text' }, '');\n}))))), ignoreElements())));\n/**\n * Subscribe to matrix messages and emits MessageReceivedAction upon receiving a valid message from\n * an user of interest (one valid signature from an address we monitor) in a room we have for them\n *\n * @param action$  Observable of RaidenActions\n * @param state$  Observable of RaidenStates\n * @param matrix$  RaidenEpicDeps members\n * @returns  Observable of messageReceived actions\n */\nexport const matrixMessageReceivedEpic = (action$, state$, { matrix$ }) => combineLatest(getPresences$(action$), state$).pipe(\n// multicasting combined presences+state with a ReplaySubject makes it act as withLatestFrom\n// but working inside concatMap, called only at outer emit and subscription delayed\nmulticast(new ReplaySubject(1), presencesStateReplay$ => \n// actual output observable, gets/wait for the user to be in a room, and then sendMessage\nmatrix$.pipe(\n// when matrix finishes initialization, register to matrix timeline events\nswitchMap(matrix => fromEvent(matrix, 'Room.timeline', (event, room) => ({ matrix, event, room }))), \n// filter for text messages from other users\nfilter(({ event, matrix }) => event.getType() === 'm.room.message' &&\n    event.getSender() !== matrix.getUserId() &&\n    event.event.content.msgtype === 'm.text'), mergeMap(({ event, room }) => presencesStateReplay$.pipe(filter(([presences, state]) => {\n    const presence = find(presences, ['payload.userId', event.getSender()]);\n    if (!presence)\n        return false;\n    const rooms = get(state, ['transport', 'matrix', 'rooms', presence.meta.address], []);\n    if (!rooms.includes(room.roomId))\n        return false;\n    return true;\n}), take(1), \n// take up to an arbitrary timeout to presence status for the sender\n// AND the room in which this message was sent to be in sender's address room queue\ntakeUntil(timer(30e3)), mergeMap(function* ([presences]) {\n    const presence = find(presences, ['payload.userId', event.getSender()]);\n    for (const line of (event.event.content.body || '').split('\\n')) {\n        let message;\n        try {\n            message = decodeJsonMessage(line);\n            const signer = getMessageSigner(message);\n            if (signer !== presence.meta.address)\n                throw new Error(`Signature mismatch: sender=${presence.meta.address} != signer=${signer}`);\n        }\n        catch (err) {\n            console.warn(`Could not decode message: ${line}: ${err}`);\n            message = undefined;\n        }\n        yield messageReceived({\n            text: line,\n            message,\n            ts: event.event.origin_server_ts,\n            userId: presence.payload.userId,\n            roomId: room.roomId,\n        }, presence.meta);\n    }\n}))))));\n/**\n * If matrix received a message from user in a room we have with them, but not the first on queue,\n * update queue so this room goes to the front and will be used as send message room from now on\n *\n * @param action$  Observable of messageReceived actions\n * @param state$  Observable of RaidenStates\n * @returns  Observable of matrixRoom actions\n */\nexport const matrixMessageReceivedUpdateRoomEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), filter(([action, state]) => {\n    const rooms = get(state, ['transport', 'matrix', 'rooms', action.meta.address], []);\n    return (!!action.payload.roomId &&\n        rooms.includes(action.payload.roomId) &&\n        rooms[0] !== action.payload.roomId);\n}), map(([action]) => matrixRoom({ roomId: action.payload.roomId }, action.meta)));\n/**\n * Channel monitoring triggers matrix presence monitoring for partner\n *\n * @param action$  Observable of RaidenActions\n * @returns  Observable of matrixRequestMonitorPresence actions\n */\nexport const matrixMonitorChannelPresenceEpic = (action$) => action$.pipe(filter(isActionOf(channelMonitored)), map(action => matrixRequestMonitorPresence(undefined, { address: action.meta.partner })));\n/**\n * Sends Delivered for specific messages\n *\n * @param action$  Observable of RaidenActions\n * @param state$  Observable of RaidenStates\n * @param signer  RaidenEpicDeps members\n * @returns  Observable of messageSend actions\n */\nexport const deliveredEpic = (action$, {}, { signer }) => {\n    const cache = new LruCache(32);\n    return action$.pipe(filter(isActionOf(messageReceived)), concatMap(action => {\n        const message = action.payload.message;\n        if (!message ||\n            !(Signed(Processed).is(message) ||\n                Signed(SecretRequest).is(message) ||\n                Signed(SecretReveal).is(message)))\n            return EMPTY;\n        const msgId = message.message_identifier, key = msgId.toString();\n        const cached = cache.get(key);\n        if (cached)\n            return of(messageSend({ message: cached }, action.meta));\n        const delivered = {\n            type: MessageType.DELIVERED,\n            delivered_message_identifier: msgId,\n        };\n        return from(signMessage(signer, delivered)).pipe(tap(signed => cache.put(key, signed)), map(signed => messageSend({ message: signed }, action.meta)));\n    }));\n};\n//# sourceMappingURL=epics.js.map","import { distinctUntilChanged, map } from 'rxjs/operators';\n/**\n * Util to split a combineLatest tuple Observable to a tuple of Observables of each member\n * Util when combining observables to e.g. multicast, and then willing to handle them separately\n * inside the multicast selector.\n *\n * @param tuple$  An Observable of tuples of up to 4 values\n * @returns  2-4-tuple of Observables reflecting each value of the tuple\n */\nexport function splitCombined(tuple$) {\n    return [\n        tuple$.pipe(map(t => t[0]), distinctUntilChanged()),\n        tuple$.pipe(map(t => t[1]), distinctUntilChanged()),\n        tuple$.pipe(map(t => t[2]), distinctUntilChanged()),\n        tuple$.pipe(map(t => t[3]), distinctUntilChanged()),\n    ];\n}\n//# sourceMappingURL=rxjs.js.map","/* eslint-disable @typescript-eslint/camelcase */\nimport { of, from, combineLatest, ReplaySubject, EMPTY } from 'rxjs';\nimport { multicast, catchError, concatMap, filter, first, map, mergeMap, withLatestFrom, tap, } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { bigNumberify, keccak256 } from 'ethers/utils';\nimport { Zero } from 'ethers/constants';\nimport { findKey } from 'lodash';\nimport { REVEAL_TIMEOUT } from '../constants';\nimport { splitCombined } from '../utils/rxjs';\nimport { LruCache } from '../utils/lru';\nimport { getPresences$ } from '../transport/utils';\nimport { messageReceived, messageSend } from '../messages/actions';\nimport { MessageType, Processed, SecretRequest, SecretReveal, Signed, } from '../messages/types';\nimport { signMessage, getBalanceProofFromEnvelopeMessage } from '../messages/utils';\nimport { ChannelState } from '../channels/state';\nimport { transfer, transferSigned, transferSecret, transferProcessed, transferFailed, transferSecretRequest, transferUnlock, transferUnlocked, transferUnlockProcessed, transferred, } from './actions';\nimport { getLocksroot, makePaymentId, makeMessageId } from './utils';\n/**\n * Create an observable to compose and sign a LockedTransfer message/transferSigned action\n * As it's an async observable which depends on state and may return an action which changes it,\n * the returned observable must be subscribed in a serialized context that ensures non-concurrent\n * write access to the channel's balance proof (e.g. concatMap)\n *\n * @param presences$  Observable of address to last matrixPresenceUpdate mapping\n * @param state$  Observable of current state\n * @param action  transfer request action to be sent\n * @param network,address,signer  RaidenEpicDeps members\n * @returns  Observable of output actions (transferSigned, transferSecret & messageSend)\n */\nfunction makeAndSignTransfer(presences$, state$, action, { network, address, signer }) {\n    return presences$.pipe(withLatestFrom(state$), first(), mergeMap(([presences, state]) => {\n        if (!(action.payload.target in presences))\n            throw new Error('target not monitored');\n        if (!presences[action.payload.target].payload.available)\n            throw new Error('target not available/online');\n        let secret = action.payload.secret;\n        if (secret && keccak256(secret) !== action.meta.secrethash) {\n            throw new Error('secrethash does not match provided secret');\n        }\n        let signed$;\n        if (action.meta.secrethash in state.sent) {\n            // if already saw a transfer with secrethash, use cached instead of signing a new one\n            signed$ = of(state.sent[action.meta.secrethash].transfer);\n        }\n        else {\n            let recipient = undefined;\n            for (const [partner, channel] of Object.entries(state.channels[action.payload.tokenNetwork])) {\n                // capacity is own deposit - (own trasferred + locked) + (partner transferred)\n                const capacity = channel.own.deposit\n                    .sub(channel.own.balanceProof\n                    ? channel.own.balanceProof.transferredAmount.add(channel.own.balanceProof.lockedAmount)\n                    : Zero)\n                    .add(\n                // only relevant once we can receive from partner\n                channel.partner.balanceProof ? channel.partner.balanceProof.transferredAmount : Zero);\n                if (channel.state !== ChannelState.open) {\n                    console.warn(`transfer: channel with \"${partner}\" in state \"${channel.state}\" instead of \"${ChannelState.open}\"`);\n                }\n                else if (capacity.lt(action.payload.amount)) {\n                    console.warn(`transfer: channel with \"${partner}\" without enough capacity (${capacity.toString()})`);\n                }\n                else if (!(partner in presences) || !presences[partner].payload.available) {\n                    console.warn(`transfer: partner \"${partner}\" not available in transport`);\n                }\n                else {\n                    recipient = partner;\n                    break;\n                }\n            }\n            if (!recipient)\n                throw new Error('Could not find an online partner for tokenNetwork with enough capacity');\n            const channel = state.channels[action.payload.tokenNetwork][recipient];\n            // check below never fail, because of for loop filter, just for type narrowing\n            if (channel.state !== ChannelState.open)\n                throw new Error('not open');\n            let paymentId = action.payload.paymentId;\n            if (!paymentId)\n                paymentId = makePaymentId();\n            const lock = {\n                type: 'Lock',\n                amount: action.payload.amount,\n                expiration: bigNumberify(state.blockNumber + REVEAL_TIMEOUT * 2),\n                secrethash: action.meta.secrethash,\n            }, locks = [...(channel.own.locks || []), lock], locksroot = getLocksroot(locks), fee = action.payload.fee || Zero, msgId = makeMessageId(), token = findKey(state.tokens, tn => tn === action.payload.tokenNetwork);\n            const message = {\n                type: MessageType.LOCKED_TRANSFER,\n                message_identifier: msgId,\n                chain_id: bigNumberify(network.chainId),\n                token_network_address: action.payload.tokenNetwork,\n                channel_identifier: bigNumberify(channel.id),\n                nonce: (channel.own.balanceProof ? channel.own.balanceProof.nonce : Zero).add(1),\n                transferred_amount: (channel.own.balanceProof\n                    ? channel.own.balanceProof.transferredAmount\n                    : Zero),\n                locked_amount: (channel.own.balanceProof\n                    ? channel.own.balanceProof.lockedAmount\n                    : Zero).add(action.payload.amount),\n                locksroot,\n                payment_identifier: paymentId,\n                token,\n                recipient,\n                lock,\n                target: action.payload.target,\n                initiator: address,\n                fee,\n            };\n            signed$ = from(signMessage(signer, message));\n        }\n        return signed$.pipe(mergeMap(function* (signed) {\n            // besides transferSigned, also yield transferSecret (for registering) if we know it\n            if (secret)\n                yield transferSecret({ secret }, { secrethash: action.meta.secrethash });\n            yield transferSigned({ message: signed }, { secrethash: action.meta.secrethash });\n            // TODO: retry messageSend\n            yield messageSend({ message: signed }, { address: signed.recipient });\n        }));\n    }), catchError(err => of(transferFailed(err, action.meta))));\n}\n/**\n * Create an observable to compose and sign a Unlock message/transferUnlocked action\n * As it's an async observable which depends on state and may return an action which changes it,\n * the returned observable must be subscribed in a serialized context that ensures non-concurrent\n * write access to the channel's balance proof (e.g. concatMap)\n *\n * @param presences$  Observable of address to last matrixPresenceUpdate mapping\n * @param state$  Observable of current state\n * @param action  transfer request action to be sent\n * @param network,address,signer  RaidenEpicDeps members\n * @returns  Observable of output actions (transferSigned, transferSecret & messageSend)\n */\nfunction makeAndSignUnlock({}, state$, action, { signer }) {\n    return state$.pipe(first(), mergeMap(state => {\n        const secrethash = action.meta.secrethash;\n        if (!(secrethash in state.sent))\n            throw new Error('unknown transfer');\n        const transfer = state.sent[secrethash].transfer;\n        let signed$;\n        if (state.sent[secrethash].unlock) {\n            // unlock already signed, use cached\n            signed$ = of(state.sent[secrethash].unlock);\n        }\n        else if (!(transfer.token_network_address in state.channels) ||\n            !(transfer.recipient in state.channels[transfer.token_network_address]))\n            throw new Error('channel gone');\n        else {\n            const channel = state.channels[transfer.token_network_address][transfer.recipient], balanceProof = channel.own.balanceProof;\n            if (channel.state !== ChannelState.open)\n                throw new Error('channel not open');\n            if (!balanceProof)\n                throw new Error('assert: balanceProof gone');\n            // don't forget to check after signature too, may have expired by then\n            if (transfer.lock.expiration.lte(state.blockNumber))\n                throw new Error('lock expired');\n            const locks = (channel.own.locks || []).filter(l => l.secrethash !== secrethash), locksroot = getLocksroot(locks), msgId = makeMessageId();\n            const message = {\n                type: MessageType.UNLOCK,\n                message_identifier: msgId,\n                chain_id: transfer.chain_id,\n                token_network_address: transfer.token_network_address,\n                channel_identifier: transfer.channel_identifier,\n                nonce: balanceProof.nonce.add(1),\n                transferred_amount: balanceProof.transferredAmount.add(transfer.lock.amount),\n                locked_amount: balanceProof.lockedAmount.sub(transfer.lock.amount),\n                locksroot,\n                payment_identifier: transfer.payment_identifier,\n                secret: state.secrets[action.meta.secrethash].secret,\n            };\n            signed$ = from(signMessage(signer, message));\n        }\n        return signed$.pipe(withLatestFrom(state$), mergeMap(function* ([signed, state]) {\n            if (transfer.lock.expiration.lte(state.blockNumber))\n                throw new Error('lock expired!');\n            yield transferUnlocked({ message: signed }, action.meta);\n            // TODO: retry messageSend\n            yield messageSend({ message: signed }, { address: transfer.recipient });\n        }));\n    }), catchError(err => {\n        console.error('Error when trying to unlock after SecretReveal', err);\n        return EMPTY;\n    }));\n}\n/**\n * Serialize creation and signing of BalanceProof-changing messages or actions\n * Actions which change any data in any channel balance proof must only ever be created reading\n * state inside the serialization flow provided by the concatMap, and also be composed and produced\n * inside it (inner, subscribed observable)\n *\n * @param action$  Observable of RaidenActions\n * @param state$  Observable of RaidenStates\n * @param deps  RaidenEpicDeps\n * @returns  Observable of output actions for this epic\n */\nexport const transferGenerateAndSignEnvelopeMessageEpic = (action$, state$, deps) => combineLatest(getPresences$(action$), state$).pipe(multicast(new ReplaySubject(1), presencesStateReplay$ => {\n    const [presences$, state$] = splitCombined(presencesStateReplay$);\n    return action$.pipe(filter(isActionOf([transfer, transferUnlock])), concatMap(action => \n    // TODO: add any other BP-changing observable below\n    isActionOf(transfer, action)\n        ? makeAndSignTransfer(presences$, state$, action, deps)\n        : isActionOf(transferUnlock, action)\n            ? makeAndSignUnlock(presences$, state$, action, deps)\n            : EMPTY));\n}));\n/**\n * Handles receiving a signed Processed for some sent LockedTransfer\n *\n * @param action$  Observable of RaidenActions\n * @param state$  Observable of RaidenStates\n * @returns  Observable of output actions for this epic\n */\nexport const transferProcessedReceivedEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    const message = action.payload.message;\n    if (!message || !Signed(Processed).is(message))\n        return;\n    let secrethash = undefined;\n    for (const [key, sent] of Object.entries(state.sent)) {\n        if (sent.transfer.message_identifier.eq(message.message_identifier) &&\n            sent.transfer.recipient === action.meta.address) {\n            secrethash = key;\n            break;\n        }\n    }\n    if (!secrethash)\n        return;\n    yield transferProcessed({ message }, { secrethash });\n}));\n/**\n * Handles receiving a signed SecretRequest for some sent LockedTransfer\n *\n * @param action$  Observable of RaidenActions\n * @param state$  Observable of RaidenStates\n * @returns  Observable of output actions for this epic\n */\nexport const transferSecretRequestedEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    const message = action.payload.message;\n    if (!message || !Signed(SecretRequest).is(message))\n        return;\n    if (!(message.secrethash in state.secrets) || !(message.secrethash in state.sent))\n        return;\n    const transfer = state.sent[message.secrethash].transfer;\n    if (transfer.target !== action.meta.address ||\n        !transfer.payment_identifier.eq(message.payment_identifier) ||\n        !transfer.lock.amount.eq(message.amount) ||\n        !transfer.lock.expiration.eq(message.expiration))\n        return;\n    yield transferSecretRequest({ message }, { secrethash: message.secrethash });\n}));\n/**\n * Handles a transferSecretRequest action to send the respective secret\n *\n * @param action$  Observable of RaidenActions\n * @param state$  Observable of RaidenStates\n * @param signer  RaidenEpicDeps signer\n * @returns  Observable of output actions for this epic\n */\nexport const transferRevealSecretEpic = (action$, state$, { signer }) => {\n    const cache = new LruCache(32);\n    return state$.pipe(multicast(new ReplaySubject(1), state$ => action$.pipe(filter(isActionOf(transferSecretRequest)), concatMap(action => state$.pipe(first(), mergeMap(state => {\n        const target = state.sent[action.meta.secrethash].transfer.target;\n        const cached = cache.get(action.meta.secrethash);\n        if (cached)\n            return of(messageSend({ message: cached }, { address: target }));\n        const message = {\n            type: MessageType.SECRET_REVEAL,\n            message_identifier: makeMessageId(),\n            secret: state.secrets[action.meta.secrethash].secret,\n        };\n        return from(signMessage(signer, message)).pipe(tap(signed => cache.put(action.meta.secrethash, signed)), map(signed => messageSend({ message: signed }, { address: target })));\n    }))))));\n};\n/**\n * Handles receiving a valid SecretReveal from recipient (neighbor/partner)\n *\n * @param action$  Observable of RaidenActions\n * @param state$  Observable of RaidenStates\n * @returns  Observable of output actions for this epic\n */\nexport const transferSecretRevealedEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    const message = action.payload.message;\n    if (!message || !Signed(SecretReveal).is(message))\n        return;\n    const secrethash = keccak256(message.secret);\n    if (!(secrethash in state.sent) ||\n        action.meta.address !== state.sent[secrethash].transfer.recipient)\n        return;\n    // transferSecret is noop if we already know the secret (e.g. we're the initiator)\n    yield transferSecret({ secret: message.secret }, { secrethash });\n    yield transferUnlock({ message }, { secrethash });\n}));\n/**\n * Handles receiving a signed Processed for some sent Unlock\n *\n * @param action$  Observable of RaidenActions\n * @param state$  Observable of RaidenStates\n * @returns  Observable of output actions for this epic\n */\nexport const transferUnlockProcessedReceivedEpic = (action$, state$) => action$.pipe(filter(isActionOf(messageReceived)), withLatestFrom(state$), mergeMap(function* ([action, state]) {\n    const message = action.payload.message;\n    if (!message || !Signed(Processed).is(message))\n        return;\n    let secrethash;\n    for (const [key, sent] of Object.entries(state.sent)) {\n        if (sent.unlock &&\n            sent.unlock.message_identifier.eq(message.message_identifier) &&\n            sent.transfer.recipient === action.meta.address) {\n            secrethash = key;\n            break;\n        }\n    }\n    if (!secrethash)\n        return;\n    yield transferUnlockProcessed({ message }, { secrethash });\n}));\n/**\n * transferUnlockProcessed means transfer succeeded\n *\n * @param action$  Observable of RaidenActions\n * @param state$  Observable of RaidenStates\n * @returns  Observable of output actions for this epic\n */\nexport const transferSuccessEpic = (action$, state$) => action$.pipe(filter(isActionOf(transferUnlockProcessed)), withLatestFrom(state$), map(([action, state]) => transferred({\n    balanceProof: getBalanceProofFromEnvelopeMessage(state.sent[action.meta.secrethash].unlock),\n}, action.meta)));\n//# sourceMappingURL=epics.js.map","import { from, of } from 'rxjs';\nimport { catchError, filter, mergeMap, takeWhile, takeUntil } from 'rxjs/operators';\nimport { isActionOf } from 'typesafe-actions';\nimport { negate } from 'lodash';\nimport { raidenShutdown } from './store/actions';\nimport * as StoreEpics from './store/epics';\nimport * as ChannelsEpics from './channels/epics';\nimport * as TransportEpics from './transport/epics';\nimport * as TransfersEpics from './transfers/epics';\nexport const RaidenEpics = Object.assign({}, StoreEpics, ChannelsEpics, TransportEpics, TransfersEpics);\nexport const raidenRootEpic = (action$, state$, deps) => {\n    const shutdownNotification = action$.pipe(filter(isActionOf(raidenShutdown))), limitedAction$ = action$.pipe(takeWhile(negate(isActionOf(raidenShutdown)), true)), limitedState$ = state$.pipe(takeUntil(shutdownNotification));\n    // like combineEpics, but completes action$, state$ & output$ when a raidenShutdown goes through\n    return from(Object.values(RaidenEpics)).pipe(mergeMap(epic => epic(limitedAction$, limitedState$, deps)), catchError(err => of(raidenShutdown({ reason: err }))), takeUntil(shutdownNotification));\n};\n//# sourceMappingURL=epics.js.map","/**\n * Aggregate types and exported properties from actions from all modules\n */\nimport { pick } from 'lodash';\nimport { getType } from 'typesafe-actions';\nimport * as StoreActions from './store/actions';\nimport * as ChannelsActions from './channels/actions';\nimport * as TransportActions from './transport/actions';\nimport * as MessagesActions from './messages/actions';\nimport * as TransfersActions from './transfers/actions';\nexport const RaidenActions = Object.assign({}, StoreActions, ChannelsActions, TransportActions, MessagesActions, TransfersActions);\n/* Mapping { [type: string]: Action } of a subset of RaidenActions exposed as events */\nexport const RaidenEvents = pick(RaidenActions, [RaidenActions.raidenShutdown, RaidenActions.newBlock, RaidenActions.matrixPresenceUpdate].map(getType));\n//# sourceMappingURL=actions.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Wallet, Contract } from 'ethers';\nimport { Web3Provider, JsonRpcProvider } from 'ethers/providers';\nimport { bigNumberify, keccak256, } from 'ethers/utils';\nimport { Zero } from 'ethers/constants';\nimport { applyMiddleware, createStore } from 'redux';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { isActionOf } from 'typesafe-actions';\nimport { createLogger } from 'redux-logger';\nimport { debounce, findKey, transform, constant, pick, isEmpty } from 'lodash';\nimport { Subject, BehaviorSubject, AsyncSubject } from 'rxjs';\nimport { first, filter, map } from 'rxjs/operators';\nimport TokenNetworkRegistryAbi from './abi/TokenNetworkRegistry.json';\nimport TokenNetworkAbi from './abi/TokenNetwork.json';\nimport TokenAbi from './abi/Token.json';\nimport ropstenDeploy from './deployment/deployment_ropsten.json';\nimport rinkebyDeploy from './deployment/deployment_rinkeby.json';\nimport kovanDeploy from './deployment/deployment_kovan.json';\nimport goerliDeploy from './deployment/deployment_goerli.json';\nimport { ShutdownReason } from './constants';\nimport { Address, PrivateKey, Secret, Hash, UInt } from './utils/types';\nimport { RaidenState, initialState, encodeRaidenState, decodeRaidenState } from './store';\nimport { raidenReducer } from './reducer';\nimport { raidenRootEpic } from './epics';\nimport { RaidenEvents } from './actions';\nimport { raidenInit, raidenShutdown } from './store/actions';\nimport { tokenMonitored, channelOpened, channelOpenFailed, channelOpen, channelDeposited, channelDepositFailed, channelDeposit, channelClosed, channelCloseFailed, channelClose, channelSettled, channelSettleFailed, channelSettle, } from './channels/actions';\nimport { matrixPresenceUpdate, matrixRequestMonitorPresenceFailed, matrixRequestMonitorPresence, } from './transport/actions';\nimport { transfer, transferred, transferFailed } from './transfers/actions';\nimport { makeSecret } from './transfers/utils';\nexport class Raiden {\n    constructor(provider, network, signer, contractsInfo, state) {\n        this.tokenInfo = {};\n        this.provider = provider;\n        this.network = network;\n        this.signer = signer;\n        const address = state.address;\n        this.contracts = {\n            registry: new Contract(contractsInfo.TokenNetworkRegistry.address, TokenNetworkRegistryAbi, this.signer),\n            tokenNetworks: {},\n            tokens: {},\n        };\n        const middlewares = [];\n        if (process.env.NODE_ENV === 'development') {\n            middlewares.push(createLogger({ level: 'debug' }));\n        }\n        const state$ = new BehaviorSubject(state);\n        this.state$ = state$;\n        const action$ = new Subject();\n        this.action$ = action$;\n        const matrix$ = new AsyncSubject();\n        this.channels$ = state$.pipe(map(state => transform(\n        // transform state.channels to token-partner-raidenChannel map\n        state.channels, (result, partner2channel, tokenNetwork) => {\n            const token = findKey(state.tokens, tn => tn === tokenNetwork);\n            if (!token)\n                return; // shouldn't happen, token mapping is always bi-direction\n            result[token] = transform(\n            // transform Channel to RaidenChannel, with more info\n            partner2channel, (partner2raidenChannel, channel, partner) => (partner2raidenChannel[partner] = Object.assign({ state: channel.state }, pick(channel, ['id', 'settleTimeout', 'openBlock', 'closeBlock']), { token, tokenNetwork: tokenNetwork, partner: partner, ownDeposit: channel.own.deposit, partnerDeposit: channel.partner.deposit, \n                // balance is difference between is partner's and own transfered+locked amounts\n                balance: (channel.partner.balanceProof\n                    ? channel.partner.balanceProof.transferredAmount.add(channel.partner.balanceProof.lockedAmount)\n                    : Zero).sub(channel.own.balanceProof\n                    ? channel.own.balanceProof.transferredAmount.add(channel.own.balanceProof.lockedAmount)\n                    : Zero) })));\n        })));\n        this.events$ = action$.pipe(filter(isActionOf(Object.values(RaidenEvents))));\n        // minimum blockNumber of contracts deployment as start scan block\n        const epicMiddleware = createEpicMiddleware({\n            dependencies: {\n                stateOutput$: state$,\n                actionOutput$: action$,\n                matrix$,\n                provider,\n                network,\n                signer,\n                address,\n                contractsInfo,\n                registryContract: this.contracts.registry,\n                getTokenNetworkContract: this.getTokenNetworkContract.bind(this),\n                getTokenContract: this.getTokenContract.bind(this),\n            },\n        });\n        this.store = createStore(raidenReducer, state, applyMiddleware(...middlewares, epicMiddleware));\n        epicMiddleware.run(raidenRootEpic);\n        state = this.store.getState();\n        // use next from latest known blockNumber as start block when polling\n        this.provider.resetEventsBlock(state.blockNumber + 1);\n        this.resolveName = provider.resolveName.bind(provider);\n        // initialize epics, this will start monitoring previous token networks and open channels\n        this.store.dispatch(raidenInit());\n    }\n    /**\n     * Async helper factory to make a Raiden instance from more common parameters.\n     *\n     * @param connection\n     * - a JsonRpcProvider instance\n     * - a Metamask's web3.currentProvider object or\n     * - a hostname or remote json-rpc connection string\n     * @param account\n     * - a string address of an account loaded in provider or\n     * - a string private key or\n     * - a number index of an account loaded in provider (e.g. 0 for Metamask's loaded account)\n     * @param storageOrState\n     *   Storage/localStorage-like synchronous object where to load and store current state or\n     *   initial RaidenState-like object instead. In this case, user must listen state$ changes\n     *   and update them on whichever persistency option is used\n     * @param contracts\n     *   Contracts deployment info\n     * @returns Promise to Raiden SDK client instance\n     * An async factory is needed so we can do the needed async requests to construct the required\n     * parameters ahead of construction time, and avoid partial initialization then\n     **/\n    static create(connection, account, storageOrState, contracts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let provider;\n            if (typeof connection === 'string') {\n                provider = new JsonRpcProvider(connection);\n            }\n            else if (connection instanceof JsonRpcProvider) {\n                provider = connection;\n            }\n            else {\n                provider = new Web3Provider(connection);\n            }\n            const network = yield provider.getNetwork();\n            // if no ContractsInfo, try to populate from defaults\n            if (!contracts) {\n                switch (network.name) {\n                    case 'rinkeby':\n                        contracts = rinkebyDeploy.contracts;\n                        break;\n                    case 'ropsten':\n                        contracts = ropstenDeploy.contracts;\n                        break;\n                    case 'kovan':\n                        contracts = kovanDeploy.contracts;\n                        break;\n                    case 'goerli':\n                        contracts = goerliDeploy.contracts;\n                        break;\n                    default:\n                        throw new Error(`No deploy info provided nor recognized network: ${JSON.stringify(network)}`);\n                }\n            }\n            let signer;\n            if (typeof account === 'number') {\n                // index of account in provider\n                signer = provider.getSigner(account);\n            }\n            else if (Address.is(account)) {\n                // address\n                const accounts = yield provider.listAccounts();\n                if (!accounts.includes(account))\n                    throw new Error(`Account \"${account}\" not found in provider, got=${accounts}`);\n                signer = provider.getSigner(account);\n            }\n            else if (PrivateKey.is(account)) {\n                // private key\n                signer = new Wallet(account, provider);\n            }\n            else {\n                throw new Error('String account must be either a 0x-encoded address or private key');\n            }\n            const address = (yield signer.getAddress());\n            // use TokenNetworkRegistry deployment block as initial blockNumber, or 0\n            let loadedState = Object.assign({}, initialState, { blockNumber: contracts.TokenNetworkRegistry.block_number || 0, address });\n            // type guard\n            function isStorage(storageOrState) {\n                return storageOrState && typeof storageOrState.getItem === 'function';\n            }\n            let onState = undefined, onStateComplete = undefined;\n            if (storageOrState && isStorage(storageOrState)) {\n                const ns = `raiden_${network.name || network.chainId}_${contracts.TokenNetworkRegistry.address}_${address}`;\n                const loaded = Object.assign({}, loadedState, JSON.parse((yield storageOrState.getItem(ns)) || 'null'));\n                loadedState = decodeRaidenState(loaded);\n                // to be subscribed on raiden.state$\n                const debouncedState = debounce((state) => {\n                    storageOrState.setItem(ns, encodeRaidenState(state));\n                }, 1000, { maxWait: 5000 });\n                onState = debouncedState;\n                onStateComplete = () => debouncedState.flush();\n            }\n            else if (storageOrState && RaidenState.is(storageOrState)) {\n                loadedState = storageOrState;\n            }\n            else if (storageOrState /* typeof storageOrState === unknown */) {\n                loadedState = decodeRaidenState(storageOrState);\n            }\n            if (address !== loadedState.address)\n                throw new Error(`Mismatch between provided account and loaded state: \"${address}\" !== \"${loadedState.address}\"`);\n            const raiden = new Raiden(provider, network, signer, contracts, loadedState);\n            if (onState)\n                raiden.state$.subscribe(onState, onStateComplete, onStateComplete);\n            return raiden;\n        });\n    }\n    /**\n     * Triggers all epics to be unsubscribed\n     */\n    stop() {\n        this.store.dispatch(raidenShutdown({ reason: ShutdownReason.STOP }));\n    }\n    get state() {\n        return this.store.getState();\n    }\n    get address() {\n        return this.state.address;\n    }\n    getBlockNumber() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.provider.blockNumber || (yield this.provider.getBlockNumber());\n        });\n    }\n    /**\n     * Get ETH balance for given address or self\n     *\n     * @param address  Optional target address. If omitted, gets own balance\n     * @returns  BigNumber of ETH balance\n     */\n    getBalance(address) {\n        address = address || this.address;\n        if (!Address.is(address))\n            throw new Error('Invalid address');\n        return this.provider.getBalance(address);\n    }\n    /**\n     * Get token balance and token decimals for given address or self\n     *\n     * @param token  Token address to fetch balance. Must be one of the monitored tokens.\n     * @param address  Optional target address. If omitted, gets own balance\n     * @returns  BigNumber containing address's token balance\n     */\n    getTokenBalance(token, address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            address = address || this.address;\n            if (!Address.is(address) || !Address.is(token))\n                throw new Error('Invalid address');\n            if (!(token in this.state.tokens))\n                throw new Error(`token \"${token}\" not monitored`);\n            const tokenContract = this.getTokenContract(token);\n            return tokenContract.functions.balanceOf(address);\n        });\n    }\n    /**\n     * Get token information: totalSupply, decimals, name and symbol\n     * Rejects only if 'token' contract doesn't define totalSupply and decimals methods.\n     * name and symbol may be undefined, as they aren't actually part of ERC20 standard, although\n     * very common and defined on most token contracts.\n     *\n     * @param token address to fetch info from\n     * @returns TokenInfo\n     */\n    getTokenInfo(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token))\n                throw new Error('Invalid address');\n            /* tokenInfo isn't in state as it isn't relevant for being preserved, it's merely a cache */\n            if (!(token in this.state.tokens))\n                throw new Error(`token \"${token}\" not monitored`);\n            if (!(token in this.tokenInfo)) {\n                const tokenContract = this.getTokenContract(token);\n                const [totalSupply, decimals, name, symbol] = yield Promise.all([\n                    tokenContract.functions.totalSupply(),\n                    tokenContract.functions.decimals(),\n                    tokenContract.functions.name().catch(constant(undefined)),\n                    tokenContract.functions.symbol().catch(constant(undefined)),\n                ]);\n                this.tokenInfo[token] = { totalSupply, decimals, name, symbol };\n            }\n            return this.tokenInfo[token];\n        });\n    }\n    /**\n     * Returns a list of all token addresses registered as token networks in registry\n     *\n     * @returns Promise to list of token addresses\n     */\n    getTokenList() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // here we assume there'll be at least one token registered on a registry\n            // so, if the list is empty (e.g. on first init), raidenInitializationEpic is still fetching\n            // the TokenNetworkCreated events from registry, so we wait until some token is found\n            if (isEmpty(this.state.tokens))\n                yield this.action$\n                    .pipe(filter(isActionOf(tokenMonitored)), first())\n                    .toPromise();\n            return Object.keys(this.state.tokens);\n        });\n    }\n    /**\n     * Create a TokenNetwork contract linked to this.signer for given tokenNetwork address\n     * Caches the result and returns the same contract instance again for the same address on this\n     *\n     * @param address  TokenNetwork contract address (not token address!)\n     * @returns  TokenNetwork Contract instance\n     */\n    getTokenNetworkContract(address) {\n        if (!(address in this.contracts.tokenNetworks))\n            this.contracts.tokenNetworks[address] = new Contract(address, TokenNetworkAbi, this.signer);\n        return this.contracts.tokenNetworks[address];\n    }\n    /**\n     * Create a Token contract linked to this.signer for given token address\n     * Caches the result and returns the same contract instance again for the same address on this\n     *\n     * @param address  Token contract address\n     * @returns  Token Contract instance\n     */\n    getTokenContract(address) {\n        if (!(address in this.contracts.tokens))\n            this.contracts.tokens[address] = new Contract(address, TokenAbi, this.signer);\n        return this.contracts.tokens[address];\n    }\n    /**\n     * Open a channel on the tokenNetwork for given token address with partner\n     *\n     * @param token  Token address on currently configured token network registry\n     * @param partner  Partner address\n     * @param settleTimeout  openChannel parameter, defaults to 500\n     * @returns  txHash of channelOpen call, iff it succeeded\n     */\n    openChannel(token, partner, settleTimeout = 500) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token) || !Address.is(partner))\n                throw new Error('Invalid address');\n            const state = this.state;\n            const tokenNetwork = state.tokens[token];\n            if (!tokenNetwork)\n                throw new Error('Unknown token network');\n            const promise = this.action$\n                .pipe(filter(isActionOf([channelOpened, channelOpenFailed])), filter(action => action.meta.tokenNetwork === tokenNetwork && action.meta.partner === partner), first(), map(action => {\n                if (isActionOf(channelOpenFailed, action))\n                    throw action.payload;\n                return action.payload.txHash;\n            }))\n                .toPromise();\n            this.store.dispatch(channelOpen({ settleTimeout }, { tokenNetwork, partner }));\n            return promise;\n        });\n    }\n    /**\n     * Deposit tokens on channel between us and partner on tokenNetwork for token\n     *\n     * @param token  Token address on currently configured token network registry\n     * @param partner  Partner address\n     * @param deposit  Number of tokens to deposit on channel\n     * @returns  txHash of setTotalDeposit call, iff it succeeded\n     */\n    depositChannel(token, partner, deposit) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token) || !Address.is(partner))\n                throw new Error('Invalid address');\n            const state = this.state;\n            const tokenNetwork = state.tokens[token];\n            if (!tokenNetwork)\n                throw new Error('Unknown token network');\n            const promise = this.action$\n                .pipe(filter(isActionOf([channelDeposited, channelDepositFailed])), filter(action => action.meta.tokenNetwork === tokenNetwork && action.meta.partner === partner), first(), map(action => {\n                if (isActionOf(channelDepositFailed, action))\n                    throw action.payload;\n                return action.payload.txHash;\n            }))\n                .toPromise();\n            this.store.dispatch(channelDeposit({ deposit: bigNumberify(deposit) }, { tokenNetwork, partner }));\n            return promise;\n        });\n    }\n    /**\n     * Close channel between us and partner on tokenNetwork for token\n     * This method will fail if called on a channel not in 'opened' or 'closing' state.\n     * When calling this method on an 'opened' channel, its state becomes 'closing', and from there\n     * on, no payments can be performed on the channel. If for any reason the closeChannel\n     * transaction fails, channel's state stays as 'closing', and this method can be called again\n     * to retry sending 'closeChannel' transaction. After it's successful, channel becomes 'closed',\n     * and can be settled after 'settleTimeout' blocks (when it then becomes 'settleable').\n     *\n     * @param token  Token address on currently configured token network registry\n     * @param partner  Partner address\n     * @returns  txHash of closeChannel call, iff it succeeded\n     */\n    closeChannel(token, partner) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token) || !Address.is(partner))\n                throw new Error('Invalid address');\n            const state = this.state;\n            const tokenNetwork = state.tokens[token];\n            if (!tokenNetwork)\n                throw new Error('Unknown token network');\n            const promise = this.action$\n                .pipe(filter(isActionOf([channelClosed, channelCloseFailed])), filter(action => action.meta.tokenNetwork === tokenNetwork && action.meta.partner === partner), first(), map(action => {\n                if (isActionOf(channelCloseFailed, action))\n                    throw action.payload;\n                return action.payload.txHash;\n            }))\n                .toPromise();\n            this.store.dispatch(channelClose(undefined, { tokenNetwork, partner }));\n            return promise;\n        });\n    }\n    /**\n     * Settle channel between us and partner on tokenNetwork for token\n     * This method will fail if called on a channel not in 'settleable' or 'settling' state.\n     * Channel becomes 'settleable' settleTimeout blocks after closed (detected automatically\n     * while Raiden Light Client is running or later on restart). When calling it, channel state\n     * becomes 'settling'. If for any reason transaction fails, it'll stay on this state, and this\n     * method can be called again to re-send a settleChannel transaction.\n     *\n     * @param token  Token address on currently configured token network registry\n     * @param partner  Partner address\n     * @returns  txHash of settleChannel call, iff it succeeded\n     */\n    settleChannel(token, partner) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token) || !Address.is(partner))\n                throw new Error('Invalid address');\n            const state = this.state;\n            const tokenNetwork = state.tokens[token];\n            if (!tokenNetwork)\n                throw new Error('Unknown token network');\n            // wait for the corresponding success or error action\n            const promise = this.action$\n                .pipe(filter(isActionOf([channelSettled, channelSettleFailed])), filter(action => action.meta.tokenNetwork === tokenNetwork && action.meta.partner === partner), first(), map(action => {\n                if (isActionOf(channelSettleFailed, action))\n                    throw action.payload;\n                return action.payload.txHash;\n            }))\n                .toPromise();\n            this.store.dispatch(channelSettle(undefined, { tokenNetwork, partner }));\n            return promise;\n        });\n    }\n    /**\n     * Returns object describing address's users availability on transport\n     * After calling this method, any further presence update to valid transport peers of this\n     * address will trigger a corresponding MatrixPresenceUpdateAction on events$\n     *\n     * @param address checksummed address to be monitored\n     * @returns Promise to object describing availability and last event timestamp\n     */\n    getAvailability(address) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(address))\n                throw new Error('Invalid address');\n            const promise = this.action$\n                .pipe(filter(isActionOf([matrixPresenceUpdate, matrixRequestMonitorPresenceFailed])), filter(action => action.meta.address === address), first(), map(action => {\n                if (isActionOf(matrixRequestMonitorPresenceFailed, action))\n                    throw action.payload;\n                return action.payload;\n            }))\n                .toPromise();\n            this.store.dispatch(matrixRequestMonitorPresence(undefined, { address }));\n            return promise;\n        });\n    }\n    /**\n     * Send a Locked Transfer!\n     * Coverage ignored until we handle the full transfer lifecycle\n     * TODO: remove uncover when implemented\n     *\n     * @param token  Token address on currently configured token network registry\n     * @param target  Target address (must be getAvailability before)\n     * @param amount  Amount to try to transfer\n     * @param opts.paymentId  Optionally specify a paymentId to use for this transfer\n     * @param opts.secret  Optionally specify a secret to use on this transfer\n     *    (in which case, it'll be registered and revealed to target)\n     * @param opts.secrethash  Optionally specify a secrethash to use. If secret is provided,\n     *    secrethash must be the keccak256 hash of the secret. If no secret is provided, the target\n     *    must be informed of it by other means/externally.\n     * @returns A promise to the total transferred amount on this channel after transfer succeeds\n     */\n    /* istanbul ignore next */\n    transfer(token, target, amount, opts) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!Address.is(token) || !Address.is(target))\n                throw new Error('Invalid address');\n            const tokenNetwork = this.state.tokens[token];\n            if (!tokenNetwork)\n                throw new Error('Unknown token network');\n            amount = bigNumberify(amount);\n            if (!UInt(32).is(amount))\n                throw new Error('Invalid amount');\n            let paymentId = !opts || !opts.paymentId ? undefined : bigNumberify(opts.paymentId);\n            if (paymentId && !UInt(8).is(paymentId))\n                throw new Error('Invalid opts.paymentId');\n            let secret, secrethash;\n            if (opts) {\n                const _secret = opts.secret;\n                if (_secret !== undefined && !Secret.is(_secret))\n                    throw new Error('Invalid opts.secret');\n                const _secrethash = opts.secrethash;\n                if (_secrethash !== undefined && !Hash.is(_secrethash))\n                    throw new Error('Invalid opts.secrethash');\n                secret = _secret;\n                secrethash = _secrethash;\n            }\n            if (!secrethash) {\n                if (!secret)\n                    secret = makeSecret();\n                secrethash = keccak256(secret);\n            }\n            else if (secret && keccak256(secret) !== secrethash) {\n                throw new Error('Secret and secrethash must match if passing both');\n            }\n            const promise = this.action$\n                .pipe(filter(isActionOf([transferred, transferFailed])), filter(action => action.meta.secrethash === secrethash), first(), map(action => {\n                if (isActionOf(transferFailed, action))\n                    throw action.payload;\n                return action.payload.balanceProof.transferredAmount;\n            }))\n                .toPromise();\n            this.store.dispatch(transfer({ tokenNetwork, target, amount, paymentId, secret }, { secrethash }));\n            return promise;\n        });\n    }\n}\nexport default Raiden;\n//# sourceMappingURL=raiden.js.map","export { RaidenState } from './store';\nexport { ChannelState } from './channels';\nexport { ShutdownReason } from './constants';\nexport { Address } from './utils/types';\nexport * from './raiden';\n//# sourceMappingURL=index.js.map","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-layout',{attrs:{\"row\":\"\"}},[_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('div',{staticClass:\"header-text\"},[_vm._v(_vm._s(_vm.header))]),_c('div',{staticClass:\"divider\"})])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\nimport { Component, Prop, Vue } from 'vue-property-decorator';\n\n@Component({})\nexport default class ListHeader extends Vue {\n  @Prop({ required: true })\n  header!: string;\n}\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListHeader.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ListHeader.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./ListHeader.vue?vue&type=template&id=023677a9&scoped=true&\"\nimport script from \"./ListHeader.vue?vue&type=script&lang=ts&\"\nexport * from \"./ListHeader.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./ListHeader.vue?vue&type=style&index=0&id=023677a9&scoped=true&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"023677a9\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!/home/circleci/src/raiden-dapp/node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VFlex } from 'vuetify/lib'\nimport { VLayout } from 'vuetify/lib'\ninstallComponents(component, {VFlex,VLayout})\n","import { Raiden, RaidenChannel } from 'raiden';\nimport { Store } from 'vuex';\nimport { RootState } from '@/types';\nimport { Web3Provider } from '@/services/web3-provider';\nimport { BalanceUtils } from '@/utils/balance-utils';\nimport {\n  DeniedReason,\n  LeaveNetworkResult,\n  Progress,\n  Token\n} from '@/model/types';\nimport { BigNumber } from 'ethers/utils';\nimport { Zero } from 'ethers/constants';\nimport { filter } from 'rxjs/internal/operators';\n\nexport default class RaidenService {\n  private _raiden?: Raiden;\n  private store: Store<RootState>;\n\n  private static async createRaiden(provider: any): Promise<Raiden> {\n    try {\n      return await Raiden.create(provider, 0, window.localStorage);\n    } catch (e) {\n      throw new RaidenInitializationFailed(e);\n    }\n  }\n\n  private get raiden(): Raiden {\n    if (this._raiden === undefined) {\n      throw new Error('Raiden instance was not initialized');\n    } else {\n      return this._raiden;\n    }\n  }\n\n  private async updateTokenBalances() {\n    const cachedTokens = this.store.state.tokens;\n    for (const address in cachedTokens) {\n      if (!cachedTokens.hasOwnProperty(address)) {\n        continue;\n      }\n      const token = cachedTokens[address];\n      const balance = await this.raiden.getTokenBalance(address);\n      cachedTokens[address] = Object.assign({}, token, {\n        balance: balance,\n        units: BalanceUtils.toUnits(balance, token.decimals)\n      });\n    }\n\n    this.store.commit('updateTokens', cachedTokens);\n  }\n\n  constructor(store: Store<RootState>) {\n    this._raiden = undefined;\n    this.store = store;\n  }\n\n  async ensResolve(name: string): Promise<string> {\n    try {\n      return await this.raiden.resolveName(name);\n    } catch (e) {\n      throw new EnsResolveFailed(e);\n    }\n  }\n\n  async connect() {\n    try {\n      const provider = await Web3Provider.provider();\n      if (!provider) {\n        this.store.commit('noProvider');\n      } else {\n        const raiden = await RaidenService.createRaiden(provider);\n        this._raiden = raiden;\n\n        this.store.commit('account', await this.getAccount());\n        this.store.commit('balance', await this.getBalance());\n\n        this.setupEventListeners(raiden);\n\n        raiden.channels$.subscribe(value => {\n          this.store.commit('updateChannels', value);\n        });\n\n        this.store.commit('network', raiden.network);\n      }\n    } catch (e) {\n      console.error(e);\n      let deniedReason: DeniedReason;\n      if (e.message && e.message.indexOf('No deploy info provided') > -1) {\n        deniedReason = DeniedReason.UNSUPPORTED_NETWORK;\n      } else if (e instanceof RaidenInitializationFailed) {\n        deniedReason = DeniedReason.INITIALIZATION_FAILED;\n      } else {\n        deniedReason = DeniedReason.NO_ACCOUNT;\n      }\n      this.store.commit('accessDenied', deniedReason);\n    }\n\n    this.store.commit('loadComplete');\n  }\n\n  private setupEventListeners(raiden: Raiden) {\n    raiden.events$\n      .pipe(filter(value => value.type === 'raidenShutdown'))\n      .subscribe(() => this.store.commit('reset'));\n\n    raiden.events$\n      .pipe(filter(value => value.type === 'newBlock'))\n      .subscribe(async () => await this.updateTokenBalances());\n  }\n\n  disconnect() {\n    this.raiden.stop();\n  }\n\n  async getAccount(): Promise<string> {\n    return this.raiden.address;\n  }\n\n  async getBalance(): Promise<string> {\n    const balance = await this.raiden.getBalance();\n    return BalanceUtils.toEth(balance);\n  }\n\n  async getToken(tokenAddress: string): Promise<Token | null> {\n    const raiden = this.raiden;\n    try {\n      const [balance, { decimals, symbol, name }] = await Promise.all([\n        raiden.getTokenBalance(tokenAddress),\n        raiden.getTokenInfo(tokenAddress)\n      ]);\n      return {\n        name: name,\n        symbol: symbol,\n        balance: balance,\n        decimals: decimals,\n        units: BalanceUtils.toUnits(balance, decimals),\n        address: tokenAddress\n      };\n    } catch (e) {\n      console.error(e);\n      return null;\n    }\n  }\n\n  async openChannel(\n    token: string,\n    partner: string,\n    amount: BigNumber,\n    progress?: (progress: Progress) => void\n  ): Promise<void> {\n    const progressUpdater = (current: number, total: number) => {\n      if (progress) {\n        progress({\n          current,\n          total\n        });\n      }\n    };\n\n    const raiden = this.raiden;\n    progressUpdater(1, 3);\n\n    try {\n      await raiden.openChannel(token, partner);\n    } catch (e) {\n      throw new ChannelOpenFailed(e);\n    }\n\n    progressUpdater(2, 3);\n\n    if (amount.gt(Zero)) {\n      await this.deposit(token, partner, amount);\n    }\n  }\n\n  async leaveNetwork(\n    address: string,\n    progress?: (progress: Progress) => void\n  ): Promise<LeaveNetworkResult> {\n    const channels: RaidenChannel[] = this.store.getters.channels(address);\n    const result = {\n      closed: 0,\n      failed: 0\n    };\n\n    const total = channels.length;\n    for (let i = 0; i < total; i++) {\n      if (progress) {\n        progress({\n          current: i + 1,\n          total: total\n        });\n      }\n\n      const channel = channels[i];\n      try {\n        await this.closeChannel(channel.token, channel.partner);\n        result.closed += 1;\n      } catch (e) {\n        result.failed += 1;\n      }\n    }\n\n    return result;\n  }\n\n  async closeChannel(token: string, partner: string) {\n    try {\n      await this.raiden.closeChannel(token, partner);\n    } catch (e) {\n      throw new ChannelCloseFailed(e);\n    }\n  }\n\n  async deposit(token: string, partner: string, amount: BigNumber) {\n    try {\n      await this.raiden.depositChannel(token, partner, amount);\n    } catch (e) {\n      throw new ChannelDepositFailed(e);\n    }\n  }\n\n  async settleChannel(token: string, partner: string) {\n    try {\n      await this.raiden.settleChannel(token, partner);\n    } catch (e) {\n      throw new ChannelSettleFailed(e);\n    }\n  }\n\n  async fetchTokens() {\n    const cache = this.store.state.tokens;\n    let updateEntries = 0;\n    let tokens: string[];\n    try {\n      tokens = await this.raiden.getTokenList();\n    } catch (e) {\n      tokens = [];\n    }\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n      if (token in cache) {\n        continue;\n      }\n      const retrievedToken = await this.getToken(token);\n      if (retrievedToken) {\n        cache[token] = retrievedToken;\n        updateEntries += 1;\n      }\n    }\n\n    if (updateEntries > 0) {\n      this.store.commit('updateTokens', cache);\n    }\n  }\n\n  async transfer(token: string, target: string, amount: BigNumber) {\n    try {\n      await this.raiden.getAvailability(target);\n      await this.raiden.transfer(token, target, amount);\n    } catch (e) {\n      throw new TransferFailed(e);\n    }\n  }\n}\n\nexport class ChannelSettleFailed extends Error {}\n\nexport class ChannelCloseFailed extends Error {}\n\nexport class ChannelOpenFailed extends Error {}\n\nexport class ChannelDepositFailed extends Error {}\n\nexport class EnsResolveFailed extends Error {}\n\nexport class TransferFailed extends Error {}\n\nexport class RaidenInitializationFailed extends Error {}\n","export class Web3Provider {\n  static async provider() {\n    const ethereum = window.ethereum;\n    let provider = null;\n    if (typeof ethereum !== 'undefined') {\n      await ethereum.enable();\n      provider = ethereum;\n    } else if (window.web3) {\n      provider = window.web3.currentProvider;\n    }\n\n    if (provider && provider.isMetaMask) {\n      provider.autoRefreshOnNetworkChange = false;\n    }\n\n    return provider;\n  }\n\n  static injectedWeb3Available = (): boolean => window.ethereum || window.web3;\n}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SplashScreen.vue?vue&type=style&index=0&id=796a8ef9&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SplashScreen.vue?vue&type=style&index=0&id=796a8ef9&lang=scss&scoped=true&\""],"sourceRoot":""}